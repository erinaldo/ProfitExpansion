//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProfitContenedor
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Profit_RGEntities : DbContext
    {
        public Profit_RGEntities()
            : base("name=Profit_RGEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Art_min> Art_min { get; set; }
        public virtual DbSet<docum_prov> docum_prov { get; set; }
        public virtual DbSet<Embarque> Embarques { get; set; }
        public virtual DbSet<Emp_asoc> Emp_asoc { get; set; }
        public virtual DbSet<Empresa> Empresas { get; set; }
        public virtual DbSet<Excepcion_H> Excepcion_H { get; set; }
        public virtual DbSet<Excepcion_P> Excepcion_P { get; set; }
        public virtual DbSet<Fact_imp> Fact_imp { get; set; }
        public virtual DbSet<Fact_imp_reng> Fact_imp_reng { get; set; }
        public virtual DbSet<Gene_claves> Gene_claves { get; set; }
        public virtual DbSet<Ig_pedidos> Ig_pedidos { get; set; }
        public virtual DbSet<Naviera> Navieras { get; set; }
        public virtual DbSet<Ord_reng> Ord_reng { get; set; }
        public virtual DbSet<Ordene> Ordenes { get; set; }
        public virtual DbSet<Pantalla_Stock> Pantalla_Stock { get; set; }
        public virtual DbSet<Reng_emb> Reng_emb { get; set; }
        public virtual DbSet<Usu_Emp> Usu_Emp { get; set; }
        public virtual DbSet<Pistas_Gen> Pistas_Gen { get; set; }
        public virtual DbSet<Valores_prog> Valores_prog { get; set; }
        public virtual DbSet<Programa> Programas { get; set; }
        public virtual DbSet<Lim_Credito> Lim_Credito { get; set; }
        public virtual DbSet<Precio> Precios { get; set; }
        public virtual DbSet<Filtro> Filtros { get; set; }
        public virtual DbSet<Reporte> Reportes { get; set; }
        public virtual DbSet<Usu_Prg> Usu_Prg { get; set; }
        public virtual DbSet<Autori_Equipo> Autori_Equipo { get; set; }
        public virtual DbSet<Metas_Vtas> Metas_Vtas { get; set; }
        public virtual DbSet<GIT_Campos_Logicos> GIT_Campos_Logicos { get; set; }
        public virtual DbSet<GIT_Consultor> GIT_Consultor { get; set; }
        public virtual DbSet<GIT_Ubicaciones> GIT_Ubicaciones { get; set; }
        public virtual DbSet<GIT_Catalogo_Activo> GIT_Catalogo_Activo { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
        public virtual DbSet<Est_diaria> Est_diaria { get; set; }
        public virtual DbSet<GIT_Asign_Equipo> GIT_Asign_Equipo { get; set; }
        public virtual DbSet<Divisa> Divisas { get; set; }
        public virtual DbSet<GIT_Mantenimiento> GIT_Mantenimiento { get; set; }
        public virtual DbSet<Parametro> Parametros { get; set; }
        public virtual DbSet<Supervisado> Supervisados { get; set; }
        public virtual DbSet<GIT_Mov__E_S> GIT_Mov__E_S { get; set; }
        public virtual DbSet<GIT_Config_Logica> GIT_Config_Logica { get; set; }
        public virtual DbSet<GIT_Activo> GIT_Activo { get; set; }
    
        public virtual int pActualizaArticuloPreparado(string co_art, Nullable<decimal> aux01, Nullable<int> fact_num, string empresa)
        {
            var co_artParameter = co_art != null ?
                new ObjectParameter("Co_art", co_art) :
                new ObjectParameter("Co_art", typeof(string));
    
            var aux01Parameter = aux01.HasValue ?
                new ObjectParameter("Aux01", aux01) :
                new ObjectParameter("Aux01", typeof(decimal));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizaArticuloPreparado", co_artParameter, aux01Parameter, fact_numParameter, empresaParameter);
        }
    
        public virtual int pActualizar_docum_prov(Nullable<int> nro_track, Nullable<System.DateTime> fecha, string nro_trans, Nullable<decimal> monto, string banco, string cta_tarj, string beneficiario)
        {
            var nro_trackParameter = nro_track.HasValue ?
                new ObjectParameter("nro_track", nro_track) :
                new ObjectParameter("nro_track", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var nro_transParameter = nro_trans != null ?
                new ObjectParameter("nro_trans", nro_trans) :
                new ObjectParameter("nro_trans", typeof(string));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(decimal));
    
            var bancoParameter = banco != null ?
                new ObjectParameter("banco", banco) :
                new ObjectParameter("banco", typeof(string));
    
            var cta_tarjParameter = cta_tarj != null ?
                new ObjectParameter("cta_tarj", cta_tarj) :
                new ObjectParameter("cta_tarj", typeof(string));
    
            var beneficiarioParameter = beneficiario != null ?
                new ObjectParameter("beneficiario", beneficiario) :
                new ObjectParameter("beneficiario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizar_docum_prov", nro_trackParameter, fechaParameter, nro_transParameter, montoParameter, bancoParameter, cta_tarjParameter, beneficiarioParameter);
        }
    
        public virtual int pActualizarConsecutivo(string sCampo, string sCampoOri, Nullable<int> iValor, string sCo_Us_Mo, byte[] tsValidadorOri)
        {
            var sCampoParameter = sCampo != null ?
                new ObjectParameter("sCampo", sCampo) :
                new ObjectParameter("sCampo", typeof(string));
    
            var sCampoOriParameter = sCampoOri != null ?
                new ObjectParameter("sCampoOri", sCampoOri) :
                new ObjectParameter("sCampoOri", typeof(string));
    
            var iValorParameter = iValor.HasValue ?
                new ObjectParameter("iValor", iValor) :
                new ObjectParameter("iValor", typeof(int));
    
            var sCo_Us_MoParameter = sCo_Us_Mo != null ?
                new ObjectParameter("sCo_Us_Mo", sCo_Us_Mo) :
                new ObjectParameter("sCo_Us_Mo", typeof(string));
    
            var tsValidadorOriParameter = tsValidadorOri != null ?
                new ObjectParameter("tsValidadorOri", tsValidadorOri) :
                new ObjectParameter("tsValidadorOri", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarConsecutivo", sCampoParameter, sCampoOriParameter, iValorParameter, sCo_Us_MoParameter, tsValidadorOriParameter);
        }
    
        public virtual int pActualizarEmbarque(string bl, Nullable<System.DateTime> fecha_sal, Nullable<System.DateTime> fecha_lleg, string co_consig, string des_consig, string pto_sal, string pto_lleg, string co_naviera, string co_shipper, string shipper_des, Nullable<int> c20p, Nullable<int> c40p, byte[] valiador)
        {
            var blParameter = bl != null ?
                new ObjectParameter("bl", bl) :
                new ObjectParameter("bl", typeof(string));
    
            var fecha_salParameter = fecha_sal.HasValue ?
                new ObjectParameter("fecha_sal", fecha_sal) :
                new ObjectParameter("fecha_sal", typeof(System.DateTime));
    
            var fecha_llegParameter = fecha_lleg.HasValue ?
                new ObjectParameter("fecha_lleg", fecha_lleg) :
                new ObjectParameter("fecha_lleg", typeof(System.DateTime));
    
            var co_consigParameter = co_consig != null ?
                new ObjectParameter("co_consig", co_consig) :
                new ObjectParameter("co_consig", typeof(string));
    
            var des_consigParameter = des_consig != null ?
                new ObjectParameter("des_consig", des_consig) :
                new ObjectParameter("des_consig", typeof(string));
    
            var pto_salParameter = pto_sal != null ?
                new ObjectParameter("pto_sal", pto_sal) :
                new ObjectParameter("pto_sal", typeof(string));
    
            var pto_llegParameter = pto_lleg != null ?
                new ObjectParameter("pto_lleg", pto_lleg) :
                new ObjectParameter("pto_lleg", typeof(string));
    
            var co_navieraParameter = co_naviera != null ?
                new ObjectParameter("co_naviera", co_naviera) :
                new ObjectParameter("co_naviera", typeof(string));
    
            var co_shipperParameter = co_shipper != null ?
                new ObjectParameter("co_shipper", co_shipper) :
                new ObjectParameter("co_shipper", typeof(string));
    
            var shipper_desParameter = shipper_des != null ?
                new ObjectParameter("shipper_des", shipper_des) :
                new ObjectParameter("shipper_des", typeof(string));
    
            var c20pParameter = c20p.HasValue ?
                new ObjectParameter("c20p", c20p) :
                new ObjectParameter("c20p", typeof(int));
    
            var c40pParameter = c40p.HasValue ?
                new ObjectParameter("c40p", c40p) :
                new ObjectParameter("c40p", typeof(int));
    
            var valiadorParameter = valiador != null ?
                new ObjectParameter("valiador", valiador) :
                new ObjectParameter("valiador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarEmbarque", blParameter, fecha_salParameter, fecha_llegParameter, co_consigParameter, des_consigParameter, pto_salParameter, pto_llegParameter, co_navieraParameter, co_shipperParameter, shipper_desParameter, c20pParameter, c40pParameter, valiadorParameter);
        }
    
        public virtual int pActualizarEmpresa(string co_empresa, string des_emp, string email, byte[] clave, string servidor, Nullable<int> puerto, Nullable<int> ssl, string almacen, byte[] validador, string co_tran, string forma_pag, string moneda, string co_sucu, string nomina, string contab)
        {
            var co_empresaParameter = co_empresa != null ?
                new ObjectParameter("Co_empresa", co_empresa) :
                new ObjectParameter("Co_empresa", typeof(string));
    
            var des_empParameter = des_emp != null ?
                new ObjectParameter("des_emp", des_emp) :
                new ObjectParameter("des_emp", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(byte[]));
    
            var servidorParameter = servidor != null ?
                new ObjectParameter("servidor", servidor) :
                new ObjectParameter("servidor", typeof(string));
    
            var puertoParameter = puerto.HasValue ?
                new ObjectParameter("puerto", puerto) :
                new ObjectParameter("puerto", typeof(int));
    
            var sslParameter = ssl.HasValue ?
                new ObjectParameter("ssl", ssl) :
                new ObjectParameter("ssl", typeof(int));
    
            var almacenParameter = almacen != null ?
                new ObjectParameter("almacen", almacen) :
                new ObjectParameter("almacen", typeof(string));
    
            var validadorParameter = validador != null ?
                new ObjectParameter("validador", validador) :
                new ObjectParameter("validador", typeof(byte[]));
    
            var co_tranParameter = co_tran != null ?
                new ObjectParameter("co_tran", co_tran) :
                new ObjectParameter("co_tran", typeof(string));
    
            var forma_pagParameter = forma_pag != null ?
                new ObjectParameter("forma_pag", forma_pag) :
                new ObjectParameter("forma_pag", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(string));
    
            var co_sucuParameter = co_sucu != null ?
                new ObjectParameter("co_sucu", co_sucu) :
                new ObjectParameter("co_sucu", typeof(string));
    
            var nominaParameter = nomina != null ?
                new ObjectParameter("nomina", nomina) :
                new ObjectParameter("nomina", typeof(string));
    
            var contabParameter = contab != null ?
                new ObjectParameter("contab", contab) :
                new ObjectParameter("contab", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarEmpresa", co_empresaParameter, des_empParameter, emailParameter, claveParameter, servidorParameter, puertoParameter, sslParameter, almacenParameter, validadorParameter, co_tranParameter, forma_pagParameter, monedaParameter, co_sucuParameter, nominaParameter, contabParameter);
        }
    
        public virtual int pActualizarFact_imp(Nullable<int> fact_num, string empresa, string nro_doc, Nullable<System.DateTime> fecha, string co_prov, string observ, Nullable<int> status, Nullable<bool> anulado, Nullable<decimal> flete, Nullable<decimal> seguro, Nullable<decimal> otros, Nullable<decimal> total_net, byte[] validador)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var nro_docParameter = nro_doc != null ?
                new ObjectParameter("nro_doc", nro_doc) :
                new ObjectParameter("nro_doc", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var co_provParameter = co_prov != null ?
                new ObjectParameter("co_prov", co_prov) :
                new ObjectParameter("co_prov", typeof(string));
    
            var observParameter = observ != null ?
                new ObjectParameter("observ", observ) :
                new ObjectParameter("observ", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var anuladoParameter = anulado.HasValue ?
                new ObjectParameter("anulado", anulado) :
                new ObjectParameter("anulado", typeof(bool));
    
            var fleteParameter = flete.HasValue ?
                new ObjectParameter("flete", flete) :
                new ObjectParameter("flete", typeof(decimal));
    
            var seguroParameter = seguro.HasValue ?
                new ObjectParameter("seguro", seguro) :
                new ObjectParameter("seguro", typeof(decimal));
    
            var otrosParameter = otros.HasValue ?
                new ObjectParameter("otros", otros) :
                new ObjectParameter("otros", typeof(decimal));
    
            var total_netParameter = total_net.HasValue ?
                new ObjectParameter("total_net", total_net) :
                new ObjectParameter("total_net", typeof(decimal));
    
            var validadorParameter = validador != null ?
                new ObjectParameter("validador", validador) :
                new ObjectParameter("validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarFact_imp", fact_numParameter, empresaParameter, nro_docParameter, fechaParameter, co_provParameter, observParameter, statusParameter, anuladoParameter, fleteParameter, seguroParameter, otrosParameter, total_netParameter, validadorParameter);
        }
    
        public virtual int pActualizarIg_pedido(string rowguid)
        {
            var rowguidParameter = rowguid != null ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarIg_pedido", rowguidParameter);
        }
    
        public virtual int pActualizarNaviera(string co_naviera, string navi_des, string empresa, string emp_des, string co_prov, string prov_des, byte[] validador)
        {
            var co_navieraParameter = co_naviera != null ?
                new ObjectParameter("co_naviera", co_naviera) :
                new ObjectParameter("co_naviera", typeof(string));
    
            var navi_desParameter = navi_des != null ?
                new ObjectParameter("navi_des", navi_des) :
                new ObjectParameter("navi_des", typeof(string));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var emp_desParameter = emp_des != null ?
                new ObjectParameter("emp_des", emp_des) :
                new ObjectParameter("emp_des", typeof(string));
    
            var co_provParameter = co_prov != null ?
                new ObjectParameter("co_prov", co_prov) :
                new ObjectParameter("co_prov", typeof(string));
    
            var prov_desParameter = prov_des != null ?
                new ObjectParameter("prov_des", prov_des) :
                new ObjectParameter("prov_des", typeof(string));
    
            var validadorParameter = validador != null ?
                new ObjectParameter("validador", validador) :
                new ObjectParameter("validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarNaviera", co_navieraParameter, navi_desParameter, empresaParameter, emp_desParameter, co_provParameter, prov_desParameter, validadorParameter);
        }
    
        public virtual int pActualizarOrdenes(Nullable<int> fact_num, string empresa, string co_prov, string prov_des, Nullable<System.DateTime> fecha, string observ, Nullable<int> status, Nullable<bool> anulado, Nullable<decimal> total_net, byte[] validador)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var co_provParameter = co_prov != null ?
                new ObjectParameter("co_prov", co_prov) :
                new ObjectParameter("co_prov", typeof(string));
    
            var prov_desParameter = prov_des != null ?
                new ObjectParameter("prov_des", prov_des) :
                new ObjectParameter("prov_des", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var observParameter = observ != null ?
                new ObjectParameter("observ", observ) :
                new ObjectParameter("observ", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var anuladoParameter = anulado.HasValue ?
                new ObjectParameter("anulado", anulado) :
                new ObjectParameter("anulado", typeof(bool));
    
            var total_netParameter = total_net.HasValue ?
                new ObjectParameter("total_net", total_net) :
                new ObjectParameter("total_net", typeof(decimal));
    
            var validadorParameter = validador != null ?
                new ObjectParameter("validador", validador) :
                new ObjectParameter("validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarOrdenes", fact_numParameter, empresaParameter, co_provParameter, prov_desParameter, fechaParameter, observParameter, statusParameter, anuladoParameter, total_netParameter, validadorParameter);
        }
    
        public virtual int pActualizarOrdenes_Reng(Nullable<int> fact_num, Nullable<int> reng_num, string co_art, string art_des, Nullable<decimal> total_art, Nullable<decimal> precio, Nullable<decimal> pendiente, byte[] validador)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            var reng_numParameter = reng_num.HasValue ?
                new ObjectParameter("reng_num", reng_num) :
                new ObjectParameter("reng_num", typeof(int));
    
            var co_artParameter = co_art != null ?
                new ObjectParameter("co_art", co_art) :
                new ObjectParameter("co_art", typeof(string));
    
            var art_desParameter = art_des != null ?
                new ObjectParameter("art_des", art_des) :
                new ObjectParameter("art_des", typeof(string));
    
            var total_artParameter = total_art.HasValue ?
                new ObjectParameter("total_art", total_art) :
                new ObjectParameter("total_art", typeof(decimal));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            var pendienteParameter = pendiente.HasValue ?
                new ObjectParameter("pendiente", pendiente) :
                new ObjectParameter("pendiente", typeof(decimal));
    
            var validadorParameter = validador != null ?
                new ObjectParameter("validador", validador) :
                new ObjectParameter("validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarOrdenes_Reng", fact_numParameter, reng_numParameter, co_artParameter, art_desParameter, total_artParameter, precioParameter, pendienteParameter, validadorParameter);
        }
    
        public virtual int pActualizarPantalla_Stock(string emp_Art, string almacen, byte[] validador)
        {
            var emp_ArtParameter = emp_Art != null ?
                new ObjectParameter("Emp_Art", emp_Art) :
                new ObjectParameter("Emp_Art", typeof(string));
    
            var almacenParameter = almacen != null ?
                new ObjectParameter("Almacen", almacen) :
                new ObjectParameter("Almacen", typeof(string));
    
            var validadorParameter = validador != null ?
                new ObjectParameter("Validador", validador) :
                new ObjectParameter("Validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarPantalla_Stock", emp_ArtParameter, almacenParameter, validadorParameter);
        }
    
        public virtual int pActualizarPedido(string empresa, Nullable<int> fact_num, string entrega, string recibe)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            var entregaParameter = entrega != null ?
                new ObjectParameter("Entrega", entrega) :
                new ObjectParameter("Entrega", typeof(string));
    
            var recibeParameter = recibe != null ?
                new ObjectParameter("Recibe", recibe) :
                new ObjectParameter("Recibe", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarPedido", empresaParameter, fact_numParameter, entregaParameter, recibeParameter);
        }
    
        public virtual int pActualizarReng_emb(Nullable<decimal> total_art, Nullable<decimal> reng_neto, Nullable<System.Guid> rowguid)
        {
            var total_artParameter = total_art.HasValue ?
                new ObjectParameter("total_art", total_art) :
                new ObjectParameter("total_art", typeof(decimal));
    
            var reng_netoParameter = reng_neto.HasValue ?
                new ObjectParameter("reng_neto", reng_neto) :
                new ObjectParameter("reng_neto", typeof(decimal));
    
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarReng_emb", total_artParameter, reng_netoParameter, rowguidParameter);
        }
    
        public virtual int pActualizarUsuarios(string co_usuario, string nombre, Nullable<int> tipo, string co_rdv, byte[] clave, byte[] ilustracion, byte[] validador, Nullable<int> p_nav, Nullable<int> p_emp, Nullable<int> p_con, Nullable<int> p_mco, Nullable<int> p_usu, Nullable<int> p_pst, Nullable<int> p_art, Nullable<int> p_clave, Nullable<int> p_malm, Nullable<int> p_ord, Nullable<int> p_pped, Nullable<int> p_cxc, Nullable<int> p_regrep, Nullable<int> p_envrep, Nullable<int> p_rep, Nullable<int> p_lcre, Nullable<int> p_com, Nullable<int> p_metas, Nullable<int> p_ubi, Nullable<int> p_cons, Nullable<int> p_camp_L, Nullable<int> p_acti, Nullable<int> p_consu, Nullable<int> p_caso, string co_profit, Nullable<int> p_control, Nullable<int> p_supervi, string departamento)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var co_rdvParameter = co_rdv != null ?
                new ObjectParameter("co_rdv", co_rdv) :
                new ObjectParameter("co_rdv", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(byte[]));
    
            var ilustracionParameter = ilustracion != null ?
                new ObjectParameter("ilustracion", ilustracion) :
                new ObjectParameter("ilustracion", typeof(byte[]));
    
            var validadorParameter = validador != null ?
                new ObjectParameter("Validador", validador) :
                new ObjectParameter("Validador", typeof(byte[]));
    
            var p_navParameter = p_nav.HasValue ?
                new ObjectParameter("p_nav", p_nav) :
                new ObjectParameter("p_nav", typeof(int));
    
            var p_empParameter = p_emp.HasValue ?
                new ObjectParameter("p_emp", p_emp) :
                new ObjectParameter("p_emp", typeof(int));
    
            var p_conParameter = p_con.HasValue ?
                new ObjectParameter("p_con", p_con) :
                new ObjectParameter("p_con", typeof(int));
    
            var p_mcoParameter = p_mco.HasValue ?
                new ObjectParameter("p_mco", p_mco) :
                new ObjectParameter("p_mco", typeof(int));
    
            var p_usuParameter = p_usu.HasValue ?
                new ObjectParameter("p_usu", p_usu) :
                new ObjectParameter("p_usu", typeof(int));
    
            var p_pstParameter = p_pst.HasValue ?
                new ObjectParameter("p_pst", p_pst) :
                new ObjectParameter("p_pst", typeof(int));
    
            var p_artParameter = p_art.HasValue ?
                new ObjectParameter("p_art", p_art) :
                new ObjectParameter("p_art", typeof(int));
    
            var p_claveParameter = p_clave.HasValue ?
                new ObjectParameter("p_clave", p_clave) :
                new ObjectParameter("p_clave", typeof(int));
    
            var p_malmParameter = p_malm.HasValue ?
                new ObjectParameter("p_malm", p_malm) :
                new ObjectParameter("p_malm", typeof(int));
    
            var p_ordParameter = p_ord.HasValue ?
                new ObjectParameter("p_ord", p_ord) :
                new ObjectParameter("p_ord", typeof(int));
    
            var p_ppedParameter = p_pped.HasValue ?
                new ObjectParameter("p_pped", p_pped) :
                new ObjectParameter("p_pped", typeof(int));
    
            var p_cxcParameter = p_cxc.HasValue ?
                new ObjectParameter("p_cxc", p_cxc) :
                new ObjectParameter("p_cxc", typeof(int));
    
            var p_regrepParameter = p_regrep.HasValue ?
                new ObjectParameter("p_regrep", p_regrep) :
                new ObjectParameter("p_regrep", typeof(int));
    
            var p_envrepParameter = p_envrep.HasValue ?
                new ObjectParameter("p_envrep", p_envrep) :
                new ObjectParameter("p_envrep", typeof(int));
    
            var p_repParameter = p_rep.HasValue ?
                new ObjectParameter("p_rep", p_rep) :
                new ObjectParameter("p_rep", typeof(int));
    
            var p_lcreParameter = p_lcre.HasValue ?
                new ObjectParameter("p_lcre", p_lcre) :
                new ObjectParameter("p_lcre", typeof(int));
    
            var p_comParameter = p_com.HasValue ?
                new ObjectParameter("p_com", p_com) :
                new ObjectParameter("p_com", typeof(int));
    
            var p_metasParameter = p_metas.HasValue ?
                new ObjectParameter("p_metas", p_metas) :
                new ObjectParameter("p_metas", typeof(int));
    
            var p_ubiParameter = p_ubi.HasValue ?
                new ObjectParameter("p_ubi", p_ubi) :
                new ObjectParameter("p_ubi", typeof(int));
    
            var p_consParameter = p_cons.HasValue ?
                new ObjectParameter("p_cons", p_cons) :
                new ObjectParameter("p_cons", typeof(int));
    
            var p_camp_LParameter = p_camp_L.HasValue ?
                new ObjectParameter("p_camp_L", p_camp_L) :
                new ObjectParameter("p_camp_L", typeof(int));
    
            var p_actiParameter = p_acti.HasValue ?
                new ObjectParameter("p_acti", p_acti) :
                new ObjectParameter("p_acti", typeof(int));
    
            var p_consuParameter = p_consu.HasValue ?
                new ObjectParameter("p_consu", p_consu) :
                new ObjectParameter("p_consu", typeof(int));
    
            var p_casoParameter = p_caso.HasValue ?
                new ObjectParameter("p_caso", p_caso) :
                new ObjectParameter("p_caso", typeof(int));
    
            var co_profitParameter = co_profit != null ?
                new ObjectParameter("co_profit", co_profit) :
                new ObjectParameter("co_profit", typeof(string));
    
            var p_controlParameter = p_control.HasValue ?
                new ObjectParameter("p_control", p_control) :
                new ObjectParameter("p_control", typeof(int));
    
            var p_superviParameter = p_supervi.HasValue ?
                new ObjectParameter("p_supervi", p_supervi) :
                new ObjectParameter("p_supervi", typeof(int));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarUsuarios", co_usuarioParameter, nombreParameter, tipoParameter, co_rdvParameter, claveParameter, ilustracionParameter, validadorParameter, p_navParameter, p_empParameter, p_conParameter, p_mcoParameter, p_usuParameter, p_pstParameter, p_artParameter, p_claveParameter, p_malmParameter, p_ordParameter, p_ppedParameter, p_cxcParameter, p_regrepParameter, p_envrepParameter, p_repParameter, p_lcreParameter, p_comParameter, p_metasParameter, p_ubiParameter, p_consParameter, p_camp_LParameter, p_actiParameter, p_consuParameter, p_casoParameter, co_profitParameter, p_controlParameter, p_superviParameter, departamentoParameter);
        }
    
        public virtual int pAnula_ProcesaPedido(string empresa, Nullable<int> fact_num, Nullable<int> opcion)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            var opcionParameter = opcion.HasValue ?
                new ObjectParameter("Opcion", opcion) :
                new ObjectParameter("Opcion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pAnula_ProcesaPedido", empresaParameter, fact_numParameter, opcionParameter);
        }
    
        public virtual int pAnulaClave(string rowguid)
        {
            var rowguidParameter = rowguid != null ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pAnulaClave", rowguidParameter);
        }
    
        public virtual ObjectResult<pConfirmarPedido_Result> pConfirmarPedido(string empresa, Nullable<int> fact_num)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pConfirmarPedido_Result>("pConfirmarPedido", empresaParameter, fact_numParameter);
        }
    
        public virtual ObjectResult<string> pConsultaRifCliente(string rif)
        {
            var rifParameter = rif != null ?
                new ObjectParameter("Rif", rif) :
                new ObjectParameter("Rif", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pConsultaRifCliente", rifParameter);
        }
    
        public virtual ObjectResult<pCotizInfo_Result> pCotizInfo(Nullable<int> fact_num, string empresa)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pCotizInfo_Result>("pCotizInfo", fact_numParameter, empresaParameter);
        }
    
        public virtual int pCulminarPedido(string empresa, Nullable<int> fact_num, string bultos)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            var bultosParameter = bultos != null ?
                new ObjectParameter("Bultos", bultos) :
                new ObjectParameter("Bultos", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pCulminarPedido", empresaParameter, fact_numParameter, bultosParameter);
        }
    
        public virtual ObjectResult<pDetallePed_Cot_Result> pDetallePed_Cot(string empresa, Nullable<int> fact_num, string tabla, Nullable<int> tipo)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            var tablaParameter = tabla != null ?
                new ObjectParameter("Tabla", tabla) :
                new ObjectParameter("Tabla", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pDetallePed_Cot_Result>("pDetallePed_Cot", empresaParameter, fact_numParameter, tablaParameter, tipoParameter);
        }
    
        public virtual ObjectResult<pDetallePedido_Result> pDetallePedido(string empresa, Nullable<int> fact_num)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pDetallePedido_Result>("pDetallePedido", empresaParameter, fact_numParameter);
        }
    
        public virtual ObjectResult<pDocumentos_CxC_Result> pDocumentos_CxC(string empresa, string rif)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var rifParameter = rif != null ?
                new ObjectParameter("Rif", rif) :
                new ObjectParameter("Rif", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pDocumentos_CxC_Result>("pDocumentos_CxC", empresaParameter, rifParameter);
        }
    
        public virtual ObjectResult<pEdoCtaxViaje_Result> pEdoCtaxViaje(string empresa, Nullable<int> nro_viaje)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var nro_viajeParameter = nro_viaje.HasValue ?
                new ObjectParameter("nro_viaje", nro_viaje) :
                new ObjectParameter("nro_viaje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pEdoCtaxViaje_Result>("pEdoCtaxViaje", empresaParameter, nro_viajeParameter);
        }
    
        public virtual int pEliminar_docum_prov(Nullable<int> nro_track)
        {
            var nro_trackParameter = nro_track.HasValue ?
                new ObjectParameter("nro_track", nro_track) :
                new ObjectParameter("nro_track", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminar_docum_prov", nro_trackParameter);
        }
    
        public virtual int pEliminarEmbarque(byte[] validador)
        {
            var validadorParameter = validador != null ?
                new ObjectParameter("validador", validador) :
                new ObjectParameter("validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarEmbarque", validadorParameter);
        }
    
        public virtual int pEliminarEmpresa(byte[] validador)
        {
            var validadorParameter = validador != null ?
                new ObjectParameter("validador", validador) :
                new ObjectParameter("validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarEmpresa", validadorParameter);
        }
    
        public virtual int pEliminarExcepcion_H(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarExcepcion_H", rowguidParameter);
        }
    
        public virtual int pEliminarExcepcion_P(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarExcepcion_P", rowguidParameter);
        }
    
        public virtual int pEliminarFact_Imp(byte[] validador)
        {
            var validadorParameter = validador != null ?
                new ObjectParameter("validador", validador) :
                new ObjectParameter("validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarFact_Imp", validadorParameter);
        }
    
        public virtual int pEliminarFact_Imp_Reng(Nullable<int> fact_num)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarFact_Imp_Reng", fact_numParameter);
        }
    
        public virtual int pEliminarNaviera(byte[] validador)
        {
            var validadorParameter = validador != null ?
                new ObjectParameter("validador", validador) :
                new ObjectParameter("validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarNaviera", validadorParameter);
        }
    
        public virtual int pEliminarOrdenes(byte[] validador)
        {
            var validadorParameter = validador != null ?
                new ObjectParameter("validador", validador) :
                new ObjectParameter("validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarOrdenes", validadorParameter);
        }
    
        public virtual int pEliminarPantalla_Stock(byte[] validador)
        {
            var validadorParameter = validador != null ?
                new ObjectParameter("Validador", validador) :
                new ObjectParameter("Validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarPantalla_Stock", validadorParameter);
        }
    
        public virtual int pEliminarReng_emb(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarReng_emb", rowguidParameter);
        }
    
        public virtual int pEliminarReng_Ordenes(Nullable<int> fact_num)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarReng_Ordenes", fact_numParameter);
        }
    
        public virtual int pEliminarUsu_Emp(string co_usuario)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarUsu_Emp", co_usuarioParameter);
        }
    
        public virtual int pEliminarUsuario(byte[] validador)
        {
            var validadorParameter = validador != null ?
                new ObjectParameter("Validador", validador) :
                new ObjectParameter("Validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarUsuario", validadorParameter);
        }
    
        public virtual ObjectResult<pEstadisticasCxC_Result> pEstadisticasCxC(string empresa, string rif)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var rifParameter = rif != null ?
                new ObjectParameter("Rif", rif) :
                new ObjectParameter("Rif", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pEstadisticasCxC_Result>("pEstadisticasCxC", empresaParameter, rifParameter);
        }
    
        public virtual ObjectResult<pFacturaInfo_Result> pFacturaInfo(Nullable<int> fact_num, string empresa)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pFacturaInfo_Result>("pFacturaInfo", fact_numParameter, empresaParameter);
        }
    
        public virtual int pFacturaOnEmail(string empresa, Nullable<int> fact_num)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pFacturaOnEmail", empresaParameter, fact_numParameter);
        }
    
        public virtual ObjectResult<pImportarODC_Result> pImportarODC(string empresa, Nullable<int> fact_num)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pImportarODC_Result>("pImportarODC", empresaParameter, fact_numParameter);
        }
    
        public virtual int pInsertar_docum_prov(string empresa, Nullable<int> fact_num, string co_prov, Nullable<System.DateTime> fecha, string nro_trans, Nullable<decimal> monto, string banco, string cta_tarj, string beneficiario)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            var co_provParameter = co_prov != null ?
                new ObjectParameter("co_prov", co_prov) :
                new ObjectParameter("co_prov", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var nro_transParameter = nro_trans != null ?
                new ObjectParameter("nro_trans", nro_trans) :
                new ObjectParameter("nro_trans", typeof(string));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(decimal));
    
            var bancoParameter = banco != null ?
                new ObjectParameter("banco", banco) :
                new ObjectParameter("banco", typeof(string));
    
            var cta_tarjParameter = cta_tarj != null ?
                new ObjectParameter("cta_tarj", cta_tarj) :
                new ObjectParameter("cta_tarj", typeof(string));
    
            var beneficiarioParameter = beneficiario != null ?
                new ObjectParameter("beneficiario", beneficiario) :
                new ObjectParameter("beneficiario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertar_docum_prov", empresaParameter, fact_numParameter, co_provParameter, fechaParameter, nro_transParameter, montoParameter, bancoParameter, cta_tarjParameter, beneficiarioParameter);
        }
    
        public virtual int pInsertar_Fact_imp_reng(Nullable<int> fact_num, Nullable<int> reng_num, Nullable<int> doc_orig, Nullable<decimal> prec_orig, string co_art, string art_des, Nullable<decimal> precio, Nullable<decimal> total_art)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            var reng_numParameter = reng_num.HasValue ?
                new ObjectParameter("reng_num", reng_num) :
                new ObjectParameter("reng_num", typeof(int));
    
            var doc_origParameter = doc_orig.HasValue ?
                new ObjectParameter("doc_orig", doc_orig) :
                new ObjectParameter("doc_orig", typeof(int));
    
            var prec_origParameter = prec_orig.HasValue ?
                new ObjectParameter("prec_orig", prec_orig) :
                new ObjectParameter("prec_orig", typeof(decimal));
    
            var co_artParameter = co_art != null ?
                new ObjectParameter("co_art", co_art) :
                new ObjectParameter("co_art", typeof(string));
    
            var art_desParameter = art_des != null ?
                new ObjectParameter("art_des", art_des) :
                new ObjectParameter("art_des", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            var total_artParameter = total_art.HasValue ?
                new ObjectParameter("total_art", total_art) :
                new ObjectParameter("total_art", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertar_Fact_imp_reng", fact_numParameter, reng_numParameter, doc_origParameter, prec_origParameter, co_artParameter, art_desParameter, precioParameter, total_artParameter);
        }
    
        public virtual int pInsertarEmbarque(string bl, Nullable<System.DateTime> fecha_sal, Nullable<System.DateTime> fecha_lleg, string co_consig, string des_consig, string pto_sal, string pto_lleg, string co_naviera, string co_shipper, string shipper_des, Nullable<int> c20p, Nullable<int> c40p)
        {
            var blParameter = bl != null ?
                new ObjectParameter("bl", bl) :
                new ObjectParameter("bl", typeof(string));
    
            var fecha_salParameter = fecha_sal.HasValue ?
                new ObjectParameter("fecha_sal", fecha_sal) :
                new ObjectParameter("fecha_sal", typeof(System.DateTime));
    
            var fecha_llegParameter = fecha_lleg.HasValue ?
                new ObjectParameter("fecha_lleg", fecha_lleg) :
                new ObjectParameter("fecha_lleg", typeof(System.DateTime));
    
            var co_consigParameter = co_consig != null ?
                new ObjectParameter("co_consig", co_consig) :
                new ObjectParameter("co_consig", typeof(string));
    
            var des_consigParameter = des_consig != null ?
                new ObjectParameter("des_consig", des_consig) :
                new ObjectParameter("des_consig", typeof(string));
    
            var pto_salParameter = pto_sal != null ?
                new ObjectParameter("pto_sal", pto_sal) :
                new ObjectParameter("pto_sal", typeof(string));
    
            var pto_llegParameter = pto_lleg != null ?
                new ObjectParameter("pto_lleg", pto_lleg) :
                new ObjectParameter("pto_lleg", typeof(string));
    
            var co_navieraParameter = co_naviera != null ?
                new ObjectParameter("co_naviera", co_naviera) :
                new ObjectParameter("co_naviera", typeof(string));
    
            var co_shipperParameter = co_shipper != null ?
                new ObjectParameter("co_shipper", co_shipper) :
                new ObjectParameter("co_shipper", typeof(string));
    
            var shipper_desParameter = shipper_des != null ?
                new ObjectParameter("shipper_des", shipper_des) :
                new ObjectParameter("shipper_des", typeof(string));
    
            var c20pParameter = c20p.HasValue ?
                new ObjectParameter("c20p", c20p) :
                new ObjectParameter("c20p", typeof(int));
    
            var c40pParameter = c40p.HasValue ?
                new ObjectParameter("c40p", c40p) :
                new ObjectParameter("c40p", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarEmbarque", blParameter, fecha_salParameter, fecha_llegParameter, co_consigParameter, des_consigParameter, pto_salParameter, pto_llegParameter, co_navieraParameter, co_shipperParameter, shipper_desParameter, c20pParameter, c40pParameter);
        }
    
        public virtual int pInsertarEmpresa(string co_empresa, string des_emp, string email, string servidor, Nullable<int> puerto, Nullable<int> ssl, byte[] clave, string almacen, string co_tran, string forma_pag, string moneda, string co_sucu, string nomina, string contab)
        {
            var co_empresaParameter = co_empresa != null ?
                new ObjectParameter("co_empresa", co_empresa) :
                new ObjectParameter("co_empresa", typeof(string));
    
            var des_empParameter = des_emp != null ?
                new ObjectParameter("des_emp", des_emp) :
                new ObjectParameter("des_emp", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var servidorParameter = servidor != null ?
                new ObjectParameter("servidor", servidor) :
                new ObjectParameter("servidor", typeof(string));
    
            var puertoParameter = puerto.HasValue ?
                new ObjectParameter("puerto", puerto) :
                new ObjectParameter("puerto", typeof(int));
    
            var sslParameter = ssl.HasValue ?
                new ObjectParameter("ssl", ssl) :
                new ObjectParameter("ssl", typeof(int));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(byte[]));
    
            var almacenParameter = almacen != null ?
                new ObjectParameter("almacen", almacen) :
                new ObjectParameter("almacen", typeof(string));
    
            var co_tranParameter = co_tran != null ?
                new ObjectParameter("co_tran", co_tran) :
                new ObjectParameter("co_tran", typeof(string));
    
            var forma_pagParameter = forma_pag != null ?
                new ObjectParameter("forma_pag", forma_pag) :
                new ObjectParameter("forma_pag", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(string));
    
            var co_sucuParameter = co_sucu != null ?
                new ObjectParameter("co_sucu", co_sucu) :
                new ObjectParameter("co_sucu", typeof(string));
    
            var nominaParameter = nomina != null ?
                new ObjectParameter("nomina", nomina) :
                new ObjectParameter("nomina", typeof(string));
    
            var contabParameter = contab != null ?
                new ObjectParameter("contab", contab) :
                new ObjectParameter("contab", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarEmpresa", co_empresaParameter, des_empParameter, emailParameter, servidorParameter, puertoParameter, sslParameter, claveParameter, almacenParameter, co_tranParameter, forma_pagParameter, monedaParameter, co_sucuParameter, nominaParameter, contabParameter);
        }
    
        public virtual int pInsertarExcepcion_H(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarExcepcion_H", fechaParameter);
        }
    
        public virtual int pInsertarExcepcion_P(string empresa, string cod_emp, string nombre_completo, Nullable<bool> status, Nullable<System.DateTime> fecha, string motivo)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var cod_empParameter = cod_emp != null ?
                new ObjectParameter("cod_emp", cod_emp) :
                new ObjectParameter("cod_emp", typeof(string));
    
            var nombre_completoParameter = nombre_completo != null ?
                new ObjectParameter("nombre_completo", nombre_completo) :
                new ObjectParameter("nombre_completo", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var motivoParameter = motivo != null ?
                new ObjectParameter("motivo", motivo) :
                new ObjectParameter("motivo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarExcepcion_P", empresaParameter, cod_empParameter, nombre_completoParameter, statusParameter, fechaParameter, motivoParameter);
        }
    
        public virtual int pInsertarFact_imp(Nullable<int> fact_num, string empresa, string nro_doc, Nullable<System.DateTime> fecha, string co_prov, string observ, Nullable<int> status, Nullable<bool> anulado, Nullable<decimal> flete, Nullable<decimal> seguro, Nullable<decimal> otros, Nullable<decimal> total_net)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var nro_docParameter = nro_doc != null ?
                new ObjectParameter("nro_doc", nro_doc) :
                new ObjectParameter("nro_doc", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var co_provParameter = co_prov != null ?
                new ObjectParameter("co_prov", co_prov) :
                new ObjectParameter("co_prov", typeof(string));
    
            var observParameter = observ != null ?
                new ObjectParameter("observ", observ) :
                new ObjectParameter("observ", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var anuladoParameter = anulado.HasValue ?
                new ObjectParameter("anulado", anulado) :
                new ObjectParameter("anulado", typeof(bool));
    
            var fleteParameter = flete.HasValue ?
                new ObjectParameter("flete", flete) :
                new ObjectParameter("flete", typeof(decimal));
    
            var seguroParameter = seguro.HasValue ?
                new ObjectParameter("seguro", seguro) :
                new ObjectParameter("seguro", typeof(decimal));
    
            var otrosParameter = otros.HasValue ?
                new ObjectParameter("otros", otros) :
                new ObjectParameter("otros", typeof(decimal));
    
            var total_netParameter = total_net.HasValue ?
                new ObjectParameter("total_net", total_net) :
                new ObjectParameter("total_net", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarFact_imp", fact_numParameter, empresaParameter, nro_docParameter, fechaParameter, co_provParameter, observParameter, statusParameter, anuladoParameter, fleteParameter, seguroParameter, otrosParameter, total_netParameter);
        }
    
        public virtual int pInsertarFact_Imp_Reng(Nullable<int> fact_num, Nullable<int> reng_num, Nullable<int> doc_orig, Nullable<decimal> prec_orig, string co_art, string art_des, Nullable<decimal> total_art, Nullable<decimal> precio, Nullable<decimal> pendiente)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            var reng_numParameter = reng_num.HasValue ?
                new ObjectParameter("reng_num", reng_num) :
                new ObjectParameter("reng_num", typeof(int));
    
            var doc_origParameter = doc_orig.HasValue ?
                new ObjectParameter("doc_orig", doc_orig) :
                new ObjectParameter("doc_orig", typeof(int));
    
            var prec_origParameter = prec_orig.HasValue ?
                new ObjectParameter("prec_orig", prec_orig) :
                new ObjectParameter("prec_orig", typeof(decimal));
    
            var co_artParameter = co_art != null ?
                new ObjectParameter("co_art", co_art) :
                new ObjectParameter("co_art", typeof(string));
    
            var art_desParameter = art_des != null ?
                new ObjectParameter("art_des", art_des) :
                new ObjectParameter("art_des", typeof(string));
    
            var total_artParameter = total_art.HasValue ?
                new ObjectParameter("total_art", total_art) :
                new ObjectParameter("total_art", typeof(decimal));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            var pendienteParameter = pendiente.HasValue ?
                new ObjectParameter("pendiente", pendiente) :
                new ObjectParameter("pendiente", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarFact_Imp_Reng", fact_numParameter, reng_numParameter, doc_origParameter, prec_origParameter, co_artParameter, art_desParameter, total_artParameter, precioParameter, pendienteParameter);
        }
    
        public virtual int pInsertarGene_Claves(string clave, string co_usuario, string empresa, Nullable<System.DateTime> fec_venc, Nullable<int> cantidad)
        {
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("co_usuario", co_usuario) :
                new ObjectParameter("co_usuario", typeof(string));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var fec_vencParameter = fec_venc.HasValue ?
                new ObjectParameter("fec_venc", fec_venc) :
                new ObjectParameter("fec_venc", typeof(System.DateTime));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarGene_Claves", claveParameter, co_usuarioParameter, empresaParameter, fec_vencParameter, cantidadParameter);
        }
    
        public virtual int pInsertarIg_Pedido(string empresa, string nomina, string cod_emp, string nombre_completo, Nullable<System.DateTime> fecha, Nullable<int> fact_num, Nullable<System.DateTime> f_ini, Nullable<System.DateTime> f_fin, string observa, Nullable<bool> anulado, Nullable<System.Guid> rowgpedido)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var nominaParameter = nomina != null ?
                new ObjectParameter("nomina", nomina) :
                new ObjectParameter("nomina", typeof(string));
    
            var cod_empParameter = cod_emp != null ?
                new ObjectParameter("cod_emp", cod_emp) :
                new ObjectParameter("cod_emp", typeof(string));
    
            var nombre_completoParameter = nombre_completo != null ?
                new ObjectParameter("nombre_completo", nombre_completo) :
                new ObjectParameter("nombre_completo", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            var f_iniParameter = f_ini.HasValue ?
                new ObjectParameter("f_ini", f_ini) :
                new ObjectParameter("f_ini", typeof(System.DateTime));
    
            var f_finParameter = f_fin.HasValue ?
                new ObjectParameter("f_fin", f_fin) :
                new ObjectParameter("f_fin", typeof(System.DateTime));
    
            var observaParameter = observa != null ?
                new ObjectParameter("observa", observa) :
                new ObjectParameter("observa", typeof(string));
    
            var anuladoParameter = anulado.HasValue ?
                new ObjectParameter("anulado", anulado) :
                new ObjectParameter("anulado", typeof(bool));
    
            var rowgpedidoParameter = rowgpedido.HasValue ?
                new ObjectParameter("rowgpedido", rowgpedido) :
                new ObjectParameter("rowgpedido", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarIg_Pedido", empresaParameter, nominaParameter, cod_empParameter, nombre_completoParameter, fechaParameter, fact_numParameter, f_iniParameter, f_finParameter, observaParameter, anuladoParameter, rowgpedidoParameter);
        }
    
        public virtual int pInsertarNaviera(string co_naviera, string navi_des, string empresa, string emp_des, string co_prov, string prov_des)
        {
            var co_navieraParameter = co_naviera != null ?
                new ObjectParameter("co_naviera", co_naviera) :
                new ObjectParameter("co_naviera", typeof(string));
    
            var navi_desParameter = navi_des != null ?
                new ObjectParameter("navi_des", navi_des) :
                new ObjectParameter("navi_des", typeof(string));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var emp_desParameter = emp_des != null ?
                new ObjectParameter("emp_des", emp_des) :
                new ObjectParameter("emp_des", typeof(string));
    
            var co_provParameter = co_prov != null ?
                new ObjectParameter("co_prov", co_prov) :
                new ObjectParameter("co_prov", typeof(string));
    
            var prov_desParameter = prov_des != null ?
                new ObjectParameter("prov_des", prov_des) :
                new ObjectParameter("prov_des", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarNaviera", co_navieraParameter, navi_desParameter, empresaParameter, emp_desParameter, co_provParameter, prov_desParameter);
        }
    
        public virtual int pInsertarOrdenes(Nullable<int> fact_num, string empresa, string co_prov, string prov_des, Nullable<System.DateTime> fecha, string observ, Nullable<int> status, Nullable<decimal> total_net)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var co_provParameter = co_prov != null ?
                new ObjectParameter("co_prov", co_prov) :
                new ObjectParameter("co_prov", typeof(string));
    
            var prov_desParameter = prov_des != null ?
                new ObjectParameter("prov_des", prov_des) :
                new ObjectParameter("prov_des", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var observParameter = observ != null ?
                new ObjectParameter("observ", observ) :
                new ObjectParameter("observ", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var total_netParameter = total_net.HasValue ?
                new ObjectParameter("total_net", total_net) :
                new ObjectParameter("total_net", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarOrdenes", fact_numParameter, empresaParameter, co_provParameter, prov_desParameter, fechaParameter, observParameter, statusParameter, total_netParameter);
        }
    
        public virtual int pInsertarOrdenes_Reng(Nullable<int> fact_num, Nullable<int> reng_num, string co_art, string art_des, Nullable<decimal> total_art, Nullable<decimal> precio, Nullable<decimal> pendiente)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            var reng_numParameter = reng_num.HasValue ?
                new ObjectParameter("reng_num", reng_num) :
                new ObjectParameter("reng_num", typeof(int));
    
            var co_artParameter = co_art != null ?
                new ObjectParameter("co_art", co_art) :
                new ObjectParameter("co_art", typeof(string));
    
            var art_desParameter = art_des != null ?
                new ObjectParameter("art_des", art_des) :
                new ObjectParameter("art_des", typeof(string));
    
            var total_artParameter = total_art.HasValue ?
                new ObjectParameter("total_art", total_art) :
                new ObjectParameter("total_art", typeof(decimal));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            var pendienteParameter = pendiente.HasValue ?
                new ObjectParameter("pendiente", pendiente) :
                new ObjectParameter("pendiente", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarOrdenes_Reng", fact_numParameter, reng_numParameter, co_artParameter, art_desParameter, total_artParameter, precioParameter, pendienteParameter);
        }
    
        public virtual int pInsertarPantalla_Stock(string co_usuario, string emp_Art, string alm)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            var emp_ArtParameter = emp_Art != null ?
                new ObjectParameter("Emp_Art", emp_Art) :
                new ObjectParameter("Emp_Art", typeof(string));
    
            var almParameter = alm != null ?
                new ObjectParameter("Alm", alm) :
                new ObjectParameter("Alm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarPantalla_Stock", co_usuarioParameter, emp_ArtParameter, almParameter);
        }
    
        public virtual int pInsertarReng_emb(string empresa, Nullable<int> nro_viaje, Nullable<int> fact_num, string co_art, string art_des, Nullable<decimal> total_art, Nullable<decimal> prec_vta, Nullable<decimal> tasa)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var nro_viajeParameter = nro_viaje.HasValue ?
                new ObjectParameter("nro_viaje", nro_viaje) :
                new ObjectParameter("nro_viaje", typeof(int));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            var co_artParameter = co_art != null ?
                new ObjectParameter("co_art", co_art) :
                new ObjectParameter("co_art", typeof(string));
    
            var art_desParameter = art_des != null ?
                new ObjectParameter("art_des", art_des) :
                new ObjectParameter("art_des", typeof(string));
    
            var total_artParameter = total_art.HasValue ?
                new ObjectParameter("total_art", total_art) :
                new ObjectParameter("total_art", typeof(decimal));
    
            var prec_vtaParameter = prec_vta.HasValue ?
                new ObjectParameter("prec_vta", prec_vta) :
                new ObjectParameter("prec_vta", typeof(decimal));
    
            var tasaParameter = tasa.HasValue ?
                new ObjectParameter("tasa", tasa) :
                new ObjectParameter("tasa", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarReng_emb", empresaParameter, nro_viajeParameter, fact_numParameter, co_artParameter, art_desParameter, total_artParameter, prec_vtaParameter, tasaParameter);
        }
    
        public virtual int pInsertarUsu_Emp(string co_usuario, string co_empresa)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            var co_empresaParameter = co_empresa != null ?
                new ObjectParameter("Co_empresa", co_empresa) :
                new ObjectParameter("Co_empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarUsu_Emp", co_usuarioParameter, co_empresaParameter);
        }
    
        public virtual int pInsertarUsuario(string co_usuario, string nombre, Nullable<int> tipo, byte[] clave, string co_rdv, byte[] ilustracion, Nullable<int> p_nav, Nullable<int> p_emp, Nullable<int> p_con, Nullable<int> p_mco, Nullable<int> p_usu, Nullable<int> p_pst, Nullable<int> p_art, Nullable<int> p_clave, Nullable<int> p_malm, Nullable<int> p_ord, Nullable<int> p_pped, Nullable<int> p_cxc, Nullable<int> p_regrep, Nullable<int> p_envrep, Nullable<int> p_rep, Nullable<int> p_lcre, Nullable<int> p_com, Nullable<int> p_metas, Nullable<int> p_ubi, Nullable<int> p_cons, Nullable<int> p_camp_L, Nullable<int> p_acti, Nullable<int> p_consu, Nullable<int> p_caso, string co_profit, Nullable<int> p_control, Nullable<int> p_supervi, string departamento)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(byte[]));
    
            var co_rdvParameter = co_rdv != null ?
                new ObjectParameter("co_rdv", co_rdv) :
                new ObjectParameter("co_rdv", typeof(string));
    
            var ilustracionParameter = ilustracion != null ?
                new ObjectParameter("ilustracion", ilustracion) :
                new ObjectParameter("ilustracion", typeof(byte[]));
    
            var p_navParameter = p_nav.HasValue ?
                new ObjectParameter("p_nav", p_nav) :
                new ObjectParameter("p_nav", typeof(int));
    
            var p_empParameter = p_emp.HasValue ?
                new ObjectParameter("p_emp", p_emp) :
                new ObjectParameter("p_emp", typeof(int));
    
            var p_conParameter = p_con.HasValue ?
                new ObjectParameter("p_con", p_con) :
                new ObjectParameter("p_con", typeof(int));
    
            var p_mcoParameter = p_mco.HasValue ?
                new ObjectParameter("p_mco", p_mco) :
                new ObjectParameter("p_mco", typeof(int));
    
            var p_usuParameter = p_usu.HasValue ?
                new ObjectParameter("p_usu", p_usu) :
                new ObjectParameter("p_usu", typeof(int));
    
            var p_pstParameter = p_pst.HasValue ?
                new ObjectParameter("p_pst", p_pst) :
                new ObjectParameter("p_pst", typeof(int));
    
            var p_artParameter = p_art.HasValue ?
                new ObjectParameter("p_art", p_art) :
                new ObjectParameter("p_art", typeof(int));
    
            var p_claveParameter = p_clave.HasValue ?
                new ObjectParameter("p_clave", p_clave) :
                new ObjectParameter("p_clave", typeof(int));
    
            var p_malmParameter = p_malm.HasValue ?
                new ObjectParameter("p_malm", p_malm) :
                new ObjectParameter("p_malm", typeof(int));
    
            var p_ordParameter = p_ord.HasValue ?
                new ObjectParameter("p_ord", p_ord) :
                new ObjectParameter("p_ord", typeof(int));
    
            var p_ppedParameter = p_pped.HasValue ?
                new ObjectParameter("p_pped", p_pped) :
                new ObjectParameter("p_pped", typeof(int));
    
            var p_cxcParameter = p_cxc.HasValue ?
                new ObjectParameter("p_cxc", p_cxc) :
                new ObjectParameter("p_cxc", typeof(int));
    
            var p_regrepParameter = p_regrep.HasValue ?
                new ObjectParameter("p_regrep", p_regrep) :
                new ObjectParameter("p_regrep", typeof(int));
    
            var p_envrepParameter = p_envrep.HasValue ?
                new ObjectParameter("p_envrep", p_envrep) :
                new ObjectParameter("p_envrep", typeof(int));
    
            var p_repParameter = p_rep.HasValue ?
                new ObjectParameter("p_rep", p_rep) :
                new ObjectParameter("p_rep", typeof(int));
    
            var p_lcreParameter = p_lcre.HasValue ?
                new ObjectParameter("p_lcre", p_lcre) :
                new ObjectParameter("p_lcre", typeof(int));
    
            var p_comParameter = p_com.HasValue ?
                new ObjectParameter("p_com", p_com) :
                new ObjectParameter("p_com", typeof(int));
    
            var p_metasParameter = p_metas.HasValue ?
                new ObjectParameter("p_metas", p_metas) :
                new ObjectParameter("p_metas", typeof(int));
    
            var p_ubiParameter = p_ubi.HasValue ?
                new ObjectParameter("p_ubi", p_ubi) :
                new ObjectParameter("p_ubi", typeof(int));
    
            var p_consParameter = p_cons.HasValue ?
                new ObjectParameter("p_cons", p_cons) :
                new ObjectParameter("p_cons", typeof(int));
    
            var p_camp_LParameter = p_camp_L.HasValue ?
                new ObjectParameter("p_camp_L", p_camp_L) :
                new ObjectParameter("p_camp_L", typeof(int));
    
            var p_actiParameter = p_acti.HasValue ?
                new ObjectParameter("p_acti", p_acti) :
                new ObjectParameter("p_acti", typeof(int));
    
            var p_consuParameter = p_consu.HasValue ?
                new ObjectParameter("p_consu", p_consu) :
                new ObjectParameter("p_consu", typeof(int));
    
            var p_casoParameter = p_caso.HasValue ?
                new ObjectParameter("p_caso", p_caso) :
                new ObjectParameter("p_caso", typeof(int));
    
            var co_profitParameter = co_profit != null ?
                new ObjectParameter("co_profit", co_profit) :
                new ObjectParameter("co_profit", typeof(string));
    
            var p_controlParameter = p_control.HasValue ?
                new ObjectParameter("p_control", p_control) :
                new ObjectParameter("p_control", typeof(int));
    
            var p_superviParameter = p_supervi.HasValue ?
                new ObjectParameter("p_supervi", p_supervi) :
                new ObjectParameter("p_supervi", typeof(int));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarUsuario", co_usuarioParameter, nombreParameter, tipoParameter, claveParameter, co_rdvParameter, ilustracionParameter, p_navParameter, p_empParameter, p_conParameter, p_mcoParameter, p_usuParameter, p_pstParameter, p_artParameter, p_claveParameter, p_malmParameter, p_ordParameter, p_ppedParameter, p_cxcParameter, p_regrepParameter, p_envrepParameter, p_repParameter, p_lcreParameter, p_comParameter, p_metasParameter, p_ubiParameter, p_consParameter, p_camp_LParameter, p_actiParameter, p_consuParameter, p_casoParameter, co_profitParameter, p_controlParameter, p_superviParameter, departamentoParameter);
        }
    
        public virtual int pMarcarCotizacion(Nullable<int> fact_num, string empresa)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pMarcarCotizacion", fact_numParameter, empresaParameter);
        }
    
        public virtual int pMarcarPedidoImpreso(Nullable<int> fact_num, string empresa)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pMarcarPedidoImpreso", fact_numParameter, empresaParameter);
        }
    
        public virtual ObjectResult<pMonitorContenedores_Result> pMonitorContenedores(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pMonitorContenedores_Result>("pMonitorContenedores", desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<pNomiAsistentes_Result> pNomiAsistentes(Nullable<int> orden)
        {
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pNomiAsistentes_Result>("pNomiAsistentes", ordenParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> pObtenerProximoConsecutivo(string sCampo, Nullable<bool> actualizar)
        {
            var sCampoParameter = sCampo != null ?
                new ObjectParameter("sCampo", sCampo) :
                new ObjectParameter("sCampo", typeof(string));
    
            var actualizarParameter = actualizar.HasValue ?
                new ObjectParameter("actualizar", actualizar) :
                new ObjectParameter("actualizar", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("pObtenerProximoConsecutivo", sCampoParameter, actualizarParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> pObtenerTablaInt(Nullable<int> iCampoClave1, string sColumna1, Nullable<int> iTipo, string sTabla)
        {
            var iCampoClave1Parameter = iCampoClave1.HasValue ?
                new ObjectParameter("iCampoClave1", iCampoClave1) :
                new ObjectParameter("iCampoClave1", typeof(int));
    
            var sColumna1Parameter = sColumna1 != null ?
                new ObjectParameter("sColumna1", sColumna1) :
                new ObjectParameter("sColumna1", typeof(string));
    
            var iTipoParameter = iTipo.HasValue ?
                new ObjectParameter("iTipo", iTipo) :
                new ObjectParameter("iTipo", typeof(int));
    
            var sTablaParameter = sTabla != null ?
                new ObjectParameter("sTabla", sTabla) :
                new ObjectParameter("sTabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("pObtenerTablaInt", iCampoClave1Parameter, sColumna1Parameter, iTipoParameter, sTablaParameter);
        }
    
        public virtual ObjectResult<string> pObtenerTablaStr(string sCampoClave1, string sColumna1, Nullable<int> iTipo, string sTabla)
        {
            var sCampoClave1Parameter = sCampoClave1 != null ?
                new ObjectParameter("sCampoClave1", sCampoClave1) :
                new ObjectParameter("sCampoClave1", typeof(string));
    
            var sColumna1Parameter = sColumna1 != null ?
                new ObjectParameter("sColumna1", sColumna1) :
                new ObjectParameter("sColumna1", typeof(string));
    
            var iTipoParameter = iTipo.HasValue ?
                new ObjectParameter("iTipo", iTipo) :
                new ObjectParameter("iTipo", typeof(int));
    
            var sTablaParameter = sTabla != null ?
                new ObjectParameter("sTabla", sTabla) :
                new ObjectParameter("sTabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pObtenerTablaStr", sCampoClave1Parameter, sColumna1Parameter, iTipoParameter, sTablaParameter);
        }
    
        public virtual ObjectResult<pODCinfo_Result> pODCinfo(string empresa, Nullable<int> fact_num)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pODCinfo_Result>("pODCinfo", empresaParameter, fact_numParameter);
        }
    
        public virtual ObjectResult<pPedido_Etiquetas_Result> pPedido_Etiquetas(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pPedido_Etiquetas_Result>("pPedido_Etiquetas", rowguidParameter);
        }
    
        public virtual ObjectResult<pPedido_EtiquetasInfo_Result> pPedido_EtiquetasInfo(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pPedido_EtiquetasInfo_Result>("pPedido_EtiquetasInfo", rowguidParameter);
        }
    
        public virtual ObjectResult<pPedidoEnProc_Info_Result> pPedidoEnProc_Info(string rowguid)
        {
            var rowguidParameter = rowguid != null ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pPedidoEnProc_Info_Result>("pPedidoEnProc_Info", rowguidParameter);
        }
    
        public virtual ObjectResult<pPedidosAlm_Result> pPedidosAlm(string empresa, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<bool> condicion, string ubicacion)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var condicionParameter = condicion.HasValue ?
                new ObjectParameter("condicion", condicion) :
                new ObjectParameter("condicion", typeof(bool));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pPedidosAlm_Result>("pPedidosAlm", empresaParameter, desdeParameter, hastaParameter, condicionParameter, ubicacionParameter);
        }
    
        public virtual ObjectResult<pPedidosPendientes_Result> pPedidosPendientes(string empresa, string almacen, string co_art)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var almacenParameter = almacen != null ?
                new ObjectParameter("Almacen", almacen) :
                new ObjectParameter("Almacen", typeof(string));
    
            var co_artParameter = co_art != null ?
                new ObjectParameter("Co_art", co_art) :
                new ObjectParameter("Co_art", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pPedidosPendientes_Result>("pPedidosPendientes", empresaParameter, almacenParameter, co_artParameter);
        }
    
        public virtual ObjectResult<pPedidosRet_Result> pPedidosRet(string empresa, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pPedidosRet_Result>("pPedidosRet", empresaParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<pRechazarPedido_Result> pRechazarPedido(string empresa, Nullable<int> fact_num)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pRechazarPedido_Result>("pRechazarPedido", empresaParameter, fact_numParameter);
        }
    
        public virtual ObjectResult<pRemb_Info_Result> pRemb_Info(Nullable<int> nro_viaje)
        {
            var nro_viajeParameter = nro_viaje.HasValue ?
                new ObjectParameter("nro_viaje", nro_viaje) :
                new ObjectParameter("nro_viaje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pRemb_Info_Result>("pRemb_Info", nro_viajeParameter);
        }
    
        public virtual ObjectResult<pRengPedAlm_Result> pRengPedAlm(string empresa, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pRengPedAlm_Result>("pRengPedAlm", empresaParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<pRengPedRet_Result> pRengPedRet(string empresa, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pRengPedRet_Result>("pRengPedRet", empresaParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<pRepEmbarque_Result> pRepEmbarque(Nullable<int> nro_viaje)
        {
            var nro_viajeParameter = nro_viaje.HasValue ?
                new ObjectParameter("Nro_viaje", nro_viaje) :
                new ObjectParameter("Nro_viaje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pRepEmbarque_Result>("pRepEmbarque", nro_viajeParameter);
        }
    
        public virtual ObjectResult<pRepResumenVentasGerencial_Result> pRepResumenVentasGerencial(string grupo)
        {
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pRepResumenVentasGerencial_Result>("pRepResumenVentasGerencial", grupoParameter);
        }
    
        public virtual ObjectResult<pRepTicket_Pedido_Result> pRepTicket_Pedido(string rowguid)
        {
            var rowguidParameter = rowguid != null ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pRepTicket_Pedido_Result>("pRepTicket_Pedido", rowguidParameter);
        }
    
        public virtual ObjectResult<pSeleccionar_docum_prov_Result> pSeleccionar_docum_prov(string empresa, Nullable<int> fact_num)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionar_docum_prov_Result>("pSeleccionar_docum_prov", empresaParameter, fact_numParameter);
        }
    
        public virtual ObjectResult<pSeleccionar_EdoCtaProv_Result> pSeleccionar_EdoCtaProv(string empresa, string co_prov, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var co_provParameter = co_prov != null ?
                new ObjectParameter("co_prov", co_prov) :
                new ObjectParameter("co_prov", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionar_EdoCtaProv_Result>("pSeleccionar_EdoCtaProv", empresaParameter, co_provParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<pSeleccionarAlmacenEmpresa_Result> pSeleccionarAlmacenEmpresa(string almacen, string empresa)
        {
            var almacenParameter = almacen != null ?
                new ObjectParameter("Almacen", almacen) :
                new ObjectParameter("Almacen", typeof(string));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarAlmacenEmpresa_Result>("pSeleccionarAlmacenEmpresa", almacenParameter, empresaParameter);
        }
    
        public virtual ObjectResult<pSeleccionarArticulo_Result> pSeleccionarArticulo(string empresa, string co_art)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var co_artParameter = co_art != null ?
                new ObjectParameter("Co_art", co_art) :
                new ObjectParameter("Co_art", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarArticulo_Result>("pSeleccionarArticulo", empresaParameter, co_artParameter);
        }
    
        public virtual ObjectResult<pSeleccionarArticuloDescrip_Result> pSeleccionarArticuloDescrip(string empresa, string descrip)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var descripParameter = descrip != null ?
                new ObjectParameter("Descrip", descrip) :
                new ObjectParameter("Descrip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarArticuloDescrip_Result>("pSeleccionarArticuloDescrip", empresaParameter, descripParameter);
        }
    
        public virtual ObjectResult<pSeleccionarDocumentosClave_Result> pSeleccionarDocumentosClave(string clave, string co_usuario, string empresa)
        {
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("co_usuario", co_usuario) :
                new ObjectParameter("co_usuario", typeof(string));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarDocumentosClave_Result>("pSeleccionarDocumentosClave", claveParameter, co_usuarioParameter, empresaParameter);
        }
    
        public virtual ObjectResult<pSeleccionarEmbarque_Result> pSeleccionarEmbarque(Nullable<int> nro_viaje)
        {
            var nro_viajeParameter = nro_viaje.HasValue ?
                new ObjectParameter("nro_viaje", nro_viaje) :
                new ObjectParameter("nro_viaje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarEmbarque_Result>("pSeleccionarEmbarque", nro_viajeParameter);
        }
    
        public virtual ObjectResult<pSeleccionarEmpresa_Result> pSeleccionarEmpresa(string co_empresa)
        {
            var co_empresaParameter = co_empresa != null ?
                new ObjectParameter("co_empresa", co_empresa) :
                new ObjectParameter("co_empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarEmpresa_Result>("pSeleccionarEmpresa", co_empresaParameter);
        }
    
        public virtual ObjectResult<pSeleccionarEmpresasCA_Result> pSeleccionarEmpresasCA(string co_usuario)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarEmpresasCA_Result>("pSeleccionarEmpresasCA", co_usuarioParameter);
        }
    
        public virtual ObjectResult<pSeleccionarEmpresasSA_Result> pSeleccionarEmpresasSA(string co_usuario)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarEmpresasSA_Result>("pSeleccionarEmpresasSA", co_usuarioParameter);
        }
    
        public virtual ObjectResult<pSeleccionarExcepcion_H_Result> pSeleccionarExcepcion_H()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarExcepcion_H_Result>("pSeleccionarExcepcion_H");
        }
    
        public virtual ObjectResult<pSeleccionarExcepcion_P_Result> pSeleccionarExcepcion_P()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarExcepcion_P_Result>("pSeleccionarExcepcion_P");
        }
    
        public virtual ObjectResult<pSeleccionarFact_Imp_Result> pSeleccionarFact_Imp(Nullable<int> fact_num)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarFact_Imp_Result>("pSeleccionarFact_Imp", fact_numParameter);
        }
    
        public virtual ObjectResult<pSeleccionarFact_Imp_Reng_Result> pSeleccionarFact_Imp_Reng(Nullable<int> fact_num)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarFact_Imp_Reng_Result>("pSeleccionarFact_Imp_Reng", fact_numParameter);
        }
    
        public virtual ObjectResult<pSeleccionarFormaPago_Result> pSeleccionarFormaPago(string empresa, string forma_pag)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var forma_pagParameter = forma_pag != null ?
                new ObjectParameter("Forma_pag", forma_pag) :
                new ObjectParameter("Forma_pag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarFormaPago_Result>("pSeleccionarFormaPago", empresaParameter, forma_pagParameter);
        }
    
        public virtual ObjectResult<pSeleccionarGene_Claves_Result> pSeleccionarGene_Claves()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarGene_Claves_Result>("pSeleccionarGene_Claves");
        }
    
        public virtual ObjectResult<pSeleccionarMoneda_Result> pSeleccionarMoneda(string empresa, string co_mone)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var co_moneParameter = co_mone != null ?
                new ObjectParameter("Co_mone", co_mone) :
                new ObjectParameter("Co_mone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarMoneda_Result>("pSeleccionarMoneda", empresaParameter, co_moneParameter);
        }
    
        public virtual ObjectResult<pSeleccionarNaviera_Result> pSeleccionarNaviera(string co_naviera)
        {
            var co_navieraParameter = co_naviera != null ?
                new ObjectParameter("co_naviera", co_naviera) :
                new ObjectParameter("co_naviera", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarNaviera_Result>("pSeleccionarNaviera", co_navieraParameter);
        }
    
        public virtual ObjectResult<pSeleccionarOrdenes_Result> pSeleccionarOrdenes(Nullable<int> fact_num)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarOrdenes_Result>("pSeleccionarOrdenes", fact_numParameter);
        }
    
        public virtual ObjectResult<pSeleccionarOrdenes_Reng_Result> pSeleccionarOrdenes_Reng(Nullable<int> fact_num)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarOrdenes_Reng_Result>("pSeleccionarOrdenes_Reng", fact_numParameter);
        }
    
        public virtual ObjectResult<pSeleccionarPantalla_Stock_Result> pSeleccionarPantalla_Stock(string co_usuario)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarPantalla_Stock_Result>("pSeleccionarPantalla_Stock", co_usuarioParameter);
        }
    
        public virtual ObjectResult<pSeleccionarPed_Desp_Result> pSeleccionarPed_Desp(string empresa, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<int> condicion, Nullable<int> status, Nullable<bool> anulado)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var condicionParameter = condicion.HasValue ?
                new ObjectParameter("Condicion", condicion) :
                new ObjectParameter("Condicion", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var anuladoParameter = anulado.HasValue ?
                new ObjectParameter("Anulado", anulado) :
                new ObjectParameter("Anulado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarPed_Desp_Result>("pSeleccionarPed_Desp", empresaParameter, desdeParameter, hastaParameter, condicionParameter, statusParameter, anuladoParameter);
        }
    
        public virtual ObjectResult<pSeleccionarProv_Result> pSeleccionarProv(string empresa, string prov)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var provParameter = prov != null ?
                new ObjectParameter("prov", prov) :
                new ObjectParameter("prov", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarProv_Result>("pSeleccionarProv", empresaParameter, provParameter);
        }
    
        public virtual ObjectResult<pSeleccionarReng_Cac_Result> pSeleccionarReng_Cac(string empresa, Nullable<int> fact_num)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarReng_Cac_Result>("pSeleccionarReng_Cac", empresaParameter, fact_numParameter);
        }
    
        public virtual ObjectResult<pSeleccionarReng_emb_Result> pSeleccionarReng_emb(Nullable<int> nro_viaje)
        {
            var nro_viajeParameter = nro_viaje.HasValue ?
                new ObjectParameter("nro_viaje", nro_viaje) :
                new ObjectParameter("nro_viaje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarReng_emb_Result>("pSeleccionarReng_emb", nro_viajeParameter);
        }
    
        public virtual ObjectResult<pSeleccionarReng_Fac_Result> pSeleccionarReng_Fac(string empresa, Nullable<int> fact_num)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarReng_Fac_Result>("pSeleccionarReng_Fac", empresaParameter, fact_numParameter);
        }
    
        public virtual ObjectResult<pSeleccionarStock_Result> pSeleccionarStock(string empresa, string almacen, string co_art)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var almacenParameter = almacen != null ?
                new ObjectParameter("Almacen", almacen) :
                new ObjectParameter("Almacen", typeof(string));
    
            var co_artParameter = co_art != null ?
                new ObjectParameter("Co_art", co_art) :
                new ObjectParameter("Co_art", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarStock_Result>("pSeleccionarStock", empresaParameter, almacenParameter, co_artParameter);
        }
    
        public virtual ObjectResult<pSeleccionarSucursal_Result> pSeleccionarSucursal(string empresa, string co_sucu)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var co_sucuParameter = co_sucu != null ?
                new ObjectParameter("Co_sucu", co_sucu) :
                new ObjectParameter("Co_sucu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarSucursal_Result>("pSeleccionarSucursal", empresaParameter, co_sucuParameter);
        }
    
        public virtual ObjectResult<pSeleccionarTransporte_Result> pSeleccionarTransporte(string empresa, string co_tran)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var co_tranParameter = co_tran != null ?
                new ObjectParameter("Co_tran", co_tran) :
                new ObjectParameter("Co_tran", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarTransporte_Result>("pSeleccionarTransporte", empresaParameter, co_tranParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> pStatusPedido(string empresa, Nullable<int> fact_num)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("pStatusPedido", empresaParameter, fact_numParameter);
        }
    
        public virtual ObjectResult<pTBruCobXVend_Stargas_Service_Result> pTBruCobXVend_Stargas_Service(Nullable<System.DateTime> tdesde, Nullable<System.DateTime> thasta)
        {
            var tdesdeParameter = tdesde.HasValue ?
                new ObjectParameter("Tdesde", tdesde) :
                new ObjectParameter("Tdesde", typeof(System.DateTime));
    
            var thastaParameter = thasta.HasValue ?
                new ObjectParameter("Thasta", thasta) :
                new ObjectParameter("Thasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pTBruCobXVend_Stargas_Service_Result>("pTBruCobXVend_Stargas_Service", tdesdeParameter, thastaParameter);
        }
    
        public virtual ObjectResult<string> pTrabAlm(string tipo)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pTrabAlm", tipoParameter);
        }
    
        public virtual ObjectResult<pUltimasFacturas_Result> pUltimasFacturas(string empresa, string almacen, string co_art)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var almacenParameter = almacen != null ?
                new ObjectParameter("Almacen", almacen) :
                new ObjectParameter("Almacen", typeof(string));
    
            var co_artParameter = co_art != null ?
                new ObjectParameter("Co_art", co_art) :
                new ObjectParameter("Co_art", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pUltimasFacturas_Result>("pUltimasFacturas", empresaParameter, almacenParameter, co_artParameter);
        }
    
        public virtual ObjectResult<pUsuariosProfit_Result> pUsuariosProfit()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pUsuariosProfit_Result>("pUsuariosProfit");
        }
    
        public virtual ObjectResult<pVerificarArticuloPedido_Result> pVerificarArticuloPedido(string co_art, Nullable<int> fact_num, string empresa)
        {
            var co_artParameter = co_art != null ?
                new ObjectParameter("Co_art", co_art) :
                new ObjectParameter("Co_art", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pVerificarArticuloPedido_Result>("pVerificarArticuloPedido", co_artParameter, fact_numParameter, empresaParameter);
        }
    
        public virtual ObjectResult<RepMercanciaNueva_Result> RepMercanciaNueva(string empresa)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RepMercanciaNueva_Result>("RepMercanciaNueva", empresaParameter);
        }
    
        public virtual ObjectResult<usp_GetErrorInfo_Result> usp_GetErrorInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetErrorInfo_Result>("usp_GetErrorInfo");
        }
    
        public virtual int pEliminarLim_Credito(Nullable<int> id_tab)
        {
            var id_tabParameter = id_tab.HasValue ?
                new ObjectParameter("Id_tab", id_tab) :
                new ObjectParameter("Id_tab", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarLim_Credito", id_tabParameter);
        }
    
        public virtual ObjectResult<pSeleccionarDivisa_Result> pSeleccionarDivisa()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarDivisa_Result>("pSeleccionarDivisa");
        }
    
        public virtual ObjectResult<pSeleccionarTipo_Cli_Result> pSeleccionarTipo_Cli(string grupo)
        {
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarTipo_Cli_Result>("pSeleccionarTipo_Cli", grupoParameter);
        }
    
        public virtual int pActualizarLim_Credito(string grupo, string tip_cli, string autoriza1, string autoriza2, Nullable<decimal> desde, Nullable<decimal> hasta, byte[] validador)
        {
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            var tip_cliParameter = tip_cli != null ?
                new ObjectParameter("Tip_cli", tip_cli) :
                new ObjectParameter("Tip_cli", typeof(string));
    
            var autoriza1Parameter = autoriza1 != null ?
                new ObjectParameter("Autoriza1", autoriza1) :
                new ObjectParameter("Autoriza1", typeof(string));
    
            var autoriza2Parameter = autoriza2 != null ?
                new ObjectParameter("Autoriza2", autoriza2) :
                new ObjectParameter("Autoriza2", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(decimal));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(decimal));
    
            var validadorParameter = validador != null ?
                new ObjectParameter("Validador", validador) :
                new ObjectParameter("Validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarLim_Credito", grupoParameter, tip_cliParameter, autoriza1Parameter, autoriza2Parameter, desdeParameter, hastaParameter, validadorParameter);
        }
    
        public virtual int pInsertarLim_Credito(string grupo, string tip_cli, string autoriza1, string autoriza2, Nullable<decimal> desde, Nullable<decimal> hasta)
        {
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            var tip_cliParameter = tip_cli != null ?
                new ObjectParameter("Tip_cli", tip_cli) :
                new ObjectParameter("Tip_cli", typeof(string));
    
            var autoriza1Parameter = autoriza1 != null ?
                new ObjectParameter("Autoriza1", autoriza1) :
                new ObjectParameter("Autoriza1", typeof(string));
    
            var autoriza2Parameter = autoriza2 != null ?
                new ObjectParameter("Autoriza2", autoriza2) :
                new ObjectParameter("Autoriza2", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(decimal));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarLim_Credito", grupoParameter, tip_cliParameter, autoriza1Parameter, autoriza2Parameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<pSeleccionarLim_Credito_Result> pSeleccionarLim_Credito()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarLim_Credito_Result>("pSeleccionarLim_Credito");
        }
    
        public virtual int pActualizarProgramas(string descrip, Nullable<System.DateTime> inicio, Nullable<System.DateTime> fin, Nullable<System.TimeSpan> hora, Nullable<bool> lunes, Nullable<bool> martes, Nullable<bool> miercoles, Nullable<bool> jueves, Nullable<bool> viernes, Nullable<bool> sabado, Nullable<bool> domingo, string cod_rep, string para, string copia, string oculto, string grupo, Nullable<bool> habilitado, string concurrencia, Nullable<System.Guid> rowguid_pista, string tipo, Nullable<System.DateTime> ultima_ejecucion, Nullable<System.Guid> rowguid)
        {
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            var horaParameter = hora.HasValue ?
                new ObjectParameter("hora", hora) :
                new ObjectParameter("hora", typeof(System.TimeSpan));
    
            var lunesParameter = lunes.HasValue ?
                new ObjectParameter("lunes", lunes) :
                new ObjectParameter("lunes", typeof(bool));
    
            var martesParameter = martes.HasValue ?
                new ObjectParameter("martes", martes) :
                new ObjectParameter("martes", typeof(bool));
    
            var miercolesParameter = miercoles.HasValue ?
                new ObjectParameter("miercoles", miercoles) :
                new ObjectParameter("miercoles", typeof(bool));
    
            var juevesParameter = jueves.HasValue ?
                new ObjectParameter("jueves", jueves) :
                new ObjectParameter("jueves", typeof(bool));
    
            var viernesParameter = viernes.HasValue ?
                new ObjectParameter("viernes", viernes) :
                new ObjectParameter("viernes", typeof(bool));
    
            var sabadoParameter = sabado.HasValue ?
                new ObjectParameter("sabado", sabado) :
                new ObjectParameter("sabado", typeof(bool));
    
            var domingoParameter = domingo.HasValue ?
                new ObjectParameter("domingo", domingo) :
                new ObjectParameter("domingo", typeof(bool));
    
            var cod_repParameter = cod_rep != null ?
                new ObjectParameter("cod_rep", cod_rep) :
                new ObjectParameter("cod_rep", typeof(string));
    
            var paraParameter = para != null ?
                new ObjectParameter("Para", para) :
                new ObjectParameter("Para", typeof(string));
    
            var copiaParameter = copia != null ?
                new ObjectParameter("Copia", copia) :
                new ObjectParameter("Copia", typeof(string));
    
            var ocultoParameter = oculto != null ?
                new ObjectParameter("Oculto", oculto) :
                new ObjectParameter("Oculto", typeof(string));
    
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            var habilitadoParameter = habilitado.HasValue ?
                new ObjectParameter("Habilitado", habilitado) :
                new ObjectParameter("Habilitado", typeof(bool));
    
            var concurrenciaParameter = concurrencia != null ?
                new ObjectParameter("concurrencia", concurrencia) :
                new ObjectParameter("concurrencia", typeof(string));
    
            var rowguid_pistaParameter = rowguid_pista.HasValue ?
                new ObjectParameter("rowguid_pista", rowguid_pista) :
                new ObjectParameter("rowguid_pista", typeof(System.Guid));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var ultima_ejecucionParameter = ultima_ejecucion.HasValue ?
                new ObjectParameter("ultima_ejecucion", ultima_ejecucion) :
                new ObjectParameter("ultima_ejecucion", typeof(System.DateTime));
    
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarProgramas", descripParameter, inicioParameter, finParameter, horaParameter, lunesParameter, martesParameter, miercolesParameter, juevesParameter, viernesParameter, sabadoParameter, domingoParameter, cod_repParameter, paraParameter, copiaParameter, ocultoParameter, grupoParameter, habilitadoParameter, concurrenciaParameter, rowguid_pistaParameter, tipoParameter, ultima_ejecucionParameter, rowguidParameter);
        }
    
        public virtual int pActualizarReportes(string cod_rep, string titulo, string ruta, string archivo, string funcion, Nullable<System.Guid> rowguid)
        {
            var cod_repParameter = cod_rep != null ?
                new ObjectParameter("Cod_rep", cod_rep) :
                new ObjectParameter("Cod_rep", typeof(string));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var rutaParameter = ruta != null ?
                new ObjectParameter("Ruta", ruta) :
                new ObjectParameter("Ruta", typeof(string));
    
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(string));
    
            var funcionParameter = funcion != null ?
                new ObjectParameter("Funcion", funcion) :
                new ObjectParameter("Funcion", typeof(string));
    
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarReportes", cod_repParameter, tituloParameter, rutaParameter, archivoParameter, funcionParameter, rowguidParameter);
        }
    
        public virtual ObjectResult<pCxCRG_Result> pCxCRG(string grupo, string vendedor)
        {
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            var vendedorParameter = vendedor != null ?
                new ObjectParameter("Vendedor", vendedor) :
                new ObjectParameter("Vendedor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pCxCRG_Result>("pCxCRG", grupoParameter, vendedorParameter);
        }
    
        public virtual int pEliminarFiltros(string cod_rep)
        {
            var cod_repParameter = cod_rep != null ?
                new ObjectParameter("Cod_rep", cod_rep) :
                new ObjectParameter("Cod_rep", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarFiltros", cod_repParameter);
        }
    
        public virtual int pEliminarProgramas(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarProgramas", rowguidParameter);
        }
    
        public virtual int pEliminarReportes(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarReportes", rowguidParameter);
        }
    
        public virtual int pEliminarValores_prog(Nullable<int> id_evento)
        {
            var id_eventoParameter = id_evento.HasValue ?
                new ObjectParameter("id_evento", id_evento) :
                new ObjectParameter("id_evento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarValores_prog", id_eventoParameter);
        }
    
        public virtual int pInsertarFiltros(string cod_rep, string nombre_par, string tipo)
        {
            var cod_repParameter = cod_rep != null ?
                new ObjectParameter("Cod_rep", cod_rep) :
                new ObjectParameter("Cod_rep", typeof(string));
    
            var nombre_parParameter = nombre_par != null ?
                new ObjectParameter("Nombre_par", nombre_par) :
                new ObjectParameter("Nombre_par", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarFiltros", cod_repParameter, nombre_parParameter, tipoParameter);
        }
    
        public virtual int pInsertarProgramas(string descrip, Nullable<System.DateTime> inicio, Nullable<System.DateTime> fin, Nullable<System.TimeSpan> hora, Nullable<bool> lunes, Nullable<bool> martes, Nullable<bool> miercoles, Nullable<bool> jueves, Nullable<bool> viernes, Nullable<bool> sabado, Nullable<bool> domingo, string cod_rep, string para, string copia, string oculto, string grupo, Nullable<bool> habilitado, string concurrencia, Nullable<System.Guid> rowguid_pista, string tipo, Nullable<System.DateTime> ultima_ejecucion)
        {
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            var horaParameter = hora.HasValue ?
                new ObjectParameter("hora", hora) :
                new ObjectParameter("hora", typeof(System.TimeSpan));
    
            var lunesParameter = lunes.HasValue ?
                new ObjectParameter("lunes", lunes) :
                new ObjectParameter("lunes", typeof(bool));
    
            var martesParameter = martes.HasValue ?
                new ObjectParameter("martes", martes) :
                new ObjectParameter("martes", typeof(bool));
    
            var miercolesParameter = miercoles.HasValue ?
                new ObjectParameter("miercoles", miercoles) :
                new ObjectParameter("miercoles", typeof(bool));
    
            var juevesParameter = jueves.HasValue ?
                new ObjectParameter("jueves", jueves) :
                new ObjectParameter("jueves", typeof(bool));
    
            var viernesParameter = viernes.HasValue ?
                new ObjectParameter("viernes", viernes) :
                new ObjectParameter("viernes", typeof(bool));
    
            var sabadoParameter = sabado.HasValue ?
                new ObjectParameter("sabado", sabado) :
                new ObjectParameter("sabado", typeof(bool));
    
            var domingoParameter = domingo.HasValue ?
                new ObjectParameter("domingo", domingo) :
                new ObjectParameter("domingo", typeof(bool));
    
            var cod_repParameter = cod_rep != null ?
                new ObjectParameter("cod_rep", cod_rep) :
                new ObjectParameter("cod_rep", typeof(string));
    
            var paraParameter = para != null ?
                new ObjectParameter("Para", para) :
                new ObjectParameter("Para", typeof(string));
    
            var copiaParameter = copia != null ?
                new ObjectParameter("Copia", copia) :
                new ObjectParameter("Copia", typeof(string));
    
            var ocultoParameter = oculto != null ?
                new ObjectParameter("Oculto", oculto) :
                new ObjectParameter("Oculto", typeof(string));
    
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            var habilitadoParameter = habilitado.HasValue ?
                new ObjectParameter("Habilitado", habilitado) :
                new ObjectParameter("Habilitado", typeof(bool));
    
            var concurrenciaParameter = concurrencia != null ?
                new ObjectParameter("concurrencia", concurrencia) :
                new ObjectParameter("concurrencia", typeof(string));
    
            var rowguid_pistaParameter = rowguid_pista.HasValue ?
                new ObjectParameter("rowguid_pista", rowguid_pista) :
                new ObjectParameter("rowguid_pista", typeof(System.Guid));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var ultima_ejecucionParameter = ultima_ejecucion.HasValue ?
                new ObjectParameter("ultima_ejecucion", ultima_ejecucion) :
                new ObjectParameter("ultima_ejecucion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarProgramas", descripParameter, inicioParameter, finParameter, horaParameter, lunesParameter, martesParameter, miercolesParameter, juevesParameter, viernesParameter, sabadoParameter, domingoParameter, cod_repParameter, paraParameter, copiaParameter, ocultoParameter, grupoParameter, habilitadoParameter, concurrenciaParameter, rowguid_pistaParameter, tipoParameter, ultima_ejecucionParameter);
        }
    
        public virtual int pInsertarReportes(string cod_rep, string titulo, string ruta, string archivo, string funcion)
        {
            var cod_repParameter = cod_rep != null ?
                new ObjectParameter("Cod_rep", cod_rep) :
                new ObjectParameter("Cod_rep", typeof(string));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var rutaParameter = ruta != null ?
                new ObjectParameter("Ruta", ruta) :
                new ObjectParameter("Ruta", typeof(string));
    
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(string));
    
            var funcionParameter = funcion != null ?
                new ObjectParameter("Funcion", funcion) :
                new ObjectParameter("Funcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarReportes", cod_repParameter, tituloParameter, rutaParameter, archivoParameter, funcionParameter);
        }
    
        public virtual int pInsertarValores_prog(Nullable<int> id_evento, string parametro, string valor_char, Nullable<int> valor_int, Nullable<decimal> valor_dec, Nullable<System.DateTime> valor_date, Nullable<System.TimeSpan> valor_time, Nullable<bool> valor_bit)
        {
            var id_eventoParameter = id_evento.HasValue ?
                new ObjectParameter("id_evento", id_evento) :
                new ObjectParameter("id_evento", typeof(int));
    
            var parametroParameter = parametro != null ?
                new ObjectParameter("parametro", parametro) :
                new ObjectParameter("parametro", typeof(string));
    
            var valor_charParameter = valor_char != null ?
                new ObjectParameter("valor_char", valor_char) :
                new ObjectParameter("valor_char", typeof(string));
    
            var valor_intParameter = valor_int.HasValue ?
                new ObjectParameter("valor_int", valor_int) :
                new ObjectParameter("valor_int", typeof(int));
    
            var valor_decParameter = valor_dec.HasValue ?
                new ObjectParameter("valor_dec", valor_dec) :
                new ObjectParameter("valor_dec", typeof(decimal));
    
            var valor_dateParameter = valor_date.HasValue ?
                new ObjectParameter("valor_date", valor_date) :
                new ObjectParameter("valor_date", typeof(System.DateTime));
    
            var valor_timeParameter = valor_time.HasValue ?
                new ObjectParameter("valor_time", valor_time) :
                new ObjectParameter("valor_time", typeof(System.TimeSpan));
    
            var valor_bitParameter = valor_bit.HasValue ?
                new ObjectParameter("valor_bit", valor_bit) :
                new ObjectParameter("valor_bit", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarValores_prog", id_eventoParameter, parametroParameter, valor_charParameter, valor_intParameter, valor_decParameter, valor_dateParameter, valor_timeParameter, valor_bitParameter);
        }
    
        public virtual ObjectResult<pInventarioUnificado_Result> pInventarioUnificado(string grupo, string almacen, string tipo)
        {
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            var almacenParameter = almacen != null ?
                new ObjectParameter("Almacen", almacen) :
                new ObjectParameter("Almacen", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pInventarioUnificado_Result>("pInventarioUnificado", grupoParameter, almacenParameter, tipoParameter);
        }
    
        public virtual ObjectResult<pSeleccionarFiltros_Result> pSeleccionarFiltros(string cod_rep)
        {
            var cod_repParameter = cod_rep != null ?
                new ObjectParameter("Cod_rep", cod_rep) :
                new ObjectParameter("Cod_rep", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarFiltros_Result>("pSeleccionarFiltros", cod_repParameter);
        }
    
        public virtual ObjectResult<pSeleccionarParametros_Result> pSeleccionarParametros()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarParametros_Result>("pSeleccionarParametros");
        }
    
        public virtual ObjectResult<pSeleccionarProgramas_Result> pSeleccionarProgramas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarProgramas_Result>("pSeleccionarProgramas");
        }
    
        public virtual ObjectResult<pSeleccionarReportes_Result> pSeleccionarReportes(string cod_rep)
        {
            var cod_repParameter = cod_rep != null ?
                new ObjectParameter("Cod_rep", cod_rep) :
                new ObjectParameter("Cod_rep", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarReportes_Result>("pSeleccionarReportes", cod_repParameter);
        }
    
        public virtual ObjectResult<pSeleccionarValores_prog_Result> pSeleccionarValores_prog(Nullable<int> id_evento)
        {
            var id_eventoParameter = id_evento.HasValue ?
                new ObjectParameter("Id_evento", id_evento) :
                new ObjectParameter("Id_evento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarValores_prog_Result>("pSeleccionarValores_prog", id_eventoParameter);
        }
    
        public virtual ObjectResult<pValorInventarioGrupal_Result> pValorInventarioGrupal(string grupo)
        {
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pValorInventarioGrupal_Result>("pValorInventarioGrupal", grupoParameter);
        }
    
        public virtual ObjectResult<pSeleccionarSP_Reportes_Result> pSeleccionarSP_Reportes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarSP_Reportes_Result>("pSeleccionarSP_Reportes");
        }
    
        public virtual int pInsertarPistas_Gen(Nullable<int> id_evento, string archivo, string resultado)
        {
            var id_eventoParameter = id_evento.HasValue ?
                new ObjectParameter("Id_evento", id_evento) :
                new ObjectParameter("Id_evento", typeof(int));
    
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(string));
    
            var resultadoParameter = resultado != null ?
                new ObjectParameter("Resultado", resultado) :
                new ObjectParameter("Resultado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarPistas_Gen", id_eventoParameter, archivoParameter, resultadoParameter);
        }
    
        public virtual int pEliminarUsu_Prg(string co_usuario, Nullable<int> id_evento)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            var id_eventoParameter = id_evento.HasValue ?
                new ObjectParameter("Id_evento", id_evento) :
                new ObjectParameter("Id_evento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarUsu_Prg", co_usuarioParameter, id_eventoParameter);
        }
    
        public virtual int pInsertarUsu_Prg(string co_usuario, Nullable<int> id_evento)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            var id_eventoParameter = id_evento.HasValue ?
                new ObjectParameter("Id_evento", id_evento) :
                new ObjectParameter("Id_evento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarUsu_Prg", co_usuarioParameter, id_eventoParameter);
        }
    
        public virtual ObjectResult<pSeleccionarUsu_Prg_Result> pSeleccionarUsu_Prg(string co_usuario)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarUsu_Prg_Result>("pSeleccionarUsu_Prg", co_usuarioParameter);
        }
    
        public virtual ObjectResult<pSeleccionarProgramasCA_Result> pSeleccionarProgramasCA(string co_usuario)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarProgramasCA_Result>("pSeleccionarProgramasCA", co_usuarioParameter);
        }
    
        public virtual ObjectResult<pSeleccionarProgramasSA_Result> pSeleccionarProgramasSA(string co_usuario)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarProgramasSA_Result>("pSeleccionarProgramasSA", co_usuarioParameter);
        }
    
        public virtual ObjectResult<pSeleccionarUsuariosPrgCA_Result> pSeleccionarUsuariosPrgCA(Nullable<int> id_evento)
        {
            var id_eventoParameter = id_evento.HasValue ?
                new ObjectParameter("Id_evento", id_evento) :
                new ObjectParameter("Id_evento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarUsuariosPrgCA_Result>("pSeleccionarUsuariosPrgCA", id_eventoParameter);
        }
    
        public virtual ObjectResult<pSeleccionarUsuariosPrgSA_Result> pSeleccionarUsuariosPrgSA(Nullable<int> id_evento)
        {
            var id_eventoParameter = id_evento.HasValue ?
                new ObjectParameter("Id_evento", id_evento) :
                new ObjectParameter("Id_evento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarUsuariosPrgSA_Result>("pSeleccionarUsuariosPrgSA", id_eventoParameter);
        }
    
        public virtual ObjectResult<pAnalisisCompras_Result> pAnalisisCompras(string grupo, string almacen, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, string co_lin, string co_subl, string co_color, string co_cat, string cod_proc)
        {
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            var almacenParameter = almacen != null ?
                new ObjectParameter("Almacen", almacen) :
                new ObjectParameter("Almacen", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var co_linParameter = co_lin != null ?
                new ObjectParameter("Co_lin", co_lin) :
                new ObjectParameter("Co_lin", typeof(string));
    
            var co_sublParameter = co_subl != null ?
                new ObjectParameter("Co_subl", co_subl) :
                new ObjectParameter("Co_subl", typeof(string));
    
            var co_colorParameter = co_color != null ?
                new ObjectParameter("Co_color", co_color) :
                new ObjectParameter("Co_color", typeof(string));
    
            var co_catParameter = co_cat != null ?
                new ObjectParameter("Co_cat", co_cat) :
                new ObjectParameter("Co_cat", typeof(string));
    
            var cod_procParameter = cod_proc != null ?
                new ObjectParameter("Cod_proc", cod_proc) :
                new ObjectParameter("Cod_proc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pAnalisisCompras_Result>("pAnalisisCompras", grupoParameter, almacenParameter, desdeParameter, hastaParameter, co_linParameter, co_sublParameter, co_colorParameter, co_catParameter, cod_procParameter);
        }
    
        public virtual ObjectResult<pObtenerPar_emp_Result> pObtenerPar_emp(string empresa)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pObtenerPar_emp_Result>("pObtenerPar_emp", empresaParameter);
        }
    
        public virtual ObjectResult<pObtenerGrupo_Result> pObtenerGrupo(string empresa)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pObtenerGrupo_Result>("pObtenerGrupo", empresaParameter);
        }
    
        public virtual int pInsertar_OrdenesCompra(string empresa, Nullable<int> fact_num, Nullable<bool> contrib, string nombre, string rif, string nit, string status, string comentario, string descrip, Nullable<decimal> saldo, Nullable<System.DateTime> fec_emis, Nullable<System.DateTime> fec_ven, string co_cli, string co_ven, string co_tran, string dir_ent, string forma_pag, Nullable<decimal> tot_bruto, Nullable<decimal> tot_neto, Nullable<decimal> glob_desc, Nullable<decimal> tot_reca, string porc_gdesc, string porc_reca, Nullable<decimal> total_uc, Nullable<decimal> total_cp, Nullable<decimal> tot_flete, Nullable<decimal> monto_dev, Nullable<decimal> totklu, Nullable<bool> anulada, Nullable<bool> impresa, Nullable<decimal> iva, Nullable<decimal> iva_dev, Nullable<System.DateTime> feccom, Nullable<int> numcom, Nullable<decimal> tasa, string moneda, string cta_contab, Nullable<int> seriales, Nullable<decimal> tasag, Nullable<decimal> tasag10, Nullable<decimal> tasag20, string campo1, string campo2, string campo3, string campo4, string campo5, string campo6, string campo7, string campo8, string co_us_in, Nullable<System.DateTime> fe_us_in, string co_us_mo, Nullable<System.DateTime> fe_us_mo, string co_us_el, Nullable<System.DateTime> fe_us_el, string revisado, string trasnfe, string co_sucu, Nullable<decimal> mon_ilc, Nullable<decimal> otros1, Nullable<decimal> otros2, Nullable<decimal> otros3, string dis_cen, Nullable<decimal> aux01, string aux02, string salestax, string origen, string origen_d, string sta_prod, string inf_imp, string telefono)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            var contribParameter = contrib.HasValue ?
                new ObjectParameter("contrib", contrib) :
                new ObjectParameter("contrib", typeof(bool));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var rifParameter = rif != null ?
                new ObjectParameter("rif", rif) :
                new ObjectParameter("rif", typeof(string));
    
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("comentario", comentario) :
                new ObjectParameter("comentario", typeof(string));
    
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            var saldoParameter = saldo.HasValue ?
                new ObjectParameter("saldo", saldo) :
                new ObjectParameter("saldo", typeof(decimal));
    
            var fec_emisParameter = fec_emis.HasValue ?
                new ObjectParameter("fec_emis", fec_emis) :
                new ObjectParameter("fec_emis", typeof(System.DateTime));
    
            var fec_venParameter = fec_ven.HasValue ?
                new ObjectParameter("fec_ven", fec_ven) :
                new ObjectParameter("fec_ven", typeof(System.DateTime));
    
            var co_cliParameter = co_cli != null ?
                new ObjectParameter("co_cli", co_cli) :
                new ObjectParameter("co_cli", typeof(string));
    
            var co_venParameter = co_ven != null ?
                new ObjectParameter("co_ven", co_ven) :
                new ObjectParameter("co_ven", typeof(string));
    
            var co_tranParameter = co_tran != null ?
                new ObjectParameter("co_tran", co_tran) :
                new ObjectParameter("co_tran", typeof(string));
    
            var dir_entParameter = dir_ent != null ?
                new ObjectParameter("dir_ent", dir_ent) :
                new ObjectParameter("dir_ent", typeof(string));
    
            var forma_pagParameter = forma_pag != null ?
                new ObjectParameter("forma_pag", forma_pag) :
                new ObjectParameter("forma_pag", typeof(string));
    
            var tot_brutoParameter = tot_bruto.HasValue ?
                new ObjectParameter("tot_bruto", tot_bruto) :
                new ObjectParameter("tot_bruto", typeof(decimal));
    
            var tot_netoParameter = tot_neto.HasValue ?
                new ObjectParameter("tot_neto", tot_neto) :
                new ObjectParameter("tot_neto", typeof(decimal));
    
            var glob_descParameter = glob_desc.HasValue ?
                new ObjectParameter("glob_desc", glob_desc) :
                new ObjectParameter("glob_desc", typeof(decimal));
    
            var tot_recaParameter = tot_reca.HasValue ?
                new ObjectParameter("tot_reca", tot_reca) :
                new ObjectParameter("tot_reca", typeof(decimal));
    
            var porc_gdescParameter = porc_gdesc != null ?
                new ObjectParameter("porc_gdesc", porc_gdesc) :
                new ObjectParameter("porc_gdesc", typeof(string));
    
            var porc_recaParameter = porc_reca != null ?
                new ObjectParameter("porc_reca", porc_reca) :
                new ObjectParameter("porc_reca", typeof(string));
    
            var total_ucParameter = total_uc.HasValue ?
                new ObjectParameter("total_uc", total_uc) :
                new ObjectParameter("total_uc", typeof(decimal));
    
            var total_cpParameter = total_cp.HasValue ?
                new ObjectParameter("total_cp", total_cp) :
                new ObjectParameter("total_cp", typeof(decimal));
    
            var tot_fleteParameter = tot_flete.HasValue ?
                new ObjectParameter("tot_flete", tot_flete) :
                new ObjectParameter("tot_flete", typeof(decimal));
    
            var monto_devParameter = monto_dev.HasValue ?
                new ObjectParameter("monto_dev", monto_dev) :
                new ObjectParameter("monto_dev", typeof(decimal));
    
            var totkluParameter = totklu.HasValue ?
                new ObjectParameter("totklu", totklu) :
                new ObjectParameter("totklu", typeof(decimal));
    
            var anuladaParameter = anulada.HasValue ?
                new ObjectParameter("anulada", anulada) :
                new ObjectParameter("anulada", typeof(bool));
    
            var impresaParameter = impresa.HasValue ?
                new ObjectParameter("impresa", impresa) :
                new ObjectParameter("impresa", typeof(bool));
    
            var ivaParameter = iva.HasValue ?
                new ObjectParameter("iva", iva) :
                new ObjectParameter("iva", typeof(decimal));
    
            var iva_devParameter = iva_dev.HasValue ?
                new ObjectParameter("iva_dev", iva_dev) :
                new ObjectParameter("iva_dev", typeof(decimal));
    
            var feccomParameter = feccom.HasValue ?
                new ObjectParameter("feccom", feccom) :
                new ObjectParameter("feccom", typeof(System.DateTime));
    
            var numcomParameter = numcom.HasValue ?
                new ObjectParameter("numcom", numcom) :
                new ObjectParameter("numcom", typeof(int));
    
            var tasaParameter = tasa.HasValue ?
                new ObjectParameter("tasa", tasa) :
                new ObjectParameter("tasa", typeof(decimal));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(string));
    
            var cta_contabParameter = cta_contab != null ?
                new ObjectParameter("cta_contab", cta_contab) :
                new ObjectParameter("cta_contab", typeof(string));
    
            var serialesParameter = seriales.HasValue ?
                new ObjectParameter("seriales", seriales) :
                new ObjectParameter("seriales", typeof(int));
    
            var tasagParameter = tasag.HasValue ?
                new ObjectParameter("tasag", tasag) :
                new ObjectParameter("tasag", typeof(decimal));
    
            var tasag10Parameter = tasag10.HasValue ?
                new ObjectParameter("tasag10", tasag10) :
                new ObjectParameter("tasag10", typeof(decimal));
    
            var tasag20Parameter = tasag20.HasValue ?
                new ObjectParameter("tasag20", tasag20) :
                new ObjectParameter("tasag20", typeof(decimal));
    
            var campo1Parameter = campo1 != null ?
                new ObjectParameter("campo1", campo1) :
                new ObjectParameter("campo1", typeof(string));
    
            var campo2Parameter = campo2 != null ?
                new ObjectParameter("campo2", campo2) :
                new ObjectParameter("campo2", typeof(string));
    
            var campo3Parameter = campo3 != null ?
                new ObjectParameter("campo3", campo3) :
                new ObjectParameter("campo3", typeof(string));
    
            var campo4Parameter = campo4 != null ?
                new ObjectParameter("campo4", campo4) :
                new ObjectParameter("campo4", typeof(string));
    
            var campo5Parameter = campo5 != null ?
                new ObjectParameter("campo5", campo5) :
                new ObjectParameter("campo5", typeof(string));
    
            var campo6Parameter = campo6 != null ?
                new ObjectParameter("campo6", campo6) :
                new ObjectParameter("campo6", typeof(string));
    
            var campo7Parameter = campo7 != null ?
                new ObjectParameter("campo7", campo7) :
                new ObjectParameter("campo7", typeof(string));
    
            var campo8Parameter = campo8 != null ?
                new ObjectParameter("campo8", campo8) :
                new ObjectParameter("campo8", typeof(string));
    
            var co_us_inParameter = co_us_in != null ?
                new ObjectParameter("co_us_in", co_us_in) :
                new ObjectParameter("co_us_in", typeof(string));
    
            var fe_us_inParameter = fe_us_in.HasValue ?
                new ObjectParameter("fe_us_in", fe_us_in) :
                new ObjectParameter("fe_us_in", typeof(System.DateTime));
    
            var co_us_moParameter = co_us_mo != null ?
                new ObjectParameter("co_us_mo", co_us_mo) :
                new ObjectParameter("co_us_mo", typeof(string));
    
            var fe_us_moParameter = fe_us_mo.HasValue ?
                new ObjectParameter("fe_us_mo", fe_us_mo) :
                new ObjectParameter("fe_us_mo", typeof(System.DateTime));
    
            var co_us_elParameter = co_us_el != null ?
                new ObjectParameter("co_us_el", co_us_el) :
                new ObjectParameter("co_us_el", typeof(string));
    
            var fe_us_elParameter = fe_us_el.HasValue ?
                new ObjectParameter("fe_us_el", fe_us_el) :
                new ObjectParameter("fe_us_el", typeof(System.DateTime));
    
            var revisadoParameter = revisado != null ?
                new ObjectParameter("revisado", revisado) :
                new ObjectParameter("revisado", typeof(string));
    
            var trasnfeParameter = trasnfe != null ?
                new ObjectParameter("trasnfe", trasnfe) :
                new ObjectParameter("trasnfe", typeof(string));
    
            var co_sucuParameter = co_sucu != null ?
                new ObjectParameter("co_sucu", co_sucu) :
                new ObjectParameter("co_sucu", typeof(string));
    
            var mon_ilcParameter = mon_ilc.HasValue ?
                new ObjectParameter("mon_ilc", mon_ilc) :
                new ObjectParameter("mon_ilc", typeof(decimal));
    
            var otros1Parameter = otros1.HasValue ?
                new ObjectParameter("otros1", otros1) :
                new ObjectParameter("otros1", typeof(decimal));
    
            var otros2Parameter = otros2.HasValue ?
                new ObjectParameter("otros2", otros2) :
                new ObjectParameter("otros2", typeof(decimal));
    
            var otros3Parameter = otros3.HasValue ?
                new ObjectParameter("otros3", otros3) :
                new ObjectParameter("otros3", typeof(decimal));
    
            var dis_cenParameter = dis_cen != null ?
                new ObjectParameter("dis_cen", dis_cen) :
                new ObjectParameter("dis_cen", typeof(string));
    
            var aux01Parameter = aux01.HasValue ?
                new ObjectParameter("aux01", aux01) :
                new ObjectParameter("aux01", typeof(decimal));
    
            var aux02Parameter = aux02 != null ?
                new ObjectParameter("aux02", aux02) :
                new ObjectParameter("aux02", typeof(string));
    
            var salestaxParameter = salestax != null ?
                new ObjectParameter("salestax", salestax) :
                new ObjectParameter("salestax", typeof(string));
    
            var origenParameter = origen != null ?
                new ObjectParameter("origen", origen) :
                new ObjectParameter("origen", typeof(string));
    
            var origen_dParameter = origen_d != null ?
                new ObjectParameter("origen_d", origen_d) :
                new ObjectParameter("origen_d", typeof(string));
    
            var sta_prodParameter = sta_prod != null ?
                new ObjectParameter("sta_prod", sta_prod) :
                new ObjectParameter("sta_prod", typeof(string));
    
            var inf_impParameter = inf_imp != null ?
                new ObjectParameter("inf_imp", inf_imp) :
                new ObjectParameter("inf_imp", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertar_OrdenesCompra", empresaParameter, fact_numParameter, contribParameter, nombreParameter, rifParameter, nitParameter, statusParameter, comentarioParameter, descripParameter, saldoParameter, fec_emisParameter, fec_venParameter, co_cliParameter, co_venParameter, co_tranParameter, dir_entParameter, forma_pagParameter, tot_brutoParameter, tot_netoParameter, glob_descParameter, tot_recaParameter, porc_gdescParameter, porc_recaParameter, total_ucParameter, total_cpParameter, tot_fleteParameter, monto_devParameter, totkluParameter, anuladaParameter, impresaParameter, ivaParameter, iva_devParameter, feccomParameter, numcomParameter, tasaParameter, monedaParameter, cta_contabParameter, serialesParameter, tasagParameter, tasag10Parameter, tasag20Parameter, campo1Parameter, campo2Parameter, campo3Parameter, campo4Parameter, campo5Parameter, campo6Parameter, campo7Parameter, campo8Parameter, co_us_inParameter, fe_us_inParameter, co_us_moParameter, fe_us_moParameter, co_us_elParameter, fe_us_elParameter, revisadoParameter, trasnfeParameter, co_sucuParameter, mon_ilcParameter, otros1Parameter, otros2Parameter, otros3Parameter, dis_cenParameter, aux01Parameter, aux02Parameter, salestaxParameter, origenParameter, origen_dParameter, sta_prodParameter, inf_impParameter, telefonoParameter);
        }
    
        public virtual int pInsertar_OrdenesCompra_Reng(string empresa, Nullable<int> fact_num, Nullable<int> reng_num, string tipo_doc, Nullable<int> reng_doc, Nullable<int> num_doc, string co_art, string co_alma, Nullable<decimal> total_art, Nullable<decimal> stotal_art, Nullable<decimal> pendiente, string uni_venta, Nullable<decimal> prec_vta, string porc_desc, string tipo_imp, Nullable<decimal> reng_neto, Nullable<decimal> cos_pro_un, Nullable<decimal> ult_cos_un, Nullable<decimal> ult_cos_om, Nullable<decimal> cos_pro_om, Nullable<decimal> total_dev, Nullable<decimal> monto_dev, Nullable<decimal> prec_vta2, Nullable<bool> anulado, string des_art, Nullable<bool> seleccion, Nullable<decimal> cant_imp, string comentario, Nullable<decimal> total_uni, Nullable<decimal> mon_ilc, Nullable<decimal> otros, string nro_lote, Nullable<System.DateTime> fec_lote, Nullable<decimal> pendiente2, string tipo_doc2, Nullable<int> reng_doc2, Nullable<int> num_doc2, string co_alma2, string dis_cen, Nullable<decimal> aux01, string aux02, Nullable<decimal> cant_prod, Nullable<decimal> imp_prod)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            var reng_numParameter = reng_num.HasValue ?
                new ObjectParameter("reng_num", reng_num) :
                new ObjectParameter("reng_num", typeof(int));
    
            var tipo_docParameter = tipo_doc != null ?
                new ObjectParameter("tipo_doc", tipo_doc) :
                new ObjectParameter("tipo_doc", typeof(string));
    
            var reng_docParameter = reng_doc.HasValue ?
                new ObjectParameter("reng_doc", reng_doc) :
                new ObjectParameter("reng_doc", typeof(int));
    
            var num_docParameter = num_doc.HasValue ?
                new ObjectParameter("num_doc", num_doc) :
                new ObjectParameter("num_doc", typeof(int));
    
            var co_artParameter = co_art != null ?
                new ObjectParameter("co_art", co_art) :
                new ObjectParameter("co_art", typeof(string));
    
            var co_almaParameter = co_alma != null ?
                new ObjectParameter("co_alma", co_alma) :
                new ObjectParameter("co_alma", typeof(string));
    
            var total_artParameter = total_art.HasValue ?
                new ObjectParameter("total_art", total_art) :
                new ObjectParameter("total_art", typeof(decimal));
    
            var stotal_artParameter = stotal_art.HasValue ?
                new ObjectParameter("stotal_art", stotal_art) :
                new ObjectParameter("stotal_art", typeof(decimal));
    
            var pendienteParameter = pendiente.HasValue ?
                new ObjectParameter("pendiente", pendiente) :
                new ObjectParameter("pendiente", typeof(decimal));
    
            var uni_ventaParameter = uni_venta != null ?
                new ObjectParameter("uni_venta", uni_venta) :
                new ObjectParameter("uni_venta", typeof(string));
    
            var prec_vtaParameter = prec_vta.HasValue ?
                new ObjectParameter("prec_vta", prec_vta) :
                new ObjectParameter("prec_vta", typeof(decimal));
    
            var porc_descParameter = porc_desc != null ?
                new ObjectParameter("porc_desc", porc_desc) :
                new ObjectParameter("porc_desc", typeof(string));
    
            var tipo_impParameter = tipo_imp != null ?
                new ObjectParameter("tipo_imp", tipo_imp) :
                new ObjectParameter("tipo_imp", typeof(string));
    
            var reng_netoParameter = reng_neto.HasValue ?
                new ObjectParameter("reng_neto", reng_neto) :
                new ObjectParameter("reng_neto", typeof(decimal));
    
            var cos_pro_unParameter = cos_pro_un.HasValue ?
                new ObjectParameter("cos_pro_un", cos_pro_un) :
                new ObjectParameter("cos_pro_un", typeof(decimal));
    
            var ult_cos_unParameter = ult_cos_un.HasValue ?
                new ObjectParameter("ult_cos_un", ult_cos_un) :
                new ObjectParameter("ult_cos_un", typeof(decimal));
    
            var ult_cos_omParameter = ult_cos_om.HasValue ?
                new ObjectParameter("ult_cos_om", ult_cos_om) :
                new ObjectParameter("ult_cos_om", typeof(decimal));
    
            var cos_pro_omParameter = cos_pro_om.HasValue ?
                new ObjectParameter("cos_pro_om", cos_pro_om) :
                new ObjectParameter("cos_pro_om", typeof(decimal));
    
            var total_devParameter = total_dev.HasValue ?
                new ObjectParameter("total_dev", total_dev) :
                new ObjectParameter("total_dev", typeof(decimal));
    
            var monto_devParameter = monto_dev.HasValue ?
                new ObjectParameter("monto_dev", monto_dev) :
                new ObjectParameter("monto_dev", typeof(decimal));
    
            var prec_vta2Parameter = prec_vta2.HasValue ?
                new ObjectParameter("prec_vta2", prec_vta2) :
                new ObjectParameter("prec_vta2", typeof(decimal));
    
            var anuladoParameter = anulado.HasValue ?
                new ObjectParameter("anulado", anulado) :
                new ObjectParameter("anulado", typeof(bool));
    
            var des_artParameter = des_art != null ?
                new ObjectParameter("des_art", des_art) :
                new ObjectParameter("des_art", typeof(string));
    
            var seleccionParameter = seleccion.HasValue ?
                new ObjectParameter("seleccion", seleccion) :
                new ObjectParameter("seleccion", typeof(bool));
    
            var cant_impParameter = cant_imp.HasValue ?
                new ObjectParameter("cant_imp", cant_imp) :
                new ObjectParameter("cant_imp", typeof(decimal));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("comentario", comentario) :
                new ObjectParameter("comentario", typeof(string));
    
            var total_uniParameter = total_uni.HasValue ?
                new ObjectParameter("total_uni", total_uni) :
                new ObjectParameter("total_uni", typeof(decimal));
    
            var mon_ilcParameter = mon_ilc.HasValue ?
                new ObjectParameter("mon_ilc", mon_ilc) :
                new ObjectParameter("mon_ilc", typeof(decimal));
    
            var otrosParameter = otros.HasValue ?
                new ObjectParameter("otros", otros) :
                new ObjectParameter("otros", typeof(decimal));
    
            var nro_loteParameter = nro_lote != null ?
                new ObjectParameter("nro_lote", nro_lote) :
                new ObjectParameter("nro_lote", typeof(string));
    
            var fec_loteParameter = fec_lote.HasValue ?
                new ObjectParameter("fec_lote", fec_lote) :
                new ObjectParameter("fec_lote", typeof(System.DateTime));
    
            var pendiente2Parameter = pendiente2.HasValue ?
                new ObjectParameter("pendiente2", pendiente2) :
                new ObjectParameter("pendiente2", typeof(decimal));
    
            var tipo_doc2Parameter = tipo_doc2 != null ?
                new ObjectParameter("tipo_doc2", tipo_doc2) :
                new ObjectParameter("tipo_doc2", typeof(string));
    
            var reng_doc2Parameter = reng_doc2.HasValue ?
                new ObjectParameter("reng_doc2", reng_doc2) :
                new ObjectParameter("reng_doc2", typeof(int));
    
            var num_doc2Parameter = num_doc2.HasValue ?
                new ObjectParameter("num_doc2", num_doc2) :
                new ObjectParameter("num_doc2", typeof(int));
    
            var co_alma2Parameter = co_alma2 != null ?
                new ObjectParameter("co_alma2", co_alma2) :
                new ObjectParameter("co_alma2", typeof(string));
    
            var dis_cenParameter = dis_cen != null ?
                new ObjectParameter("dis_cen", dis_cen) :
                new ObjectParameter("dis_cen", typeof(string));
    
            var aux01Parameter = aux01.HasValue ?
                new ObjectParameter("aux01", aux01) :
                new ObjectParameter("aux01", typeof(decimal));
    
            var aux02Parameter = aux02 != null ?
                new ObjectParameter("aux02", aux02) :
                new ObjectParameter("aux02", typeof(string));
    
            var cant_prodParameter = cant_prod.HasValue ?
                new ObjectParameter("cant_prod", cant_prod) :
                new ObjectParameter("cant_prod", typeof(decimal));
    
            var imp_prodParameter = imp_prod.HasValue ?
                new ObjectParameter("imp_prod", imp_prod) :
                new ObjectParameter("imp_prod", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertar_OrdenesCompra_Reng", empresaParameter, fact_numParameter, reng_numParameter, tipo_docParameter, reng_docParameter, num_docParameter, co_artParameter, co_almaParameter, total_artParameter, stotal_artParameter, pendienteParameter, uni_ventaParameter, prec_vtaParameter, porc_descParameter, tipo_impParameter, reng_netoParameter, cos_pro_unParameter, ult_cos_unParameter, ult_cos_omParameter, cos_pro_omParameter, total_devParameter, monto_devParameter, prec_vta2Parameter, anuladoParameter, des_artParameter, seleccionParameter, cant_impParameter, comentarioParameter, total_uniParameter, mon_ilcParameter, otrosParameter, nro_loteParameter, fec_loteParameter, pendiente2Parameter, tipo_doc2Parameter, reng_doc2Parameter, num_doc2Parameter, co_alma2Parameter, dis_cenParameter, aux01Parameter, aux02Parameter, cant_prodParameter, imp_prodParameter);
        }
    
        public virtual ObjectResult<pSeleccionar_OrdenesAbiertas_Result> pSeleccionar_OrdenesAbiertas(string grupo, string co_art)
        {
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            var co_artParameter = co_art != null ?
                new ObjectParameter("Co_art", co_art) :
                new ObjectParameter("Co_art", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionar_OrdenesAbiertas_Result>("pSeleccionar_OrdenesAbiertas", grupoParameter, co_artParameter);
        }
    
        public virtual ObjectResult<pSeleccionar_FactDev_Result> pSeleccionar_FactDev(string grupo, string co_art, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            var co_artParameter = co_art != null ?
                new ObjectParameter("Co_art", co_art) :
                new ObjectParameter("Co_art", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionar_FactDev_Result>("pSeleccionar_FactDev", grupoParameter, co_artParameter, desdeParameter, hastaParameter);
        }
    
        public virtual int pActualizarAutori_Equipo(Nullable<int> num_equipo, Nullable<System.DateTime> fecha, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, string descrip, string autorizado, Nullable<bool> anulado, Nullable<System.Guid> rowguid)
        {
            var num_equipoParameter = num_equipo.HasValue ?
                new ObjectParameter("num_equipo", num_equipo) :
                new ObjectParameter("num_equipo", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            var autorizadoParameter = autorizado != null ?
                new ObjectParameter("autorizado", autorizado) :
                new ObjectParameter("autorizado", typeof(string));
    
            var anuladoParameter = anulado.HasValue ?
                new ObjectParameter("anulado", anulado) :
                new ObjectParameter("anulado", typeof(bool));
    
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarAutori_Equipo", num_equipoParameter, fechaParameter, desdeParameter, hastaParameter, descripParameter, autorizadoParameter, anuladoParameter, rowguidParameter);
        }
    
        public virtual int pActualizarEquipos(string equi_des, string serial, Nullable<System.DateTime> fec_adq, Nullable<System.DateTime> fec_reg, Nullable<decimal> valor, string co_acti, string empresa, string co_usuario, Nullable<bool> activo, Nullable<System.Guid> rowguid)
        {
            var equi_desParameter = equi_des != null ?
                new ObjectParameter("equi_des", equi_des) :
                new ObjectParameter("equi_des", typeof(string));
    
            var serialParameter = serial != null ?
                new ObjectParameter("serial", serial) :
                new ObjectParameter("serial", typeof(string));
    
            var fec_adqParameter = fec_adq.HasValue ?
                new ObjectParameter("fec_adq", fec_adq) :
                new ObjectParameter("fec_adq", typeof(System.DateTime));
    
            var fec_regParameter = fec_reg.HasValue ?
                new ObjectParameter("fec_reg", fec_reg) :
                new ObjectParameter("fec_reg", typeof(System.DateTime));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(decimal));
    
            var co_actiParameter = co_acti != null ?
                new ObjectParameter("co_acti", co_acti) :
                new ObjectParameter("co_acti", typeof(string));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("co_usuario", co_usuario) :
                new ObjectParameter("co_usuario", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(bool));
    
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarEquipos", equi_desParameter, serialParameter, fec_adqParameter, fec_regParameter, valorParameter, co_actiParameter, empresaParameter, co_usuarioParameter, activoParameter, rowguidParameter);
        }
    
        public virtual int pActualizarMov_Equipo(Nullable<System.DateTime> fecha, Nullable<int> tipo, string pcp, Nullable<System.Guid> rowguid)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var pcpParameter = pcp != null ?
                new ObjectParameter("pcp", pcp) :
                new ObjectParameter("pcp", typeof(string));
    
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarMov_Equipo", fechaParameter, tipoParameter, pcpParameter, rowguidParameter);
        }
    
        public virtual int pEliminarEquipo(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarEquipo", rowguidParameter);
        }
    
        public virtual int pEliminarMov_Equipo(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarMov_Equipo", rowguidParameter);
        }
    
        public virtual int pInsertarAutori_Equipo(Nullable<int> num_equipo, Nullable<System.DateTime> fecha, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, string descrip, string autorizado, Nullable<bool> anulado)
        {
            var num_equipoParameter = num_equipo.HasValue ?
                new ObjectParameter("num_equipo", num_equipo) :
                new ObjectParameter("num_equipo", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            var autorizadoParameter = autorizado != null ?
                new ObjectParameter("autorizado", autorizado) :
                new ObjectParameter("autorizado", typeof(string));
    
            var anuladoParameter = anulado.HasValue ?
                new ObjectParameter("anulado", anulado) :
                new ObjectParameter("anulado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarAutori_Equipo", num_equipoParameter, fechaParameter, desdeParameter, hastaParameter, descripParameter, autorizadoParameter, anuladoParameter);
        }
    
        public virtual int pInsertarEquipos(string equi_des, string serial, Nullable<System.DateTime> fec_adq, Nullable<System.DateTime> fec_reg, Nullable<decimal> valor, string co_acti, string empresa, string co_usuario, Nullable<bool> activo)
        {
            var equi_desParameter = equi_des != null ?
                new ObjectParameter("equi_des", equi_des) :
                new ObjectParameter("equi_des", typeof(string));
    
            var serialParameter = serial != null ?
                new ObjectParameter("serial", serial) :
                new ObjectParameter("serial", typeof(string));
    
            var fec_adqParameter = fec_adq.HasValue ?
                new ObjectParameter("fec_adq", fec_adq) :
                new ObjectParameter("fec_adq", typeof(System.DateTime));
    
            var fec_regParameter = fec_reg.HasValue ?
                new ObjectParameter("fec_reg", fec_reg) :
                new ObjectParameter("fec_reg", typeof(System.DateTime));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(decimal));
    
            var co_actiParameter = co_acti != null ?
                new ObjectParameter("co_acti", co_acti) :
                new ObjectParameter("co_acti", typeof(string));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("co_usuario", co_usuario) :
                new ObjectParameter("co_usuario", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarEquipos", equi_desParameter, serialParameter, fec_adqParameter, fec_regParameter, valorParameter, co_actiParameter, empresaParameter, co_usuarioParameter, activoParameter);
        }
    
        public virtual int pInsertarMov_Equipo(Nullable<System.DateTime> fecha, Nullable<int> tipo, string pcp)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var pcpParameter = pcp != null ?
                new ObjectParameter("pcp", pcp) :
                new ObjectParameter("pcp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarMov_Equipo", fechaParameter, tipoParameter, pcpParameter);
        }
    
        public virtual int pSeleccionarAutori_Equipo(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pSeleccionarAutori_Equipo", rowguidParameter);
        }
    
        public virtual ObjectResult<pSeleccionarEquipos_Result> pSeleccionarEquipos(Nullable<int> num_equipo)
        {
            var num_equipoParameter = num_equipo.HasValue ?
                new ObjectParameter("num_equipo", num_equipo) :
                new ObjectParameter("num_equipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarEquipos_Result>("pSeleccionarEquipos", num_equipoParameter);
        }
    
        public virtual ObjectResult<pSeleccionarMov_Equipo_Result> pSeleccionarMov_Equipo(Nullable<int> mov_num)
        {
            var mov_numParameter = mov_num.HasValue ?
                new ObjectParameter("mov_num", mov_num) :
                new ObjectParameter("mov_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarMov_Equipo_Result>("pSeleccionarMov_Equipo", mov_numParameter);
        }
    
        public virtual int pActualizarMetas_Vtas(string grupo, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<decimal> meta, Nullable<decimal> tasa, Nullable<System.Guid> rowguid)
        {
            var grupoParameter = grupo != null ?
                new ObjectParameter("grupo", grupo) :
                new ObjectParameter("grupo", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            var metaParameter = meta.HasValue ?
                new ObjectParameter("meta", meta) :
                new ObjectParameter("meta", typeof(decimal));
    
            var tasaParameter = tasa.HasValue ?
                new ObjectParameter("tasa", tasa) :
                new ObjectParameter("tasa", typeof(decimal));
    
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarMetas_Vtas", grupoParameter, desdeParameter, hastaParameter, metaParameter, tasaParameter, rowguidParameter);
        }
    
        public virtual int pEliminarEst_Diaria(Nullable<int> id_meta)
        {
            var id_metaParameter = id_meta.HasValue ?
                new ObjectParameter("id_meta", id_meta) :
                new ObjectParameter("id_meta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarEst_Diaria", id_metaParameter);
        }
    
        public virtual int pEliminarMetas_Vtas(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarMetas_Vtas", rowguidParameter);
        }
    
        public virtual int pInsertarEst_Diaria(Nullable<System.DateTime> fecha, Nullable<int> id_meta, string grupo, Nullable<decimal> porc, Nullable<decimal> tasa_aju, Nullable<decimal> diaria_aju)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var id_metaParameter = id_meta.HasValue ?
                new ObjectParameter("id_meta", id_meta) :
                new ObjectParameter("id_meta", typeof(int));
    
            var grupoParameter = grupo != null ?
                new ObjectParameter("grupo", grupo) :
                new ObjectParameter("grupo", typeof(string));
    
            var porcParameter = porc.HasValue ?
                new ObjectParameter("porc", porc) :
                new ObjectParameter("porc", typeof(decimal));
    
            var tasa_ajuParameter = tasa_aju.HasValue ?
                new ObjectParameter("tasa_aju", tasa_aju) :
                new ObjectParameter("tasa_aju", typeof(decimal));
    
            var diaria_ajuParameter = diaria_aju.HasValue ?
                new ObjectParameter("diaria_aju", diaria_aju) :
                new ObjectParameter("diaria_aju", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarEst_Diaria", fechaParameter, id_metaParameter, grupoParameter, porcParameter, tasa_ajuParameter, diaria_ajuParameter);
        }
    
        public virtual int pInsertarMetas_Vtas(string grupo, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<decimal> meta, Nullable<decimal> tasa)
        {
            var grupoParameter = grupo != null ?
                new ObjectParameter("grupo", grupo) :
                new ObjectParameter("grupo", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            var metaParameter = meta.HasValue ?
                new ObjectParameter("meta", meta) :
                new ObjectParameter("meta", typeof(decimal));
    
            var tasaParameter = tasa.HasValue ?
                new ObjectParameter("tasa", tasa) :
                new ObjectParameter("tasa", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarMetas_Vtas", grupoParameter, desdeParameter, hastaParameter, metaParameter, tasaParameter);
        }
    
        public virtual ObjectResult<pSeleccionarEst_Diaria_Result> pSeleccionarEst_Diaria(Nullable<int> id_meta)
        {
            var id_metaParameter = id_meta.HasValue ?
                new ObjectParameter("id_meta", id_meta) :
                new ObjectParameter("id_meta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarEst_Diaria_Result>("pSeleccionarEst_Diaria", id_metaParameter);
        }
    
        public virtual ObjectResult<pSeleccionarMetas_Vtas_Result> pSeleccionarMetas_Vtas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarMetas_Vtas_Result>("pSeleccionarMetas_Vtas");
        }
    
        public virtual ObjectResult<pSeleccionarGrupo_Result> pSeleccionarGrupo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarGrupo_Result>("pSeleccionarGrupo");
        }
    
        public virtual ObjectResult<pSeleccionarGIT_Ubicaciones_Result> pSeleccionarGIT_Ubicaciones(string co_ubic)
        {
            var co_ubicParameter = co_ubic != null ?
                new ObjectParameter("co_ubic", co_ubic) :
                new ObjectParameter("co_ubic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarGIT_Ubicaciones_Result>("pSeleccionarGIT_Ubicaciones", co_ubicParameter);
        }
    
        public virtual int pGIT_UbicacionActualizar(string co_ubic, string descrip, Nullable<System.Guid> rowguid)
        {
            var co_ubicParameter = co_ubic != null ?
                new ObjectParameter("co_ubic", co_ubic) :
                new ObjectParameter("co_ubic", typeof(string));
    
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_UbicacionActualizar", co_ubicParameter, descripParameter, rowguidParameter);
        }
    
        public virtual int pGIT_UbicacionEliminar(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_UbicacionEliminar", rowguidParameter);
        }
    
        public virtual int pGIT_UbicacionInsertar(string co_ubic, string descrip)
        {
            var co_ubicParameter = co_ubic != null ?
                new ObjectParameter("co_ubic", co_ubic) :
                new ObjectParameter("co_ubic", typeof(string));
    
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_UbicacionInsertar", co_ubicParameter, descripParameter);
        }
    
        public virtual int pGIT_ConsultorActualizar(string co_consultor, string nombre, Nullable<System.Guid> rowguid)
        {
            var co_consultorParameter = co_consultor != null ?
                new ObjectParameter("co_consultor", co_consultor) :
                new ObjectParameter("co_consultor", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_ConsultorActualizar", co_consultorParameter, nombreParameter, rowguidParameter);
        }
    
        public virtual int pGIT_ConsultorEliminar(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_ConsultorEliminar", rowguidParameter);
        }
    
        public virtual int pGIT_ConsultorInsertar(string co_consultor, string nombre)
        {
            var co_consultorParameter = co_consultor != null ?
                new ObjectParameter("co_consultor", co_consultor) :
                new ObjectParameter("co_consultor", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_ConsultorInsertar", co_consultorParameter, nombreParameter);
        }
    
        public virtual ObjectResult<pSeleccionarGIT_Consultor_Result> pSeleccionarGIT_Consultor(string co_consultor)
        {
            var co_consultorParameter = co_consultor != null ?
                new ObjectParameter("co_consultor", co_consultor) :
                new ObjectParameter("co_consultor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarGIT_Consultor_Result>("pSeleccionarGIT_Consultor", co_consultorParameter);
        }
    
        public virtual int pGIT_Campos_LogicosActualizar(string co_campo, string descrip, Nullable<System.Guid> rowguid)
        {
            var co_campoParameter = co_campo != null ?
                new ObjectParameter("co_campo", co_campo) :
                new ObjectParameter("co_campo", typeof(string));
    
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_Campos_LogicosActualizar", co_campoParameter, descripParameter, rowguidParameter);
        }
    
        public virtual int pGIT_Campos_LogicosEliminar(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_Campos_LogicosEliminar", rowguidParameter);
        }
    
        public virtual int pGIT_Campos_LogicosInsertar(string co_campo, string descrip)
        {
            var co_campoParameter = co_campo != null ?
                new ObjectParameter("co_campo", co_campo) :
                new ObjectParameter("co_campo", typeof(string));
    
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_Campos_LogicosInsertar", co_campoParameter, descripParameter);
        }
    
        public virtual ObjectResult<pSeleccionarGIT_CamposLogicos_Result> pSeleccionarGIT_CamposLogicos(string co_campo)
        {
            var co_campoParameter = co_campo != null ?
                new ObjectParameter("co_campo", co_campo) :
                new ObjectParameter("co_campo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarGIT_CamposLogicos_Result>("pSeleccionarGIT_CamposLogicos", co_campoParameter);
        }
    
        public virtual int pGIT_ActivoActualizar(string id_activo, string descrip, string serial, string modelo, Nullable<decimal> valor, Nullable<System.DateTime> fecha_reg, Nullable<System.DateTime> fecha_adq, Nullable<System.DateTime> fecha_reti, string co_ubic, string id_cat_activo, Nullable<System.Guid> rowguid)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            var serialParameter = serial != null ?
                new ObjectParameter("serial", serial) :
                new ObjectParameter("serial", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("modelo", modelo) :
                new ObjectParameter("modelo", typeof(string));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(decimal));
    
            var fecha_regParameter = fecha_reg.HasValue ?
                new ObjectParameter("fecha_reg", fecha_reg) :
                new ObjectParameter("fecha_reg", typeof(System.DateTime));
    
            var fecha_adqParameter = fecha_adq.HasValue ?
                new ObjectParameter("fecha_adq", fecha_adq) :
                new ObjectParameter("fecha_adq", typeof(System.DateTime));
    
            var fecha_retiParameter = fecha_reti.HasValue ?
                new ObjectParameter("fecha_reti", fecha_reti) :
                new ObjectParameter("fecha_reti", typeof(System.DateTime));
    
            var co_ubicParameter = co_ubic != null ?
                new ObjectParameter("co_ubic", co_ubic) :
                new ObjectParameter("co_ubic", typeof(string));
    
            var id_cat_activoParameter = id_cat_activo != null ?
                new ObjectParameter("id_cat_activo", id_cat_activo) :
                new ObjectParameter("id_cat_activo", typeof(string));
    
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_ActivoActualizar", id_activoParameter, descripParameter, serialParameter, modeloParameter, valorParameter, fecha_regParameter, fecha_adqParameter, fecha_retiParameter, co_ubicParameter, id_cat_activoParameter, rowguidParameter);
        }
    
        public virtual int pGIT_ActivoEliminar(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_ActivoEliminar", rowguidParameter);
        }
    
        public virtual int pGIT_ActivoInsertar(string id_activo, string descrip, string serial, string modelo, Nullable<decimal> valor, Nullable<System.DateTime> fecha_reg, Nullable<System.DateTime> fecha_adq, Nullable<System.DateTime> fecha_reti, string co_ubic, string id_cat_activo)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            var serialParameter = serial != null ?
                new ObjectParameter("serial", serial) :
                new ObjectParameter("serial", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("modelo", modelo) :
                new ObjectParameter("modelo", typeof(string));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(decimal));
    
            var fecha_regParameter = fecha_reg.HasValue ?
                new ObjectParameter("fecha_reg", fecha_reg) :
                new ObjectParameter("fecha_reg", typeof(System.DateTime));
    
            var fecha_adqParameter = fecha_adq.HasValue ?
                new ObjectParameter("fecha_adq", fecha_adq) :
                new ObjectParameter("fecha_adq", typeof(System.DateTime));
    
            var fecha_retiParameter = fecha_reti.HasValue ?
                new ObjectParameter("fecha_reti", fecha_reti) :
                new ObjectParameter("fecha_reti", typeof(System.DateTime));
    
            var co_ubicParameter = co_ubic != null ?
                new ObjectParameter("co_ubic", co_ubic) :
                new ObjectParameter("co_ubic", typeof(string));
    
            var id_cat_activoParameter = id_cat_activo != null ?
                new ObjectParameter("id_cat_activo", id_cat_activo) :
                new ObjectParameter("id_cat_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_ActivoInsertar", id_activoParameter, descripParameter, serialParameter, modeloParameter, valorParameter, fecha_regParameter, fecha_adqParameter, fecha_retiParameter, co_ubicParameter, id_cat_activoParameter);
        }
    
        public virtual int pGIT_Catalogo_ActivoActualizar(string id_cat_activo, string descripcion, Nullable<System.Guid> rowguid)
        {
            var id_cat_activoParameter = id_cat_activo != null ?
                new ObjectParameter("id_cat_activo", id_cat_activo) :
                new ObjectParameter("id_cat_activo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_Catalogo_ActivoActualizar", id_cat_activoParameter, descripcionParameter, rowguidParameter);
        }
    
        public virtual int pGIT_Catalogo_ActivoEliminar(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_Catalogo_ActivoEliminar", rowguidParameter);
        }
    
        public virtual int pGIT_Catalogo_ActivoInsertar(string id_cat_activo, string descripcion)
        {
            var id_cat_activoParameter = id_cat_activo != null ?
                new ObjectParameter("id_cat_activo", id_cat_activo) :
                new ObjectParameter("id_cat_activo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_Catalogo_ActivoInsertar", id_cat_activoParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<pSeleccionarUsuario_Result> pSeleccionarUsuario(string co_usuario)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarUsuario_Result>("pSeleccionarUsuario", co_usuarioParameter);
        }
    
        public virtual ObjectResult<pSeleccionarGIT_Catalalogo_Activo_Result> pSeleccionarGIT_Catalalogo_Activo(string id_cat_activo)
        {
            var id_cat_activoParameter = id_cat_activo != null ?
                new ObjectParameter("id_cat_activo", id_cat_activo) :
                new ObjectParameter("id_cat_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarGIT_Catalalogo_Activo_Result>("pSeleccionarGIT_Catalalogo_Activo", id_cat_activoParameter);
        }
    
        public virtual int pGIT_Asign_EquipoActualizar(string cod_emp, string co_empresa, string id_activo, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, string co_consultor, Nullable<System.Guid> rowguid, string nombre)
        {
            var cod_empParameter = cod_emp != null ?
                new ObjectParameter("cod_emp", cod_emp) :
                new ObjectParameter("cod_emp", typeof(string));
    
            var co_empresaParameter = co_empresa != null ?
                new ObjectParameter("co_empresa", co_empresa) :
                new ObjectParameter("co_empresa", typeof(string));
    
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            var co_consultorParameter = co_consultor != null ?
                new ObjectParameter("co_consultor", co_consultor) :
                new ObjectParameter("co_consultor", typeof(string));
    
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_Asign_EquipoActualizar", cod_empParameter, co_empresaParameter, id_activoParameter, desdeParameter, hastaParameter, co_consultorParameter, rowguidParameter, nombreParameter);
        }
    
        public virtual int pGIT_Asign_EquipoEliminar(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_Asign_EquipoEliminar", rowguidParameter);
        }
    
        public virtual ObjectResult<pSeleccionarGIT_Activo_Result> pSeleccionarGIT_Activo(string id_activo)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarGIT_Activo_Result>("pSeleccionarGIT_Activo", id_activoParameter);
        }
    
        public virtual ObjectResult<pGitSeleccionarAsignacion_Result> pGitSeleccionarAsignacion(string id_activo)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pGitSeleccionarAsignacion_Result>("pGitSeleccionarAsignacion", id_activoParameter);
        }
    
        public virtual ObjectResult<pSeleccionarGIT_Asignaciones_Result> pSeleccionarGIT_Asignaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarGIT_Asignaciones_Result>("pSeleccionarGIT_Asignaciones");
        }
    
        public virtual ObjectResult<pSeleccionarEmpleados_Result> pSeleccionarEmpleados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarEmpleados_Result>("pSeleccionarEmpleados");
        }
    
        public virtual int pGIT_MantenimientoActualizar(string id_activo, Nullable<System.DateTime> fecha, string observacion, Nullable<decimal> valor, string asesor_ext, string co_consultor, string problema, string solucion, Nullable<System.Guid> rowguid)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("observacion", observacion) :
                new ObjectParameter("observacion", typeof(string));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(decimal));
    
            var asesor_extParameter = asesor_ext != null ?
                new ObjectParameter("asesor_ext", asesor_ext) :
                new ObjectParameter("asesor_ext", typeof(string));
    
            var co_consultorParameter = co_consultor != null ?
                new ObjectParameter("co_consultor", co_consultor) :
                new ObjectParameter("co_consultor", typeof(string));
    
            var problemaParameter = problema != null ?
                new ObjectParameter("problema", problema) :
                new ObjectParameter("problema", typeof(string));
    
            var solucionParameter = solucion != null ?
                new ObjectParameter("solucion", solucion) :
                new ObjectParameter("solucion", typeof(string));
    
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_MantenimientoActualizar", id_activoParameter, fechaParameter, observacionParameter, valorParameter, asesor_extParameter, co_consultorParameter, problemaParameter, solucionParameter, rowguidParameter);
        }
    
        public virtual int pGIT_MantenimientoEliminar(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_MantenimientoEliminar", rowguidParameter);
        }
    
        public virtual int pGIT_MantenimientoInsertar(string id_activo, Nullable<System.DateTime> fecha, string observacion, Nullable<decimal> valor, string asesor_ext, string co_consultor, string problema, string solucion)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("observacion", observacion) :
                new ObjectParameter("observacion", typeof(string));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(decimal));
    
            var asesor_extParameter = asesor_ext != null ?
                new ObjectParameter("asesor_ext", asesor_ext) :
                new ObjectParameter("asesor_ext", typeof(string));
    
            var co_consultorParameter = co_consultor != null ?
                new ObjectParameter("co_consultor", co_consultor) :
                new ObjectParameter("co_consultor", typeof(string));
    
            var problemaParameter = problema != null ?
                new ObjectParameter("problema", problema) :
                new ObjectParameter("problema", typeof(string));
    
            var solucionParameter = solucion != null ?
                new ObjectParameter("solucion", solucion) :
                new ObjectParameter("solucion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_MantenimientoInsertar", id_activoParameter, fechaParameter, observacionParameter, valorParameter, asesor_extParameter, co_consultorParameter, problemaParameter, solucionParameter);
        }
    
        public virtual int pGIT_Asign_EquipoInsertar(string cod_emp, string co_empresa, string id_activo, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, string co_consultor, string nombre)
        {
            var cod_empParameter = cod_emp != null ?
                new ObjectParameter("cod_emp", cod_emp) :
                new ObjectParameter("cod_emp", typeof(string));
    
            var co_empresaParameter = co_empresa != null ?
                new ObjectParameter("co_empresa", co_empresa) :
                new ObjectParameter("co_empresa", typeof(string));
    
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            var co_consultorParameter = co_consultor != null ?
                new ObjectParameter("co_consultor", co_consultor) :
                new ObjectParameter("co_consultor", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_Asign_EquipoInsertar", cod_empParameter, co_empresaParameter, id_activoParameter, desdeParameter, hastaParameter, co_consultorParameter, nombreParameter);
        }
    
        public virtual ObjectResult<pSeleccionarGIT_Mantenimiento_Result> pSeleccionarGIT_Mantenimiento(string id_activo)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarGIT_Mantenimiento_Result>("pSeleccionarGIT_Mantenimiento", id_activoParameter);
        }
    
        public virtual ObjectResult<pGIT_BuscarRowguid_Result> pGIT_BuscarRowguid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pGIT_BuscarRowguid_Result>("pGIT_BuscarRowguid");
        }
    
        public virtual ObjectResult<Nullable<int>> pSeleccionarGIT_IDmtto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("pSeleccionarGIT_IDmtto");
        }
    
        public virtual ObjectResult<pSeleccionarGIT_Asign_Equipo_Result> pSeleccionarGIT_Asign_Equipo(string id_activo)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarGIT_Asign_Equipo_Result>("pSeleccionarGIT_Asign_Equipo", id_activoParameter);
        }
    
        public virtual ObjectResult<pSeleccionarGIT_Movimiento_Result> pSeleccionarGIT_Movimiento(string id_activo)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarGIT_Movimiento_Result>("pSeleccionarGIT_Movimiento", id_activoParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> pGitSeleccionarStatus(string id_activo)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("pGitSeleccionarStatus", id_activoParameter);
        }
    
        public virtual ObjectResult<pSeleccionarGIT_MovimientoES_Result> pSeleccionarGIT_MovimientoES(Nullable<int> id_mov)
        {
            var id_movParameter = id_mov.HasValue ?
                new ObjectParameter("id_mov", id_mov) :
                new ObjectParameter("id_mov", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarGIT_MovimientoES_Result>("pSeleccionarGIT_MovimientoES", id_movParameter);
        }
    
        public virtual int pInsertarSupervisados(string nomina, string cod_emp, string co_usuario, string nombre)
        {
            var nominaParameter = nomina != null ?
                new ObjectParameter("nomina", nomina) :
                new ObjectParameter("nomina", typeof(string));
    
            var cod_empParameter = cod_emp != null ?
                new ObjectParameter("cod_emp", cod_emp) :
                new ObjectParameter("cod_emp", typeof(string));
    
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("co_usuario", co_usuario) :
                new ObjectParameter("co_usuario", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarSupervisados", nominaParameter, cod_empParameter, co_usuarioParameter, nombreParameter);
        }
    
        public virtual ObjectResult<plistarNomina_Result> plistarNomina(string empresa)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<plistarNomina_Result>("plistarNomina", empresaParameter);
        }
    
        public virtual ObjectResult<pSelecionarEmpresaNomina_Result> pSelecionarEmpresaNomina()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSelecionarEmpresaNomina_Result>("pSelecionarEmpresaNomina");
        }
    
        public virtual ObjectResult<pSeleccionarSupervisados_Result> pSeleccionarSupervisados(string co_usuario)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("co_usuario", co_usuario) :
                new ObjectParameter("co_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarSupervisados_Result>("pSeleccionarSupervisados", co_usuarioParameter);
        }
    
        public virtual ObjectResult<pSeleccionarSupervisadosAll_Result> pSeleccionarSupervisadosAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarSupervisadosAll_Result>("pSeleccionarSupervisadosAll");
        }
    
        public virtual ObjectResult<pSeleccionarSupervisor_Result> pSeleccionarSupervisor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarSupervisor_Result>("pSeleccionarSupervisor");
        }
    
        public virtual ObjectResult<string> pMostrarSupervisados(string co_usuario)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("co_usuario", co_usuario) :
                new ObjectParameter("co_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pMostrarSupervisados", co_usuarioParameter);
        }
    
        public virtual ObjectResult<pBuscarEmpleadosG_Result> pBuscarEmpleadosG(string co_usuario)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("co_usuario", co_usuario) :
                new ObjectParameter("co_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pBuscarEmpleadosG_Result>("pBuscarEmpleadosG", co_usuarioParameter);
        }
    
        public virtual ObjectResult<pSeleccionarGIT_Mov1_Result> pSeleccionarGIT_Mov1(string id_activo)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarGIT_Mov1_Result>("pSeleccionarGIT_Mov1", id_activoParameter);
        }
    
        public virtual ObjectResult<pSeleccionarGIT_Mov1Grid_Result> pSeleccionarGIT_Mov1Grid(string co_usuario)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("co_usuario", co_usuario) :
                new ObjectParameter("co_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarGIT_Mov1Grid_Result>("pSeleccionarGIT_Mov1Grid", co_usuarioParameter);
        }
    
        public virtual int pGitCambiarStatus(string id_activo, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGitCambiarStatus", id_activoParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<pSeleccionarID_Asignacion_Result> pSeleccionarID_Asignacion(string id_activo)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarID_Asignacion_Result>("pSeleccionarID_Asignacion", id_activoParameter);
        }
    
        public virtual int pActualizarGIT_id_asign(string id_activo, Nullable<int> id_asign)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            var id_asignParameter = id_asign.HasValue ?
                new ObjectParameter("id_asign", id_asign) :
                new ObjectParameter("id_asign", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarGIT_id_asign", id_activoParameter, id_asignParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> pBuscarAsignacionActivo(string id_activo)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("pBuscarAsignacionActivo", id_activoParameter);
        }
    
        public virtual ObjectResult<string> pseleccionarActivo_Asign_Super(string cod_emp)
        {
            var cod_empParameter = cod_emp != null ?
                new ObjectParameter("cod_emp", cod_emp) :
                new ObjectParameter("cod_emp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pseleccionarActivo_Asign_Super", cod_empParameter);
        }
    
        public virtual ObjectResult<pConfirmarSalidaPCP_Result> pConfirmarSalidaPCP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pConfirmarSalidaPCP_Result>("pConfirmarSalidaPCP");
        }
    
        public virtual int pConfirmarFecha_pcp(Nullable<int> id_mov)
        {
            var id_movParameter = id_mov.HasValue ?
                new ObjectParameter("id_mov", id_mov) :
                new ObjectParameter("id_mov", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pConfirmarFecha_pcp", id_movParameter);
        }
    
        public virtual ObjectResult<pConfirmarEntradaPCP_Result> pConfirmarEntradaPCP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pConfirmarEntradaPCP_Result>("pConfirmarEntradaPCP");
        }
    
        public virtual int pConfirmarFecha_pcp_entrada(Nullable<int> id_mov)
        {
            var id_movParameter = id_mov.HasValue ?
                new ObjectParameter("id_mov", id_mov) :
                new ObjectParameter("id_mov", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pConfirmarFecha_pcp_entrada", id_movParameter);
        }
    
        public virtual ObjectResult<pValidarAnulado_Result> pValidarAnulado(Nullable<int> id_mov)
        {
            var id_movParameter = id_mov.HasValue ?
                new ObjectParameter("id_mov", id_mov) :
                new ObjectParameter("id_mov", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pValidarAnulado_Result>("pValidarAnulado", id_movParameter);
        }
    
        public virtual ObjectResult<pConfirmarEntradaPCP2_Result> pConfirmarEntradaPCP2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pConfirmarEntradaPCP2_Result>("pConfirmarEntradaPCP2");
        }
    
        public virtual ObjectResult<pRepEmpleados_Result> pRepEmpleados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pRepEmpleados_Result>("pRepEmpleados");
        }
    
        public virtual ObjectResult<pSeleccionarGIT_MovES_Result> pSeleccionarGIT_MovES(string id_activo)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarGIT_MovES_Result>("pSeleccionarGIT_MovES", id_activoParameter);
        }
    
        public virtual ObjectResult<pBuscarActivoByName_Result> pBuscarActivoByName(string co_ubic, string id_cat_activo)
        {
            var co_ubicParameter = co_ubic != null ?
                new ObjectParameter("co_ubic", co_ubic) :
                new ObjectParameter("co_ubic", typeof(string));
    
            var id_cat_activoParameter = id_cat_activo != null ?
                new ObjectParameter("id_cat_activo", id_cat_activo) :
                new ObjectParameter("id_cat_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pBuscarActivoByName_Result>("pBuscarActivoByName", co_ubicParameter, id_cat_activoParameter);
        }
    
        public virtual ObjectResult<pSeleccionarEmpleadobyActivo_Result> pSeleccionarEmpleadobyActivo(string id_activo)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarEmpleadobyActivo_Result>("pSeleccionarEmpleadobyActivo", id_activoParameter);
        }
    
        public virtual ObjectResult<pSeleccionarActivosbyUsuario_Result> pSeleccionarActivosbyUsuario(string co_usuario)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("co_usuario", co_usuario) :
                new ObjectParameter("co_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarActivosbyUsuario_Result>("pSeleccionarActivosbyUsuario", co_usuarioParameter);
        }
    
        public virtual ObjectResult<pSeleccionarEmpleadobyCod_emp_Result> pSeleccionarEmpleadobyCod_emp(string cod_emp)
        {
            var cod_empParameter = cod_emp != null ?
                new ObjectParameter("cod_emp", cod_emp) :
                new ObjectParameter("cod_emp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarEmpleadobyCod_emp_Result>("pSeleccionarEmpleadobyCod_emp", cod_empParameter);
        }
    
        public virtual ObjectResult<pSeleccionarActivoSistemas_Result> pSeleccionarActivoSistemas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarActivoSistemas_Result>("pSeleccionarActivoSistemas");
        }
    
        public virtual ObjectResult<pConfirmarSalidasNew_Result> pConfirmarSalidasNew()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pConfirmarSalidasNew_Result>("pConfirmarSalidasNew");
        }
    
        public virtual ObjectResult<pRepEtiqueta_Result> pRepEtiqueta(string id_activo)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pRepEtiqueta_Result>("pRepEtiqueta", id_activoParameter);
        }
    
        public virtual ObjectResult<pRepOrdenesCompra_Result> pRepOrdenesCompra(string grupo)
        {
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pRepOrdenesCompra_Result>("pRepOrdenesCompra", grupoParameter);
        }
    
        public virtual int pInsertarGit_Gerencia(Nullable<System.DateTime> fecha, string id_activo, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, string autorizacion, string co_usuario, string cod_emp, string cod_empresa)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            var autorizacionParameter = autorizacion != null ?
                new ObjectParameter("autorizacion", autorizacion) :
                new ObjectParameter("autorizacion", typeof(string));
    
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("co_usuario", co_usuario) :
                new ObjectParameter("co_usuario", typeof(string));
    
            var cod_empParameter = cod_emp != null ?
                new ObjectParameter("cod_emp", cod_emp) :
                new ObjectParameter("cod_emp", typeof(string));
    
            var cod_empresaParameter = cod_empresa != null ?
                new ObjectParameter("cod_empresa", cod_empresa) :
                new ObjectParameter("cod_empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarGit_Gerencia", fechaParameter, id_activoParameter, desdeParameter, hastaParameter, autorizacionParameter, co_usuarioParameter, cod_empParameter, cod_empresaParameter);
        }
    
        public virtual ObjectResult<pSeleccionarNominaEmpleado_Result> pSeleccionarNominaEmpleado(string nombre, string cod_emp)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var cod_empParameter = cod_emp != null ?
                new ObjectParameter("cod_emp", cod_emp) :
                new ObjectParameter("cod_emp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarNominaEmpleado_Result>("pSeleccionarNominaEmpleado", nombreParameter, cod_empParameter);
        }
    
        public virtual int pGIT_Config_LogicaActualizar(string id_activo, string co_campo, string valor, Nullable<System.Guid> rowguid)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            var co_campoParameter = co_campo != null ?
                new ObjectParameter("co_campo", co_campo) :
                new ObjectParameter("co_campo", typeof(string));
    
            var valorParameter = valor != null ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(string));
    
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_Config_LogicaActualizar", id_activoParameter, co_campoParameter, valorParameter, rowguidParameter);
        }
    
        public virtual int pGIT_Config_LogicaEliminar(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_Config_LogicaEliminar", rowguidParameter);
        }
    
        public virtual int pGIT_Config_LogicaInsertar(string id_activo, string co_campo, string valor)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            var co_campoParameter = co_campo != null ?
                new ObjectParameter("co_campo", co_campo) :
                new ObjectParameter("co_campo", typeof(string));
    
            var valorParameter = valor != null ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGIT_Config_LogicaInsertar", id_activoParameter, co_campoParameter, valorParameter);
        }
    
        public virtual ObjectResult<pSeleccionarConf_Logica_Result> pSeleccionarConf_Logica()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarConf_Logica_Result>("pSeleccionarConf_Logica");
        }
    
        public virtual ObjectResult<pConf_LogicaDGV_Result> pConf_LogicaDGV(string id_activo)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pConf_LogicaDGV_Result>("pConf_LogicaDGV", id_activoParameter);
        }
    
        public virtual ObjectResult<pSeleccionarEmpleadoSupervisado_Result1> pSeleccionarEmpleadoSupervisado(string cod_emp)
        {
            var cod_empParameter = cod_emp != null ?
                new ObjectParameter("cod_emp", cod_emp) :
                new ObjectParameter("cod_emp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarEmpleadoSupervisado_Result1>("pSeleccionarEmpleadoSupervisado", cod_empParameter);
        }
    
        public virtual ObjectResult<string> pContadorActivo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pContadorActivo");
        }
    
        public virtual ObjectResult<pBuscarActivobyName2_Result1> pBuscarActivobyName2(string empresa)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pBuscarActivobyName2_Result1>("pBuscarActivobyName2", empresaParameter);
        }
    
        public virtual ObjectResult<pBuscarActivobyName1_Result> pBuscarActivobyName1(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pBuscarActivobyName1_Result>("pBuscarActivobyName1", nombreParameter);
        }
    
        public virtual ObjectResult<pBuscarActivo_Result> pBuscarActivo(string co_ubic, string id_cat_activo)
        {
            var co_ubicParameter = co_ubic != null ?
                new ObjectParameter("co_ubic", co_ubic) :
                new ObjectParameter("co_ubic", typeof(string));
    
            var id_cat_activoParameter = id_cat_activo != null ?
                new ObjectParameter("id_cat_activo", id_cat_activo) :
                new ObjectParameter("id_cat_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pBuscarActivo_Result>("pBuscarActivo", co_ubicParameter, id_cat_activoParameter);
        }
    
        public virtual ObjectResult<pBuscarActivo2_Result> pBuscarActivo2(string id_activo)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pBuscarActivo2_Result>("pBuscarActivo2", id_activoParameter);
        }
    
        public virtual int pCambiarStatusActivo(string id_activo)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pCambiarStatusActivo", id_activoParameter);
        }
    
        public virtual int pCambiarStatusActivo2(string id_activo)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pCambiarStatusActivo2", id_activoParameter);
        }
    
        public virtual ObjectResult<string> pValidarSalida(string id_activo)
        {
            var id_activoParameter = id_activo != null ?
                new ObjectParameter("id_activo", id_activo) :
                new ObjectParameter("id_activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pValidarSalida", id_activoParameter);
        }
    
        public virtual ObjectResult<pValidarAsignacion_Result> pValidarAsignacion(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pValidarAsignacion_Result>("pValidarAsignacion", nombreParameter);
        }
    
        public virtual ObjectResult<pSeleccionarUsuariosN_Result> pSeleccionarUsuariosN(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarUsuariosN_Result>("pSeleccionarUsuariosN", nombreParameter);
        }
    
        public virtual ObjectResult<pSeleccionarTablasArticulos_Result> pSeleccionarTablasArticulos(string grupo)
        {
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarTablasArticulos_Result>("pSeleccionarTablasArticulos", grupoParameter);
        }
    }
}
