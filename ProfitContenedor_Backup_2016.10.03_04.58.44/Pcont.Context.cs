//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProfitContenedor
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class Profit_RGEntities : DbContext
    {
        public Profit_RGEntities()
            : base("name=Profit_RGEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Reng_emb> Reng_emb { get; set; }
        public DbSet<Naviera> Navieras { get; set; }
        public DbSet<Embarque> Embarques { get; set; }
        public DbSet<Usuario> Usuarios { get; set; }
        public DbSet<Pantalla_Stock> Pantalla_Stock { get; set; }
        public DbSet<Gene_claves> Gene_claves { get; set; }
        public DbSet<Usu_Emp> Usu_Emp { get; set; }
        public DbSet<Ord_reng> Ord_reng { get; set; }
        public DbSet<Ordene> Ordenes { get; set; }
        public DbSet<Consecutivo> Consecutivoes { get; set; }
        public DbSet<Empresa> Empresas { get; set; }
        public DbSet<Ig_reclamo_ped> Ig_reclamo_ped { get; set; }
        public DbSet<Ig_pedidos> Ig_pedidos { get; set; }
        public DbSet<Excepcion_H> Excepcion_H { get; set; }
        public DbSet<Excepcion_P> Excepcion_P { get; set; }
    
        public virtual int pActualizarEmbarque(string bl, Nullable<System.DateTime> fecha_sal, Nullable<System.DateTime> fecha_lleg, string co_consig, string des_consig, string pto_sal, string pto_lleg, string co_naviera, string co_shipper, string shipper_des, Nullable<int> c20p, Nullable<int> c40p, byte[] valiador)
        {
            var blParameter = bl != null ?
                new ObjectParameter("bl", bl) :
                new ObjectParameter("bl", typeof(string));
    
            var fecha_salParameter = fecha_sal.HasValue ?
                new ObjectParameter("fecha_sal", fecha_sal) :
                new ObjectParameter("fecha_sal", typeof(System.DateTime));
    
            var fecha_llegParameter = fecha_lleg.HasValue ?
                new ObjectParameter("fecha_lleg", fecha_lleg) :
                new ObjectParameter("fecha_lleg", typeof(System.DateTime));
    
            var co_consigParameter = co_consig != null ?
                new ObjectParameter("co_consig", co_consig) :
                new ObjectParameter("co_consig", typeof(string));
    
            var des_consigParameter = des_consig != null ?
                new ObjectParameter("des_consig", des_consig) :
                new ObjectParameter("des_consig", typeof(string));
    
            var pto_salParameter = pto_sal != null ?
                new ObjectParameter("pto_sal", pto_sal) :
                new ObjectParameter("pto_sal", typeof(string));
    
            var pto_llegParameter = pto_lleg != null ?
                new ObjectParameter("pto_lleg", pto_lleg) :
                new ObjectParameter("pto_lleg", typeof(string));
    
            var co_navieraParameter = co_naviera != null ?
                new ObjectParameter("co_naviera", co_naviera) :
                new ObjectParameter("co_naviera", typeof(string));
    
            var co_shipperParameter = co_shipper != null ?
                new ObjectParameter("co_shipper", co_shipper) :
                new ObjectParameter("co_shipper", typeof(string));
    
            var shipper_desParameter = shipper_des != null ?
                new ObjectParameter("shipper_des", shipper_des) :
                new ObjectParameter("shipper_des", typeof(string));
    
            var c20pParameter = c20p.HasValue ?
                new ObjectParameter("c20p", c20p) :
                new ObjectParameter("c20p", typeof(int));
    
            var c40pParameter = c40p.HasValue ?
                new ObjectParameter("c40p", c40p) :
                new ObjectParameter("c40p", typeof(int));
    
            var valiadorParameter = valiador != null ?
                new ObjectParameter("valiador", valiador) :
                new ObjectParameter("valiador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarEmbarque", blParameter, fecha_salParameter, fecha_llegParameter, co_consigParameter, des_consigParameter, pto_salParameter, pto_llegParameter, co_navieraParameter, co_shipperParameter, shipper_desParameter, c20pParameter, c40pParameter, valiadorParameter);
        }
    
        public virtual int pActualizarReng_emb(Nullable<decimal> total_art, Nullable<decimal> reng_neto, Nullable<System.Guid> rowguid)
        {
            var total_artParameter = total_art.HasValue ?
                new ObjectParameter("total_art", total_art) :
                new ObjectParameter("total_art", typeof(decimal));
    
            var reng_netoParameter = reng_neto.HasValue ?
                new ObjectParameter("reng_neto", reng_neto) :
                new ObjectParameter("reng_neto", typeof(decimal));
    
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarReng_emb", total_artParameter, reng_netoParameter, rowguidParameter);
        }
    
        public virtual int pEliminarEmbarque(byte[] validador)
        {
            var validadorParameter = validador != null ?
                new ObjectParameter("validador", validador) :
                new ObjectParameter("validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarEmbarque", validadorParameter);
        }
    
        public virtual int pEliminarReng_emb(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarReng_emb", rowguidParameter);
        }
    
        public virtual int pInsertarReng_emb(string empresa, Nullable<int> nro_viaje, Nullable<int> fact_num, string co_art, string art_des, Nullable<decimal> total_art, Nullable<decimal> prec_vta, Nullable<decimal> tasa)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var nro_viajeParameter = nro_viaje.HasValue ?
                new ObjectParameter("nro_viaje", nro_viaje) :
                new ObjectParameter("nro_viaje", typeof(int));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            var co_artParameter = co_art != null ?
                new ObjectParameter("co_art", co_art) :
                new ObjectParameter("co_art", typeof(string));
    
            var art_desParameter = art_des != null ?
                new ObjectParameter("art_des", art_des) :
                new ObjectParameter("art_des", typeof(string));
    
            var total_artParameter = total_art.HasValue ?
                new ObjectParameter("total_art", total_art) :
                new ObjectParameter("total_art", typeof(decimal));
    
            var prec_vtaParameter = prec_vta.HasValue ?
                new ObjectParameter("prec_vta", prec_vta) :
                new ObjectParameter("prec_vta", typeof(decimal));
    
            var tasaParameter = tasa.HasValue ?
                new ObjectParameter("tasa", tasa) :
                new ObjectParameter("tasa", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarReng_emb", empresaParameter, nro_viajeParameter, fact_numParameter, co_artParameter, art_desParameter, total_artParameter, prec_vtaParameter, tasaParameter);
        }
    
        public virtual ObjectResult<string> pObtenerTablaStr(string sCampoClave1, string sColumna1, Nullable<int> iTipo, string sTabla)
        {
            var sCampoClave1Parameter = sCampoClave1 != null ?
                new ObjectParameter("sCampoClave1", sCampoClave1) :
                new ObjectParameter("sCampoClave1", typeof(string));
    
            var sColumna1Parameter = sColumna1 != null ?
                new ObjectParameter("sColumna1", sColumna1) :
                new ObjectParameter("sColumna1", typeof(string));
    
            var iTipoParameter = iTipo.HasValue ?
                new ObjectParameter("iTipo", iTipo) :
                new ObjectParameter("iTipo", typeof(int));
    
            var sTablaParameter = sTabla != null ?
                new ObjectParameter("sTabla", sTabla) :
                new ObjectParameter("sTabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pObtenerTablaStr", sCampoClave1Parameter, sColumna1Parameter, iTipoParameter, sTablaParameter);
        }
    
        public virtual ObjectResult<pSeleccionarReng_emb_Result> pSeleccionarReng_emb(Nullable<int> nro_viaje)
        {
            var nro_viajeParameter = nro_viaje.HasValue ?
                new ObjectParameter("nro_viaje", nro_viaje) :
                new ObjectParameter("nro_viaje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarReng_emb_Result>("pSeleccionarReng_emb", nro_viajeParameter);
        }
    
        public virtual ObjectResult<pSeleccionarEmbarque_Result> pSeleccionarEmbarque(Nullable<int> nro_viaje)
        {
            var nro_viajeParameter = nro_viaje.HasValue ?
                new ObjectParameter("nro_viaje", nro_viaje) :
                new ObjectParameter("nro_viaje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarEmbarque_Result>("pSeleccionarEmbarque", nro_viajeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> pObtenerTablaInt(Nullable<int> iCampoClave1, string sColumna1, Nullable<int> iTipo, string sTabla)
        {
            var iCampoClave1Parameter = iCampoClave1.HasValue ?
                new ObjectParameter("iCampoClave1", iCampoClave1) :
                new ObjectParameter("iCampoClave1", typeof(int));
    
            var sColumna1Parameter = sColumna1 != null ?
                new ObjectParameter("sColumna1", sColumna1) :
                new ObjectParameter("sColumna1", typeof(string));
    
            var iTipoParameter = iTipo.HasValue ?
                new ObjectParameter("iTipo", iTipo) :
                new ObjectParameter("iTipo", typeof(int));
    
            var sTablaParameter = sTabla != null ?
                new ObjectParameter("sTabla", sTabla) :
                new ObjectParameter("sTabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("pObtenerTablaInt", iCampoClave1Parameter, sColumna1Parameter, iTipoParameter, sTablaParameter);
        }
    
        public virtual int pInsertarEmbarque(string bl, Nullable<System.DateTime> fecha_sal, Nullable<System.DateTime> fecha_lleg, string co_consig, string des_consig, string pto_sal, string pto_lleg, string co_naviera, string co_shipper, string shipper_des, Nullable<int> c20p, Nullable<int> c40p)
        {
            var blParameter = bl != null ?
                new ObjectParameter("bl", bl) :
                new ObjectParameter("bl", typeof(string));
    
            var fecha_salParameter = fecha_sal.HasValue ?
                new ObjectParameter("fecha_sal", fecha_sal) :
                new ObjectParameter("fecha_sal", typeof(System.DateTime));
    
            var fecha_llegParameter = fecha_lleg.HasValue ?
                new ObjectParameter("fecha_lleg", fecha_lleg) :
                new ObjectParameter("fecha_lleg", typeof(System.DateTime));
    
            var co_consigParameter = co_consig != null ?
                new ObjectParameter("co_consig", co_consig) :
                new ObjectParameter("co_consig", typeof(string));
    
            var des_consigParameter = des_consig != null ?
                new ObjectParameter("des_consig", des_consig) :
                new ObjectParameter("des_consig", typeof(string));
    
            var pto_salParameter = pto_sal != null ?
                new ObjectParameter("pto_sal", pto_sal) :
                new ObjectParameter("pto_sal", typeof(string));
    
            var pto_llegParameter = pto_lleg != null ?
                new ObjectParameter("pto_lleg", pto_lleg) :
                new ObjectParameter("pto_lleg", typeof(string));
    
            var co_navieraParameter = co_naviera != null ?
                new ObjectParameter("co_naviera", co_naviera) :
                new ObjectParameter("co_naviera", typeof(string));
    
            var co_shipperParameter = co_shipper != null ?
                new ObjectParameter("co_shipper", co_shipper) :
                new ObjectParameter("co_shipper", typeof(string));
    
            var shipper_desParameter = shipper_des != null ?
                new ObjectParameter("shipper_des", shipper_des) :
                new ObjectParameter("shipper_des", typeof(string));
    
            var c20pParameter = c20p.HasValue ?
                new ObjectParameter("c20p", c20p) :
                new ObjectParameter("c20p", typeof(int));
    
            var c40pParameter = c40p.HasValue ?
                new ObjectParameter("c40p", c40p) :
                new ObjectParameter("c40p", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarEmbarque", blParameter, fecha_salParameter, fecha_llegParameter, co_consigParameter, des_consigParameter, pto_salParameter, pto_llegParameter, co_navieraParameter, co_shipperParameter, shipper_desParameter, c20pParameter, c40pParameter);
        }
    
        public virtual ObjectResult<pODCinfo_Result> pODCinfo(string empresa, Nullable<int> fact_num)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pODCinfo_Result>("pODCinfo", empresaParameter, fact_numParameter);
        }
    
        public virtual ObjectResult<pEdoCtaxViaje_Result> pEdoCtaxViaje(string empresa, Nullable<int> nro_viaje)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var nro_viajeParameter = nro_viaje.HasValue ?
                new ObjectParameter("nro_viaje", nro_viaje) :
                new ObjectParameter("nro_viaje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pEdoCtaxViaje_Result>("pEdoCtaxViaje", empresaParameter, nro_viajeParameter);
        }
    
        public virtual int pActualizarNaviera(string co_naviera, string navi_des, string empresa, string emp_des, string co_prov, string prov_des, byte[] validador)
        {
            var co_navieraParameter = co_naviera != null ?
                new ObjectParameter("co_naviera", co_naviera) :
                new ObjectParameter("co_naviera", typeof(string));
    
            var navi_desParameter = navi_des != null ?
                new ObjectParameter("navi_des", navi_des) :
                new ObjectParameter("navi_des", typeof(string));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var emp_desParameter = emp_des != null ?
                new ObjectParameter("emp_des", emp_des) :
                new ObjectParameter("emp_des", typeof(string));
    
            var co_provParameter = co_prov != null ?
                new ObjectParameter("co_prov", co_prov) :
                new ObjectParameter("co_prov", typeof(string));
    
            var prov_desParameter = prov_des != null ?
                new ObjectParameter("prov_des", prov_des) :
                new ObjectParameter("prov_des", typeof(string));
    
            var validadorParameter = validador != null ?
                new ObjectParameter("validador", validador) :
                new ObjectParameter("validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarNaviera", co_navieraParameter, navi_desParameter, empresaParameter, emp_desParameter, co_provParameter, prov_desParameter, validadorParameter);
        }
    
        public virtual int pEliminarNaviera(byte[] validador)
        {
            var validadorParameter = validador != null ?
                new ObjectParameter("validador", validador) :
                new ObjectParameter("validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarNaviera", validadorParameter);
        }
    
        public virtual int pInsertarNaviera(string co_naviera, string navi_des, string empresa, string emp_des, string co_prov, string prov_des)
        {
            var co_navieraParameter = co_naviera != null ?
                new ObjectParameter("co_naviera", co_naviera) :
                new ObjectParameter("co_naviera", typeof(string));
    
            var navi_desParameter = navi_des != null ?
                new ObjectParameter("navi_des", navi_des) :
                new ObjectParameter("navi_des", typeof(string));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var emp_desParameter = emp_des != null ?
                new ObjectParameter("emp_des", emp_des) :
                new ObjectParameter("emp_des", typeof(string));
    
            var co_provParameter = co_prov != null ?
                new ObjectParameter("co_prov", co_prov) :
                new ObjectParameter("co_prov", typeof(string));
    
            var prov_desParameter = prov_des != null ?
                new ObjectParameter("prov_des", prov_des) :
                new ObjectParameter("prov_des", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarNaviera", co_navieraParameter, navi_desParameter, empresaParameter, emp_desParameter, co_provParameter, prov_desParameter);
        }
    
        public virtual ObjectResult<pSeleccionarNaviera_Result> pSeleccionarNaviera(string co_naviera)
        {
            var co_navieraParameter = co_naviera != null ?
                new ObjectParameter("co_naviera", co_naviera) :
                new ObjectParameter("co_naviera", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarNaviera_Result>("pSeleccionarNaviera", co_navieraParameter);
        }
    
        public virtual ObjectResult<pSeleccionarProv_Result> pSeleccionarProv(string empresa, string prov)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var provParameter = prov != null ?
                new ObjectParameter("prov", prov) :
                new ObjectParameter("prov", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarProv_Result>("pSeleccionarProv", empresaParameter, provParameter);
        }
    
        public virtual ObjectResult<pMonitorContenedores_Result> pMonitorContenedores(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pMonitorContenedores_Result>("pMonitorContenedores", desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<pRemb_Info_Result> pRemb_Info(Nullable<int> nro_viaje)
        {
            var nro_viajeParameter = nro_viaje.HasValue ?
                new ObjectParameter("nro_viaje", nro_viaje) :
                new ObjectParameter("nro_viaje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pRemb_Info_Result>("pRemb_Info", nro_viajeParameter);
        }
    
        public virtual int pActualizarEmpresa(string co_empresa, string des_emp, string email, byte[] clave, string servidor, Nullable<int> puerto, Nullable<int> ssl, string almacen, byte[] validador, string co_tran, string forma_pag, string moneda, string co_sucu)
        {
            var co_empresaParameter = co_empresa != null ?
                new ObjectParameter("Co_empresa", co_empresa) :
                new ObjectParameter("Co_empresa", typeof(string));
    
            var des_empParameter = des_emp != null ?
                new ObjectParameter("des_emp", des_emp) :
                new ObjectParameter("des_emp", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(byte[]));
    
            var servidorParameter = servidor != null ?
                new ObjectParameter("servidor", servidor) :
                new ObjectParameter("servidor", typeof(string));
    
            var puertoParameter = puerto.HasValue ?
                new ObjectParameter("puerto", puerto) :
                new ObjectParameter("puerto", typeof(int));
    
            var sslParameter = ssl.HasValue ?
                new ObjectParameter("ssl", ssl) :
                new ObjectParameter("ssl", typeof(int));
    
            var almacenParameter = almacen != null ?
                new ObjectParameter("almacen", almacen) :
                new ObjectParameter("almacen", typeof(string));
    
            var validadorParameter = validador != null ?
                new ObjectParameter("validador", validador) :
                new ObjectParameter("validador", typeof(byte[]));
    
            var co_tranParameter = co_tran != null ?
                new ObjectParameter("co_tran", co_tran) :
                new ObjectParameter("co_tran", typeof(string));
    
            var forma_pagParameter = forma_pag != null ?
                new ObjectParameter("forma_pag", forma_pag) :
                new ObjectParameter("forma_pag", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(string));
    
            var co_sucuParameter = co_sucu != null ?
                new ObjectParameter("co_sucu", co_sucu) :
                new ObjectParameter("co_sucu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarEmpresa", co_empresaParameter, des_empParameter, emailParameter, claveParameter, servidorParameter, puertoParameter, sslParameter, almacenParameter, validadorParameter, co_tranParameter, forma_pagParameter, monedaParameter, co_sucuParameter);
        }
    
        public virtual int pEliminarEmpresa(byte[] validador)
        {
            var validadorParameter = validador != null ?
                new ObjectParameter("validador", validador) :
                new ObjectParameter("validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarEmpresa", validadorParameter);
        }
    
        public virtual int pInsertarEmpresa(string co_empresa, string des_emp, string email, string servidor, Nullable<int> puerto, Nullable<int> ssl, byte[] clave, string almacen, string co_tran, string forma_pag, string moneda, string co_sucu)
        {
            var co_empresaParameter = co_empresa != null ?
                new ObjectParameter("co_empresa", co_empresa) :
                new ObjectParameter("co_empresa", typeof(string));
    
            var des_empParameter = des_emp != null ?
                new ObjectParameter("des_emp", des_emp) :
                new ObjectParameter("des_emp", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var servidorParameter = servidor != null ?
                new ObjectParameter("servidor", servidor) :
                new ObjectParameter("servidor", typeof(string));
    
            var puertoParameter = puerto.HasValue ?
                new ObjectParameter("puerto", puerto) :
                new ObjectParameter("puerto", typeof(int));
    
            var sslParameter = ssl.HasValue ?
                new ObjectParameter("ssl", ssl) :
                new ObjectParameter("ssl", typeof(int));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(byte[]));
    
            var almacenParameter = almacen != null ?
                new ObjectParameter("almacen", almacen) :
                new ObjectParameter("almacen", typeof(string));
    
            var co_tranParameter = co_tran != null ?
                new ObjectParameter("co_tran", co_tran) :
                new ObjectParameter("co_tran", typeof(string));
    
            var forma_pagParameter = forma_pag != null ?
                new ObjectParameter("forma_pag", forma_pag) :
                new ObjectParameter("forma_pag", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(string));
    
            var co_sucuParameter = co_sucu != null ?
                new ObjectParameter("co_sucu", co_sucu) :
                new ObjectParameter("co_sucu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarEmpresa", co_empresaParameter, des_empParameter, emailParameter, servidorParameter, puertoParameter, sslParameter, claveParameter, almacenParameter, co_tranParameter, forma_pagParameter, monedaParameter, co_sucuParameter);
        }
    
        public virtual ObjectResult<pSeleccionarEmpresa_Result> pSeleccionarEmpresa(string co_empresa)
        {
            var co_empresaParameter = co_empresa != null ?
                new ObjectParameter("co_empresa", co_empresa) :
                new ObjectParameter("co_empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarEmpresa_Result>("pSeleccionarEmpresa", co_empresaParameter);
        }
    
        public virtual int pActualizarUsuarios(string co_usuario, string nombre, Nullable<int> tipo, string co_rdv, byte[] clave, byte[] ilustracion, byte[] validador, Nullable<int> p_nav, Nullable<int> p_emp, Nullable<int> p_con, Nullable<int> p_mco, Nullable<int> p_usu, Nullable<int> p_pst, Nullable<int> p_art, Nullable<int> p_clave, Nullable<int> p_malm, Nullable<int> p_ord, Nullable<int> p_pped, Nullable<int> p_cxc, Nullable<int> p_regrep, Nullable<int> p_envrep, Nullable<int> p_rep)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var co_rdvParameter = co_rdv != null ?
                new ObjectParameter("co_rdv", co_rdv) :
                new ObjectParameter("co_rdv", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(byte[]));
    
            var ilustracionParameter = ilustracion != null ?
                new ObjectParameter("ilustracion", ilustracion) :
                new ObjectParameter("ilustracion", typeof(byte[]));
    
            var validadorParameter = validador != null ?
                new ObjectParameter("Validador", validador) :
                new ObjectParameter("Validador", typeof(byte[]));
    
            var p_navParameter = p_nav.HasValue ?
                new ObjectParameter("p_nav", p_nav) :
                new ObjectParameter("p_nav", typeof(int));
    
            var p_empParameter = p_emp.HasValue ?
                new ObjectParameter("p_emp", p_emp) :
                new ObjectParameter("p_emp", typeof(int));
    
            var p_conParameter = p_con.HasValue ?
                new ObjectParameter("p_con", p_con) :
                new ObjectParameter("p_con", typeof(int));
    
            var p_mcoParameter = p_mco.HasValue ?
                new ObjectParameter("p_mco", p_mco) :
                new ObjectParameter("p_mco", typeof(int));
    
            var p_usuParameter = p_usu.HasValue ?
                new ObjectParameter("p_usu", p_usu) :
                new ObjectParameter("p_usu", typeof(int));
    
            var p_pstParameter = p_pst.HasValue ?
                new ObjectParameter("p_pst", p_pst) :
                new ObjectParameter("p_pst", typeof(int));
    
            var p_artParameter = p_art.HasValue ?
                new ObjectParameter("p_art", p_art) :
                new ObjectParameter("p_art", typeof(int));
    
            var p_claveParameter = p_clave.HasValue ?
                new ObjectParameter("p_clave", p_clave) :
                new ObjectParameter("p_clave", typeof(int));
    
            var p_malmParameter = p_malm.HasValue ?
                new ObjectParameter("p_malm", p_malm) :
                new ObjectParameter("p_malm", typeof(int));
    
            var p_ordParameter = p_ord.HasValue ?
                new ObjectParameter("p_ord", p_ord) :
                new ObjectParameter("p_ord", typeof(int));
    
            var p_ppedParameter = p_pped.HasValue ?
                new ObjectParameter("p_pped", p_pped) :
                new ObjectParameter("p_pped", typeof(int));
    
            var p_cxcParameter = p_cxc.HasValue ?
                new ObjectParameter("p_cxc", p_cxc) :
                new ObjectParameter("p_cxc", typeof(int));
    
            var p_regrepParameter = p_regrep.HasValue ?
                new ObjectParameter("p_regrep", p_regrep) :
                new ObjectParameter("p_regrep", typeof(int));
    
            var p_envrepParameter = p_envrep.HasValue ?
                new ObjectParameter("p_envrep", p_envrep) :
                new ObjectParameter("p_envrep", typeof(int));
    
            var p_repParameter = p_rep.HasValue ?
                new ObjectParameter("p_rep", p_rep) :
                new ObjectParameter("p_rep", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarUsuarios", co_usuarioParameter, nombreParameter, tipoParameter, co_rdvParameter, claveParameter, ilustracionParameter, validadorParameter, p_navParameter, p_empParameter, p_conParameter, p_mcoParameter, p_usuParameter, p_pstParameter, p_artParameter, p_claveParameter, p_malmParameter, p_ordParameter, p_ppedParameter, p_cxcParameter, p_regrepParameter, p_envrepParameter, p_repParameter);
        }
    
        public virtual int pEliminarUsu_Emp(string co_usuario)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarUsu_Emp", co_usuarioParameter);
        }
    
        public virtual int pEliminarUsuario(byte[] validador)
        {
            var validadorParameter = validador != null ?
                new ObjectParameter("Validador", validador) :
                new ObjectParameter("Validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarUsuario", validadorParameter);
        }
    
        public virtual int pInsertarUsu_Emp(string co_usuario, string co_empresa)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            var co_empresaParameter = co_empresa != null ?
                new ObjectParameter("Co_empresa", co_empresa) :
                new ObjectParameter("Co_empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarUsu_Emp", co_usuarioParameter, co_empresaParameter);
        }
    
        public virtual int pInsertarUsuario(string co_usuario, string nombre, Nullable<int> tipo, byte[] clave, string co_rdv, byte[] ilustracion, Nullable<int> p_nav, Nullable<int> p_emp, Nullable<int> p_con, Nullable<int> p_mco, Nullable<int> p_usu, Nullable<int> p_pst, Nullable<int> p_art, Nullable<int> p_clave, Nullable<int> p_malm, Nullable<int> p_ord, Nullable<int> p_pped, Nullable<int> p_cxc, Nullable<int> p_regrep, Nullable<int> p_envrep, Nullable<int> p_rep)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(byte[]));
    
            var co_rdvParameter = co_rdv != null ?
                new ObjectParameter("co_rdv", co_rdv) :
                new ObjectParameter("co_rdv", typeof(string));
    
            var ilustracionParameter = ilustracion != null ?
                new ObjectParameter("ilustracion", ilustracion) :
                new ObjectParameter("ilustracion", typeof(byte[]));
    
            var p_navParameter = p_nav.HasValue ?
                new ObjectParameter("p_nav", p_nav) :
                new ObjectParameter("p_nav", typeof(int));
    
            var p_empParameter = p_emp.HasValue ?
                new ObjectParameter("p_emp", p_emp) :
                new ObjectParameter("p_emp", typeof(int));
    
            var p_conParameter = p_con.HasValue ?
                new ObjectParameter("p_con", p_con) :
                new ObjectParameter("p_con", typeof(int));
    
            var p_mcoParameter = p_mco.HasValue ?
                new ObjectParameter("p_mco", p_mco) :
                new ObjectParameter("p_mco", typeof(int));
    
            var p_usuParameter = p_usu.HasValue ?
                new ObjectParameter("p_usu", p_usu) :
                new ObjectParameter("p_usu", typeof(int));
    
            var p_pstParameter = p_pst.HasValue ?
                new ObjectParameter("p_pst", p_pst) :
                new ObjectParameter("p_pst", typeof(int));
    
            var p_artParameter = p_art.HasValue ?
                new ObjectParameter("p_art", p_art) :
                new ObjectParameter("p_art", typeof(int));
    
            var p_claveParameter = p_clave.HasValue ?
                new ObjectParameter("p_clave", p_clave) :
                new ObjectParameter("p_clave", typeof(int));
    
            var p_malmParameter = p_malm.HasValue ?
                new ObjectParameter("p_malm", p_malm) :
                new ObjectParameter("p_malm", typeof(int));
    
            var p_ordParameter = p_ord.HasValue ?
                new ObjectParameter("p_ord", p_ord) :
                new ObjectParameter("p_ord", typeof(int));
    
            var p_ppedParameter = p_pped.HasValue ?
                new ObjectParameter("p_pped", p_pped) :
                new ObjectParameter("p_pped", typeof(int));
    
            var p_cxcParameter = p_cxc.HasValue ?
                new ObjectParameter("p_cxc", p_cxc) :
                new ObjectParameter("p_cxc", typeof(int));
    
            var p_regrepParameter = p_regrep.HasValue ?
                new ObjectParameter("p_regrep", p_regrep) :
                new ObjectParameter("p_regrep", typeof(int));
    
            var p_envrepParameter = p_envrep.HasValue ?
                new ObjectParameter("p_envrep", p_envrep) :
                new ObjectParameter("p_envrep", typeof(int));
    
            var p_repParameter = p_rep.HasValue ?
                new ObjectParameter("p_rep", p_rep) :
                new ObjectParameter("p_rep", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarUsuario", co_usuarioParameter, nombreParameter, tipoParameter, claveParameter, co_rdvParameter, ilustracionParameter, p_navParameter, p_empParameter, p_conParameter, p_mcoParameter, p_usuParameter, p_pstParameter, p_artParameter, p_claveParameter, p_malmParameter, p_ordParameter, p_ppedParameter, p_cxcParameter, p_regrepParameter, p_envrepParameter, p_repParameter);
        }
    
        public virtual ObjectResult<pSeleccionarUsuario_Result> pSeleccionarUsuario(string co_usuario)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarUsuario_Result>("pSeleccionarUsuario", co_usuarioParameter);
        }
    
        public virtual ObjectResult<pSeleccionarEmpresasCA_Result> pSeleccionarEmpresasCA(string co_usuario)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarEmpresasCA_Result>("pSeleccionarEmpresasCA", co_usuarioParameter);
        }
    
        public virtual ObjectResult<pSeleccionarEmpresasSA_Result> pSeleccionarEmpresasSA(string co_usuario)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarEmpresasSA_Result>("pSeleccionarEmpresasSA", co_usuarioParameter);
        }
    
        public virtual ObjectResult<pImportarODC_Result1> pImportarODC(string empresa, Nullable<int> fact_num)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pImportarODC_Result1>("pImportarODC", empresaParameter, fact_numParameter);
        }
    
        public virtual int pActualizarPantalla_Stock(string emp_Art, string almacen, byte[] validador)
        {
            var emp_ArtParameter = emp_Art != null ?
                new ObjectParameter("Emp_Art", emp_Art) :
                new ObjectParameter("Emp_Art", typeof(string));
    
            var almacenParameter = almacen != null ?
                new ObjectParameter("Almacen", almacen) :
                new ObjectParameter("Almacen", typeof(string));
    
            var validadorParameter = validador != null ?
                new ObjectParameter("Validador", validador) :
                new ObjectParameter("Validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarPantalla_Stock", emp_ArtParameter, almacenParameter, validadorParameter);
        }
    
        public virtual int pEliminarPantalla_Stock(byte[] validador)
        {
            var validadorParameter = validador != null ?
                new ObjectParameter("Validador", validador) :
                new ObjectParameter("Validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarPantalla_Stock", validadorParameter);
        }
    
        public virtual int pInsertarPantalla_Stock(string co_usuario, string emp_Art, string alm)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            var emp_ArtParameter = emp_Art != null ?
                new ObjectParameter("Emp_Art", emp_Art) :
                new ObjectParameter("Emp_Art", typeof(string));
    
            var almParameter = alm != null ?
                new ObjectParameter("Alm", alm) :
                new ObjectParameter("Alm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarPantalla_Stock", co_usuarioParameter, emp_ArtParameter, almParameter);
        }
    
        public virtual ObjectResult<pSeleccionarPantalla_Stock_Result> pSeleccionarPantalla_Stock(string co_usuario)
        {
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("Co_usuario", co_usuario) :
                new ObjectParameter("Co_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarPantalla_Stock_Result>("pSeleccionarPantalla_Stock", co_usuarioParameter);
        }
    
        public virtual ObjectResult<pSeleccionarAlmacenEmpresa_Result> pSeleccionarAlmacenEmpresa(string almacen, string empresa)
        {
            var almacenParameter = almacen != null ?
                new ObjectParameter("Almacen", almacen) :
                new ObjectParameter("Almacen", typeof(string));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarAlmacenEmpresa_Result>("pSeleccionarAlmacenEmpresa", almacenParameter, empresaParameter);
        }
    
        public virtual ObjectResult<pPedidosPendientes_Result> pPedidosPendientes(string empresa, string almacen, string co_art)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var almacenParameter = almacen != null ?
                new ObjectParameter("Almacen", almacen) :
                new ObjectParameter("Almacen", typeof(string));
    
            var co_artParameter = co_art != null ?
                new ObjectParameter("Co_art", co_art) :
                new ObjectParameter("Co_art", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pPedidosPendientes_Result>("pPedidosPendientes", empresaParameter, almacenParameter, co_artParameter);
        }
    
        public virtual ObjectResult<pUltimasFacturas_Result> pUltimasFacturas(string empresa, string almacen, string co_art)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var almacenParameter = almacen != null ?
                new ObjectParameter("Almacen", almacen) :
                new ObjectParameter("Almacen", typeof(string));
    
            var co_artParameter = co_art != null ?
                new ObjectParameter("Co_art", co_art) :
                new ObjectParameter("Co_art", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pUltimasFacturas_Result>("pUltimasFacturas", empresaParameter, almacenParameter, co_artParameter);
        }
    
        public virtual ObjectResult<pSeleccionarStock_Result> pSeleccionarStock(string empresa, string almacen, string co_art)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var almacenParameter = almacen != null ?
                new ObjectParameter("Almacen", almacen) :
                new ObjectParameter("Almacen", typeof(string));
    
            var co_artParameter = co_art != null ?
                new ObjectParameter("Co_art", co_art) :
                new ObjectParameter("Co_art", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarStock_Result>("pSeleccionarStock", empresaParameter, almacenParameter, co_artParameter);
        }
    
        public virtual ObjectResult<pSeleccionarArticulo_Result> pSeleccionarArticulo(string empresa, string co_art)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var co_artParameter = co_art != null ?
                new ObjectParameter("Co_art", co_art) :
                new ObjectParameter("Co_art", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarArticulo_Result>("pSeleccionarArticulo", empresaParameter, co_artParameter);
        }
    
        public virtual ObjectResult<pUsuariosProfit_Result> pUsuariosProfit()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pUsuariosProfit_Result>("pUsuariosProfit");
        }
    
        public virtual int pAnulaClave(string rowguid)
        {
            var rowguidParameter = rowguid != null ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pAnulaClave", rowguidParameter);
        }
    
        public virtual int pInsertarGene_Claves(string clave, string co_usuario, string empresa, Nullable<System.DateTime> fec_venc, Nullable<int> cantidad)
        {
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("co_usuario", co_usuario) :
                new ObjectParameter("co_usuario", typeof(string));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var fec_vencParameter = fec_venc.HasValue ?
                new ObjectParameter("fec_venc", fec_venc) :
                new ObjectParameter("fec_venc", typeof(System.DateTime));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarGene_Claves", claveParameter, co_usuarioParameter, empresaParameter, fec_vencParameter, cantidadParameter);
        }
    
        public virtual ObjectResult<pSeleccionarDocumentosClave_Result> pSeleccionarDocumentosClave(string clave, string co_usuario, string empresa)
        {
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            var co_usuarioParameter = co_usuario != null ?
                new ObjectParameter("co_usuario", co_usuario) :
                new ObjectParameter("co_usuario", typeof(string));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarDocumentosClave_Result>("pSeleccionarDocumentosClave", claveParameter, co_usuarioParameter, empresaParameter);
        }
    
        public virtual ObjectResult<pSeleccionarGene_Claves_Result> pSeleccionarGene_Claves()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarGene_Claves_Result>("pSeleccionarGene_Claves");
        }
    
        public virtual ObjectResult<pTrabAlm_Result> pTrabAlm(string tipo)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pTrabAlm_Result>("pTrabAlm", tipoParameter);
        }
    
        public virtual ObjectResult<pPedidosAlm_Result> pPedidosAlm(string empresa, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<bool> condicion, string ubicacion)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var condicionParameter = condicion.HasValue ?
                new ObjectParameter("condicion", condicion) :
                new ObjectParameter("condicion", typeof(bool));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pPedidosAlm_Result>("pPedidosAlm", empresaParameter, desdeParameter, hastaParameter, condicionParameter, ubicacionParameter);
        }
    
        public virtual ObjectResult<pRengPedAlm_Result> pRengPedAlm(string empresa, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pRengPedAlm_Result>("pRengPedAlm", empresaParameter, desdeParameter, hastaParameter);
        }
    
        public virtual int pActualizarPedido(string empresa, Nullable<int> fact_num, string entrega, string recibe)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            var entregaParameter = entrega != null ?
                new ObjectParameter("Entrega", entrega) :
                new ObjectParameter("Entrega", typeof(string));
    
            var recibeParameter = recibe != null ?
                new ObjectParameter("Recibe", recibe) :
                new ObjectParameter("Recibe", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarPedido", empresaParameter, fact_numParameter, entregaParameter, recibeParameter);
        }
    
        public virtual ObjectResult<pPedidosRet_Result> pPedidosRet(string empresa, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pPedidosRet_Result>("pPedidosRet", empresaParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<pRengPedRet_Result> pRengPedRet(string empresa, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pRengPedRet_Result>("pRengPedRet", empresaParameter, desdeParameter, hastaParameter);
        }
    
        public virtual int pActualizarOrdenes(Nullable<int> fact_num, string empresa, string co_prov, string prov_des, Nullable<System.DateTime> fecha, string observ, Nullable<int> status, Nullable<bool> anulado, Nullable<decimal> total_net, byte[] validador)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var co_provParameter = co_prov != null ?
                new ObjectParameter("co_prov", co_prov) :
                new ObjectParameter("co_prov", typeof(string));
    
            var prov_desParameter = prov_des != null ?
                new ObjectParameter("prov_des", prov_des) :
                new ObjectParameter("prov_des", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var observParameter = observ != null ?
                new ObjectParameter("observ", observ) :
                new ObjectParameter("observ", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var anuladoParameter = anulado.HasValue ?
                new ObjectParameter("anulado", anulado) :
                new ObjectParameter("anulado", typeof(bool));
    
            var total_netParameter = total_net.HasValue ?
                new ObjectParameter("total_net", total_net) :
                new ObjectParameter("total_net", typeof(decimal));
    
            var validadorParameter = validador != null ?
                new ObjectParameter("validador", validador) :
                new ObjectParameter("validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarOrdenes", fact_numParameter, empresaParameter, co_provParameter, prov_desParameter, fechaParameter, observParameter, statusParameter, anuladoParameter, total_netParameter, validadorParameter);
        }
    
        public virtual int pActualizarOrdenes_Reng(Nullable<int> fact_num, Nullable<int> reng_num, string co_art, string art_des, Nullable<decimal> total_art, Nullable<decimal> precio, Nullable<decimal> pendiente, byte[] validador)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            var reng_numParameter = reng_num.HasValue ?
                new ObjectParameter("reng_num", reng_num) :
                new ObjectParameter("reng_num", typeof(int));
    
            var co_artParameter = co_art != null ?
                new ObjectParameter("co_art", co_art) :
                new ObjectParameter("co_art", typeof(string));
    
            var art_desParameter = art_des != null ?
                new ObjectParameter("art_des", art_des) :
                new ObjectParameter("art_des", typeof(string));
    
            var total_artParameter = total_art.HasValue ?
                new ObjectParameter("total_art", total_art) :
                new ObjectParameter("total_art", typeof(decimal));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            var pendienteParameter = pendiente.HasValue ?
                new ObjectParameter("pendiente", pendiente) :
                new ObjectParameter("pendiente", typeof(decimal));
    
            var validadorParameter = validador != null ?
                new ObjectParameter("validador", validador) :
                new ObjectParameter("validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarOrdenes_Reng", fact_numParameter, reng_numParameter, co_artParameter, art_desParameter, total_artParameter, precioParameter, pendienteParameter, validadorParameter);
        }
    
        public virtual int pEliminarOrdenes(byte[] validador)
        {
            var validadorParameter = validador != null ?
                new ObjectParameter("validador", validador) :
                new ObjectParameter("validador", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarOrdenes", validadorParameter);
        }
    
        public virtual int pEliminarReng_Ordenes(Nullable<int> fact_num)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarReng_Ordenes", fact_numParameter);
        }
    
        public virtual int pInsertarOrdenes(Nullable<int> fact_num, string empresa, string co_prov, string prov_des, Nullable<System.DateTime> fecha, string observ, Nullable<int> status, Nullable<decimal> total_net)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var co_provParameter = co_prov != null ?
                new ObjectParameter("co_prov", co_prov) :
                new ObjectParameter("co_prov", typeof(string));
    
            var prov_desParameter = prov_des != null ?
                new ObjectParameter("prov_des", prov_des) :
                new ObjectParameter("prov_des", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var observParameter = observ != null ?
                new ObjectParameter("observ", observ) :
                new ObjectParameter("observ", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var total_netParameter = total_net.HasValue ?
                new ObjectParameter("total_net", total_net) :
                new ObjectParameter("total_net", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarOrdenes", fact_numParameter, empresaParameter, co_provParameter, prov_desParameter, fechaParameter, observParameter, statusParameter, total_netParameter);
        }
    
        public virtual int pInsertarOrdenes_Reng(Nullable<int> fact_num, Nullable<int> reng_num, string co_art, string art_des, Nullable<decimal> total_art, Nullable<decimal> precio, Nullable<decimal> pendiente)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            var reng_numParameter = reng_num.HasValue ?
                new ObjectParameter("reng_num", reng_num) :
                new ObjectParameter("reng_num", typeof(int));
    
            var co_artParameter = co_art != null ?
                new ObjectParameter("co_art", co_art) :
                new ObjectParameter("co_art", typeof(string));
    
            var art_desParameter = art_des != null ?
                new ObjectParameter("art_des", art_des) :
                new ObjectParameter("art_des", typeof(string));
    
            var total_artParameter = total_art.HasValue ?
                new ObjectParameter("total_art", total_art) :
                new ObjectParameter("total_art", typeof(decimal));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            var pendienteParameter = pendiente.HasValue ?
                new ObjectParameter("pendiente", pendiente) :
                new ObjectParameter("pendiente", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarOrdenes_Reng", fact_numParameter, reng_numParameter, co_artParameter, art_desParameter, total_artParameter, precioParameter, pendienteParameter);
        }
    
        public virtual ObjectResult<pSeleccionarOrdenes_Result> pSeleccionarOrdenes(Nullable<int> fact_num)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarOrdenes_Result>("pSeleccionarOrdenes", fact_numParameter);
        }
    
        public virtual ObjectResult<pSeleccionarOrdenes_Reng_Result> pSeleccionarOrdenes_Reng(Nullable<int> fact_num)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarOrdenes_Reng_Result>("pSeleccionarOrdenes_Reng", fact_numParameter);
        }
    
        public virtual int pActualizarConsecutivo(string sCampo, string sCampoOri, Nullable<int> iValor, string sCo_Us_Mo, byte[] tsValidadorOri)
        {
            var sCampoParameter = sCampo != null ?
                new ObjectParameter("sCampo", sCampo) :
                new ObjectParameter("sCampo", typeof(string));
    
            var sCampoOriParameter = sCampoOri != null ?
                new ObjectParameter("sCampoOri", sCampoOri) :
                new ObjectParameter("sCampoOri", typeof(string));
    
            var iValorParameter = iValor.HasValue ?
                new ObjectParameter("iValor", iValor) :
                new ObjectParameter("iValor", typeof(int));
    
            var sCo_Us_MoParameter = sCo_Us_Mo != null ?
                new ObjectParameter("sCo_Us_Mo", sCo_Us_Mo) :
                new ObjectParameter("sCo_Us_Mo", typeof(string));
    
            var tsValidadorOriParameter = tsValidadorOri != null ?
                new ObjectParameter("tsValidadorOri", tsValidadorOri) :
                new ObjectParameter("tsValidadorOri", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarConsecutivo", sCampoParameter, sCampoOriParameter, iValorParameter, sCo_Us_MoParameter, tsValidadorOriParameter);
        }
    
        public virtual int pObtenerProximoNumero(string sTabla, string sCampo, string sPrefijo)
        {
            var sTablaParameter = sTabla != null ?
                new ObjectParameter("sTabla", sTabla) :
                new ObjectParameter("sTabla", typeof(string));
    
            var sCampoParameter = sCampo != null ?
                new ObjectParameter("sCampo", sCampo) :
                new ObjectParameter("sCampo", typeof(string));
    
            var sPrefijoParameter = sPrefijo != null ?
                new ObjectParameter("sPrefijo", sPrefijo) :
                new ObjectParameter("sPrefijo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pObtenerProximoNumero", sTablaParameter, sCampoParameter, sPrefijoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> pObtenerProximoConsecutivo(string sCampo)
        {
            var sCampoParameter = sCampo != null ?
                new ObjectParameter("sCampo", sCampo) :
                new ObjectParameter("sCampo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("pObtenerProximoConsecutivo", sCampoParameter);
        }
    
        public virtual ObjectResult<pRepTicket_Pedido_Result> pRepTicket_Pedido(string rowguid)
        {
            var rowguidParameter = rowguid != null ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pRepTicket_Pedido_Result>("pRepTicket_Pedido", rowguidParameter);
        }
    
        public virtual ObjectResult<pSeleccionarPed_Desp_Result> pSeleccionarPed_Desp(string empresa, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<int> condicion, Nullable<int> status, Nullable<bool> anulado)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var condicionParameter = condicion.HasValue ?
                new ObjectParameter("Condicion", condicion) :
                new ObjectParameter("Condicion", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var anuladoParameter = anulado.HasValue ?
                new ObjectParameter("Anulado", anulado) :
                new ObjectParameter("Anulado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarPed_Desp_Result>("pSeleccionarPed_Desp", empresaParameter, desdeParameter, hastaParameter, condicionParameter, statusParameter, anuladoParameter);
        }
    
        public virtual int pInsertarIg_Pedido(string empresa, string nomina, string cod_emp, string nombre_completo, Nullable<System.DateTime> fecha, Nullable<int> fact_num, Nullable<System.DateTime> f_ini, Nullable<System.DateTime> f_fin, string observa, Nullable<bool> anulado, Nullable<System.Guid> rowgpedido)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var nominaParameter = nomina != null ?
                new ObjectParameter("nomina", nomina) :
                new ObjectParameter("nomina", typeof(string));
    
            var cod_empParameter = cod_emp != null ?
                new ObjectParameter("cod_emp", cod_emp) :
                new ObjectParameter("cod_emp", typeof(string));
    
            var nombre_completoParameter = nombre_completo != null ?
                new ObjectParameter("nombre_completo", nombre_completo) :
                new ObjectParameter("nombre_completo", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("fact_num", fact_num) :
                new ObjectParameter("fact_num", typeof(int));
    
            var f_iniParameter = f_ini.HasValue ?
                new ObjectParameter("f_ini", f_ini) :
                new ObjectParameter("f_ini", typeof(System.DateTime));
    
            var f_finParameter = f_fin.HasValue ?
                new ObjectParameter("f_fin", f_fin) :
                new ObjectParameter("f_fin", typeof(System.DateTime));
    
            var observaParameter = observa != null ?
                new ObjectParameter("observa", observa) :
                new ObjectParameter("observa", typeof(string));
    
            var anuladoParameter = anulado.HasValue ?
                new ObjectParameter("anulado", anulado) :
                new ObjectParameter("anulado", typeof(bool));
    
            var rowgpedidoParameter = rowgpedido.HasValue ?
                new ObjectParameter("rowgpedido", rowgpedido) :
                new ObjectParameter("rowgpedido", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarIg_Pedido", empresaParameter, nominaParameter, cod_empParameter, nombre_completoParameter, fechaParameter, fact_numParameter, f_iniParameter, f_finParameter, observaParameter, anuladoParameter, rowgpedidoParameter);
        }
    
        public virtual ObjectResult<pPedido_Etiquetas_Result> pPedido_Etiquetas(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pPedido_Etiquetas_Result>("pPedido_Etiquetas", rowguidParameter);
        }
    
        public virtual ObjectResult<pPedido_EtiquetasInfo_Result> pPedido_EtiquetasInfo(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pPedido_EtiquetasInfo_Result>("pPedido_EtiquetasInfo", rowguidParameter);
        }
    
        public virtual ObjectResult<pVerificarArticuloPedido_Result> pVerificarArticuloPedido(string co_art, Nullable<int> fact_num, string empresa)
        {
            var co_artParameter = co_art != null ?
                new ObjectParameter("Co_art", co_art) :
                new ObjectParameter("Co_art", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pVerificarArticuloPedido_Result>("pVerificarArticuloPedido", co_artParameter, fact_numParameter, empresaParameter);
        }
    
        public virtual int pMarcarPedidoImpreso(Nullable<int> fact_num, string empresa)
        {
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pMarcarPedidoImpreso", fact_numParameter, empresaParameter);
        }
    
        public virtual int pActualizaArticuloPreparado(string co_art, Nullable<decimal> aux01, Nullable<int> fact_num, string empresa)
        {
            var co_artParameter = co_art != null ?
                new ObjectParameter("Co_art", co_art) :
                new ObjectParameter("Co_art", typeof(string));
    
            var aux01Parameter = aux01.HasValue ?
                new ObjectParameter("Aux01", aux01) :
                new ObjectParameter("Aux01", typeof(decimal));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizaArticuloPreparado", co_artParameter, aux01Parameter, fact_numParameter, empresaParameter);
        }
    
        public virtual int pActualizarIg_pedido(string rowguid)
        {
            var rowguidParameter = rowguid != null ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pActualizarIg_pedido", rowguidParameter);
        }
    
        public virtual int pCulminarPedido(string empresa, Nullable<int> fact_num, string bultos)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var fact_numParameter = fact_num.HasValue ?
                new ObjectParameter("Fact_num", fact_num) :
                new ObjectParameter("Fact_num", typeof(int));
    
            var bultosParameter = bultos != null ?
                new ObjectParameter("Bultos", bultos) :
                new ObjectParameter("Bultos", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pCulminarPedido", empresaParameter, fact_numParameter, bultosParameter);
        }
    
        public virtual ObjectResult<pPedidoEnProc_Info_Result> pPedidoEnProc_Info(string rowguid)
        {
            var rowguidParameter = rowguid != null ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pPedidoEnProc_Info_Result>("pPedidoEnProc_Info", rowguidParameter);
        }
    
        public virtual ObjectResult<pDocumentos_CxC_Result> pDocumentos_CxC(string empresa, string rif)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var rifParameter = rif != null ?
                new ObjectParameter("Rif", rif) :
                new ObjectParameter("Rif", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pDocumentos_CxC_Result>("pDocumentos_CxC", empresaParameter, rifParameter);
        }
    
        public virtual ObjectResult<pEstadisticasCxC_Result> pEstadisticasCxC(string empresa, string rif)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var rifParameter = rif != null ?
                new ObjectParameter("Rif", rif) :
                new ObjectParameter("Rif", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pEstadisticasCxC_Result>("pEstadisticasCxC", empresaParameter, rifParameter);
        }
    
        public virtual ObjectResult<string> pConsultaRifCliente(string rif)
        {
            var rifParameter = rif != null ?
                new ObjectParameter("Rif", rif) :
                new ObjectParameter("Rif", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pConsultaRifCliente", rifParameter);
        }
    
        public virtual int pEliminarExcepcion_H(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("Rowguid", rowguid) :
                new ObjectParameter("Rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarExcepcion_H", rowguidParameter);
        }
    
        public virtual int pEliminarExcepcion_P(Nullable<System.Guid> rowguid)
        {
            var rowguidParameter = rowguid.HasValue ?
                new ObjectParameter("rowguid", rowguid) :
                new ObjectParameter("rowguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pEliminarExcepcion_P", rowguidParameter);
        }
    
        public virtual int pInsertarExcepcion_H(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarExcepcion_H", fechaParameter);
        }
    
        public virtual int pInsertarExcepcion_P(string empresa, string cod_emp, string nombre_completo, Nullable<bool> status, Nullable<System.DateTime> fecha, string motivo)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var cod_empParameter = cod_emp != null ?
                new ObjectParameter("cod_emp", cod_emp) :
                new ObjectParameter("cod_emp", typeof(string));
    
            var nombre_completoParameter = nombre_completo != null ?
                new ObjectParameter("nombre_completo", nombre_completo) :
                new ObjectParameter("nombre_completo", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var motivoParameter = motivo != null ?
                new ObjectParameter("motivo", motivo) :
                new ObjectParameter("motivo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsertarExcepcion_P", empresaParameter, cod_empParameter, nombre_completoParameter, statusParameter, fechaParameter, motivoParameter);
        }
    
        public virtual ObjectResult<pSeleccionarExcepcion_H_Result> pSeleccionarExcepcion_H()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarExcepcion_H_Result>("pSeleccionarExcepcion_H");
        }
    
        public virtual ObjectResult<pSeleccionarExcepcion_P_Result> pSeleccionarExcepcion_P()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSeleccionarExcepcion_P_Result>("pSeleccionarExcepcion_P");
        }
    
        public virtual ObjectResult<pNomiAsistentes_Result> pNomiAsistentes(Nullable<int> orden)
        {
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pNomiAsistentes_Result>("pNomiAsistentes", ordenParameter);
        }
    
        public virtual ObjectResult<pRepResumenVentasGerencial_Result> pRepResumenVentasGerencial(string grupo)
        {
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pRepResumenVentasGerencial_Result>("pRepResumenVentasGerencial", grupoParameter);
        }
    }
}
